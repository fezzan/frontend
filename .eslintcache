[{"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\index.js":"1","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\App.js":"2","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\serviceWorker.js":"3","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\configs\\AppConfig.js":"4","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\index.js":"5","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\redux\\store\\index.js":"6","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\configs\\EnvironmentConfig.js":"7","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\constants\\ThemeConstant.js":"8","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\redux\\reducers\\index.js":"9","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\lang\\index.js":"10","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\layouts\\auth-layout\\index.js":"11","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\layouts\\app-layout\\index.js":"12","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\redux\\reducers\\Auth.js":"13","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\redux\\reducers\\Theme.js":"14","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\lang\\entries\\ja_JP.js":"15","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\lang\\entries\\fr_FR.js":"16","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\redux\\constants\\Theme.js":"17","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\redux\\constants\\Auth.js":"18","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\configs\\NavigationConfig.js":"19","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\Footer.js":"20","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\HeaderNav.js":"21","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\PageHeader.js":"22","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\MobileNav.js":"23","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\utils\\index.js":"24","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\index.js":"25","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\shared-components\\Loading\\index.js":"26","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\Logo.js":"27","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\MenuContent.js":"28","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\NavPanel.js":"29","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\AppBreadcrumb.js":"30","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\redux\\actions\\Theme.js":"31","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\NavSearch\\index.js":"32","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\util-components\\IntlMessage\\index.js":"33","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\ThemeConfigurator.js":"34","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\level\\add\\index.js":"35","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\level\\index.js":"36","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\level\\edit\\index.js":"37","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\shared-components\\Flex\\index.js":"38","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\defined_rules\\add\\index.js":"39","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\defined_rules\\index.js":"40","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\defined_rules\\edit\\index.js":"41","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\util-components\\Icon\\index.js":"42","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\NavSearch\\SearchInput.js":"43","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\NavLanguage.js":"44","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\configs\\Endpoints.js":"45","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\auth\\FetchInterceptor.js":"46","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\shared-components\\ColorPicker\\index.js":"47","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\history.js":"48","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\tournament\\manage\\answerquestions.js":"49","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\tournament\\manage\\leaderboard.js":"50","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\auth-views\\components\\LoginForm.js":"51","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\rule\\index.js":"52","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\user\\index.js":"53","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\rule\\edit\\index.js":"54","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\rule\\add\\index.js":"55","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\question\\index.js":"56","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\question\\edit\\index.js":"57","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\game\\index.js":"58","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\question\\add\\index.js":"59","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\game\\edit\\index.js":"60","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\game\\add\\index.js":"61","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\tournament\\index.js":"62","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\tournament\\manage\\index.js":"63","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\prize\\add\\index.js":"64","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\prize\\edit\\index.js":"65","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\tournament\\add\\index.js":"66","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\tournament\\edit\\index.js":"67","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\category\\index.js":"68","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\round\\add\\index.js":"69","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\round\\edit\\index.js":"70","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\category\\add\\index.js":"71","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\category\\edit\\index.js":"72","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\feed\\index.js":"73","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\feed\\add\\index.js":"74","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\feed\\edit\\index.js":"75","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\sponsor\\index.js":"76","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\sponsor\\add\\index.js":"77","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\sponsor\\edit\\index.js":"78","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\charity\\index.js":"79","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\charity\\add\\index.js":"80","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\charity\\edit\\index.js":"81","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\activity\\index.js":"82","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\home\\index.js":"83","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\services\\JwtAuthService.js":"84","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\redux\\actions\\Auth.js":"85","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\lang\\entries\\zh_CN.js":"86","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\lang\\entries\\en_US.js":"87","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\TopNav.js":"88","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\SideNav.js":"89","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\auth-views\\index.js":"90","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\auth-views\\errors\\error-page-2\\index.js":"91","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\auth-views\\authentication\\login\\index.js":"92","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\auth-views\\errors\\error-page-1\\index.js":"93","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\auth-views\\authentication\\forgot-password\\index.js":"94","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\auth-views\\authentication\\login-2\\index.js":"95","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\auth-views\\authentication\\login-1\\index.js":"96","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\auth-views\\authentication\\register-1\\index.js":"97","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\auth-views\\authentication\\register-2\\index.js":"98","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\auth-views\\components\\RegisterForm.js":"99","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\employee\\index.js":"100","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\employee\\add\\index.js":"101","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\employee\\edit\\index.js":"102","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\auth-views\\components\\employeeLogin.js":"103"},{"size":464,"mtime":1622844324987,"results":"104","hashOfConfig":"105"},{"size":964,"mtime":1622844324798,"results":"106","hashOfConfig":"105"},{"size":5086,"mtime":1622844325037,"results":"107","hashOfConfig":"105"},{"size":610,"mtime":1622844324976,"results":"108","hashOfConfig":"105"},{"size":1304,"mtime":1622844325118,"results":"109","hashOfConfig":"105"},{"size":289,"mtime":1622844325036,"results":"110","hashOfConfig":"105"},{"size":440,"mtime":1622844324978,"results":"111","hashOfConfig":"105"},{"size":280,"mtime":1622844324984,"results":"112","hashOfConfig":"105"},{"size":204,"mtime":1622844325033,"results":"113","hashOfConfig":"105"},{"size":276,"mtime":1622844324991,"results":"114","hashOfConfig":"105"},{"size":325,"mtime":1622844325001,"results":"115","hashOfConfig":"105"},{"size":2520,"mtime":1622844324999,"results":"116","hashOfConfig":"105"},{"size":1460,"mtime":1622844325030,"results":"117","hashOfConfig":"105"},{"size":1372,"mtime":1622844325031,"results":"118","hashOfConfig":"105"},{"size":212,"mtime":1622844324989,"results":"119","hashOfConfig":"105"},{"size":212,"mtime":1622844324989,"results":"120","hashOfConfig":"105"},{"size":448,"mtime":1622844325028,"results":"121","hashOfConfig":"105"},{"size":725,"mtime":1622844325026,"results":"122","hashOfConfig":"105"},{"size":5026,"mtime":1622845550441,"results":"123","hashOfConfig":"105"},{"size":327,"mtime":1622844324934,"results":"124","hashOfConfig":"105"},{"size":2975,"mtime":1622844324934,"results":"125","hashOfConfig":"105"},{"size":473,"mtime":1622844324941,"results":"126","hashOfConfig":"105"},{"size":1658,"mtime":1622844324936,"results":"127","hashOfConfig":"105"},{"size":6332,"mtime":1622844325041,"results":"128","hashOfConfig":"105"},{"size":8738,"mtime":1622846522483,"results":"129","hashOfConfig":"105"},{"size":570,"mtime":1622844324960,"results":"130","hashOfConfig":"105"},{"size":1748,"mtime":1622844324935,"results":"131","hashOfConfig":"105"},{"size":6086,"mtime":1622844324935,"results":"132","hashOfConfig":"105"},{"size":1104,"mtime":1622844324938,"results":"133","hashOfConfig":"105"},{"size":1321,"mtime":1622844324933,"results":"134","hashOfConfig":"105"},{"size":1173,"mtime":1622844325023,"results":"135","hashOfConfig":"105"},{"size":857,"mtime":1622844324940,"results":"136","hashOfConfig":"105"},{"size":216,"mtime":1622844324974,"results":"137","hashOfConfig":"105"},{"size":5315,"mtime":1622844324946,"results":"138","hashOfConfig":"105"},{"size":2767,"mtime":1622844325070,"results":"139","hashOfConfig":"105"},{"size":3702,"mtime":1622844325072,"results":"140","hashOfConfig":"105"},{"size":2732,"mtime":1622844325072,"results":"141","hashOfConfig":"105"},{"size":813,"mtime":1622844324957,"results":"142","hashOfConfig":"105"},{"size":2320,"mtime":1622844325055,"results":"143","hashOfConfig":"105"},{"size":3603,"mtime":1622844325056,"results":"144","hashOfConfig":"105"},{"size":2509,"mtime":1622844325055,"results":"145","hashOfConfig":"105"},{"size":250,"mtime":1622844324973,"results":"146","hashOfConfig":"105"},{"size":2774,"mtime":1622844324940,"results":"147","hashOfConfig":"105"},{"size":2256,"mtime":1622844324937,"results":"148","hashOfConfig":"105"},{"size":4603,"mtime":1622844324978,"results":"149","hashOfConfig":"105"},{"size":1869,"mtime":1622844324930,"results":"150","hashOfConfig":"105"},{"size":1270,"mtime":1622844324951,"results":"151","hashOfConfig":"105"},{"size":85,"mtime":1622844324985,"results":"152","hashOfConfig":"105"},{"size":3951,"mtime":1622844325099,"results":"153","hashOfConfig":"105"},{"size":4015,"mtime":1622844325100,"results":"154","hashOfConfig":"105"},{"size":4846,"mtime":1622847395567,"results":"155","hashOfConfig":"105"},{"size":3000,"mtime":1622844325088,"results":"156","hashOfConfig":"105"},{"size":9489,"mtime":1622844325101,"results":"157","hashOfConfig":"105"},{"size":2509,"mtime":1622844325087,"results":"158","hashOfConfig":"105"},{"size":2386,"mtime":1622844325086,"results":"159","hashOfConfig":"105"},{"size":3024,"mtime":1622844325082,"results":"160","hashOfConfig":"105"},{"size":2479,"mtime":1622844325081,"results":"161","hashOfConfig":"105"},{"size":7265,"mtime":1622844325067,"results":"162","hashOfConfig":"105"},{"size":3505,"mtime":1622844325079,"results":"163","hashOfConfig":"105"},{"size":3585,"mtime":1622844325067,"results":"164","hashOfConfig":"105"},{"size":3816,"mtime":1622844325065,"results":"165","hashOfConfig":"105"},{"size":7237,"mtime":1622844325097,"results":"166","hashOfConfig":"105"},{"size":13875,"mtime":1622844325100,"results":"167","hashOfConfig":"105"},{"size":3562,"mtime":1622844325074,"results":"168","hashOfConfig":"105"},{"size":2550,"mtime":1622844325076,"results":"169","hashOfConfig":"105"},{"size":6072,"mtime":1622844325092,"results":"170","hashOfConfig":"105"},{"size":5932,"mtime":1622844325096,"results":"171","hashOfConfig":"105"},{"size":3592,"mtime":1622844325050,"results":"172","hashOfConfig":"105"},{"size":2667,"mtime":1622844325084,"results":"173","hashOfConfig":"105"},{"size":2347,"mtime":1622844325085,"results":"174","hashOfConfig":"105"},{"size":2311,"mtime":1622844325048,"results":"175","hashOfConfig":"105"},{"size":2616,"mtime":1622844325049,"results":"176","hashOfConfig":"105"},{"size":4030,"mtime":1622844325062,"results":"177","hashOfConfig":"105"},{"size":3933,"mtime":1622844325058,"results":"178","hashOfConfig":"105"},{"size":3716,"mtime":1622844325059,"results":"179","hashOfConfig":"105"},{"size":3769,"mtime":1622844325091,"results":"180","hashOfConfig":"105"},{"size":3622,"mtime":1622844325089,"results":"181","hashOfConfig":"105"},{"size":3720,"mtime":1622844325090,"results":"182","hashOfConfig":"105"},{"size":4071,"mtime":1622844325053,"results":"183","hashOfConfig":"105"},{"size":4136,"mtime":1622844325051,"results":"184","hashOfConfig":"105"},{"size":3747,"mtime":1622844325052,"results":"185","hashOfConfig":"105"},{"size":3766,"mtime":1622844325046,"results":"186","hashOfConfig":"105"},{"size":6565,"mtime":1622844325068,"results":"187","hashOfConfig":"105"},{"size":458,"mtime":1622844325040,"results":"188","hashOfConfig":"105"},{"size":1649,"mtime":1622844325007,"results":"189","hashOfConfig":"105"},{"size":209,"mtime":1622844324990,"results":"190","hashOfConfig":"105"},{"size":212,"mtime":1622844324988,"results":"191","hashOfConfig":"105"},{"size":722,"mtime":1622844324947,"results":"192","hashOfConfig":"105"},{"size":1036,"mtime":1622844324945,"results":"193","hashOfConfig":"105"},{"size":1552,"mtime":1622847373246,"results":"194","hashOfConfig":"105"},{"size":1528,"mtime":1622844325116,"results":"195","hashOfConfig":"105"},{"size":168,"mtime":1622844325105,"results":"196","hashOfConfig":"105"},{"size":1876,"mtime":1622844325115,"results":"197","hashOfConfig":"105"},{"size":2150,"mtime":1622844325102,"results":"198","hashOfConfig":"105"},{"size":2120,"mtime":1622844325104,"results":"199","hashOfConfig":"105"},{"size":1496,"mtime":1622844325104,"results":"200","hashOfConfig":"105"},{"size":1156,"mtime":1622844325107,"results":"201","hashOfConfig":"105"},{"size":2130,"mtime":1622844325108,"results":"202","hashOfConfig":"105"},{"size":3291,"mtime":1622844325112,"results":"203","hashOfConfig":"105"},{"size":4123,"mtime":1622846369630,"results":"204","hashOfConfig":"105"},{"size":4080,"mtime":1622846172418,"results":"205","hashOfConfig":"105"},{"size":3748,"mtime":1622846028264,"results":"206","hashOfConfig":"105"},{"size":4973,"mtime":1622847918189,"results":"207","hashOfConfig":"105"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},"1j9wp6h",{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"210"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"210"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"210"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"210"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"210"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"210"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"210"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"210"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"210"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"210"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"210"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"210"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"210"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"210"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"210"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"210"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"210"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"210"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"210"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"210"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"210"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"210"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"210"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"210"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"210"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"210"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"210"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"210"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"210"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"210"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"210"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"210"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"210"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"210"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"210"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"210"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"210"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"210"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"210"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"210"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"210"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"210"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"210"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"210"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"210"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"210"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"210"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"210"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"459","messages":"460","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"461","messages":"462","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\index.js",[],["463","464"],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\App.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\configs\\AppConfig.js",["465"],"import { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { env } from './EnvironmentConfig'\r\n\r\nexport const APP_NAME = 'CONTRORG';\r\nexport const API_BASE_URL = `http://160.119.254.32:${process.env.BACKENDPORT || 4000}/`\r\nexport const IMAGE_BASE_URL = API_BASE_URL + \"images/\";\r\nexport const APP_PREFIX_PATH = '/app';\r\nexport const AUTH_PREFIX_PATH = '/auth';\r\n\r\nexport const THEME_CONFIG = {\r\n\tnavCollapsed: false,\r\n\tsideNavTheme: SIDE_NAV_LIGHT,\r\n\tlocale: 'en',\r\n\tnavType: NAV_TYPE_SIDE,\r\n\ttopNavColor: '#3e82f7',\r\n\theaderNavColor: '',\r\n\tmobileNav: false,\r\n\tcurrentTheme: 'light'\r\n};\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\index.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\redux\\store\\index.js",["466","467"],"import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\n\r\n\r\nfunction configureStore(preloadedState) {\r\n   const store = createStore(reducers, preloadedState);\r\n\r\n  return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\configs\\EnvironmentConfig.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\constants\\ThemeConstant.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\redux\\reducers\\index.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\lang\\index.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\layouts\\auth-layout\\index.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\layouts\\app-layout\\index.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\redux\\reducers\\Auth.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\redux\\reducers\\Theme.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\lang\\entries\\ja_JP.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\lang\\entries\\fr_FR.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\redux\\constants\\Theme.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\redux\\constants\\Auth.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\configs\\NavigationConfig.js",["468","469"],"import {CarryOutOutlined , OrderedListOutlined ,DashboardOutlined,UsergroupAddOutlined , BankOutlined,DollarCircleOutlined,ProfileOutlined,DribbbleOutlined,UnorderedListOutlined,UserOutlined,InteractionOutlined       } from \"@ant-design/icons\";\r\nimport { APP_PREFIX_PATH } from \"configs/AppConfig\";\r\nimport Icon from '@ant-design/icons';\r\nconst Consititution = () => (\r\n  <svg id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m431.279 10c0-5.523-4.478-10-10-10h-298.673c-23.093 0-41.882 18.788-41.882 41.882v360.265c0 .039-.003.077-.003.116v36.312c0 22.494 18.301 40.794 40.795 40.794h13.979v22.631c0 4.088 2.488 7.764 6.283 9.284 3.797 1.52 8.133.576 10.954-2.383l23.873-25.039 23.873 25.039c1.925 2.019 4.556 3.1 7.239 3.1 1.249 0 2.51-.234 3.715-.717 3.795-1.52 6.283-5.196 6.283-9.284v-22.631h203.563c5.522 0 10-4.477 10-10v-459.369zm-308.673 10h288.673v340.388h-288.682c-8.011 0-15.502 2.265-21.872 6.183v-324.689c-.001-12.066 9.816-21.882 21.881-21.882zm75.11 457.021-13.873-14.55c-1.887-1.979-4.503-3.099-7.237-3.099s-5.351 1.12-7.237 3.099l-13.873 14.55v-38.539h42.221v30.887 7.652zm20-17.652v-20.887h4.348c5.522 0 10-4.477 10-10s-4.478-10-10-10h-89.916c-5.522 0-10 4.477-10 10s4.478 10 10 10h3.344v20.887h-13.975c-11.467 0-20.795-9.328-20.795-20.794v-36.235c0-.02.003-.038.003-.058 0-12.066 9.816-21.882 21.882-21.882h288.673v19.864h-86.853c-5.522 0-10 4.477-10 10s4.478 10 10 10h86.853v39.104h-193.564z\"/><path d=\"m351.602 267.012h-177.216c-5.522 0-10 4.477-10 10s4.478 10 10 10h177.217c5.522 0 10-4.477 10-10s-4.478-10-10.001-10z\"/><path d=\"m351.602 310.025h-177.216c-5.522 0-10 4.477-10 10s4.478 10 10 10h177.217c5.522 0 10-4.477 10-10s-4.478-10-10.001-10z\"/><path d=\"m288.314 406.44c-1.64-3.938-5.71-6.463-9.971-6.145-4.128.308-7.696 3.205-8.862 7.17-2.481 8.438 6.875 15.79 14.521 11.496 4.339-2.437 6.225-7.929 4.312-12.521z\"/><path d=\"m146.639 154.816 67.229 40.342c1.611.967 3.385 1.427 5.136 1.427 3.396 0 6.71-1.731 8.584-4.856 2.842-4.736 1.307-10.878-3.429-13.72l-1.197-.718 6.544-10.905 78.615 47.173c-2.717 4.608-1.333 10.575 3.209 13.487 1.671 1.072 3.54 1.583 5.388 1.583 3.294 0 6.519-1.625 8.428-4.604l.116-.181 7.796 4.678c4.805 2.883 10.101 4.255 15.334 4.254 10.163 0 20.087-5.176 25.688-14.507 4.108-6.848 5.305-14.886 3.368-22.634s-6.774-14.278-13.622-18.387l-6.481-3.889c1.577-4.303.029-9.273-3.99-11.85-4.192-2.688-9.623-1.843-12.838 1.752l-80.242-48.149 6.055-10.091 1.197.718c1.611.967 3.385 1.427 5.136 1.427 3.396 0 6.71-1.731 8.585-4.856 2.841-4.736 1.306-10.878-3.43-13.72l-67.23-40.342c-4.736-2.842-10.879-1.306-13.721 3.429-2.841 4.736-1.306 10.878 3.43 13.72l1.574.944-43.366 72.269-1.573-.944c-4.736-2.842-10.879-1.306-13.72 3.429-2.844 4.737-1.309 10.88 3.427 13.721zm103.361-22.544 79.595 47.761-10.69 16.672-79.091-47.458zm106.929 75.706c-2.81 4.681-8.903 6.202-13.581 3.395l-7.286-4.372 10.69-16.672 6.781 4.069c2.268 1.36 3.869 3.522 4.51 6.087s.245 5.226-1.114 7.493zm-137.911-131.345 30.161 18.098-43.367 72.269-.862-.517-29.299-17.581z\"/></svg>\r\n);\r\nconst dashBoardNavTree = [\r\n  {\r\n    key: \"home\",\r\n    path: `${APP_PREFIX_PATH}/home`,\r\n    title: \"home\",\r\n    icon: DashboardOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n\r\n  {\r\n    key: \"employee\",\r\n    path: `${APP_PREFIX_PATH}/employee`,\r\n    title: \"Employee\",\r\n    icon: UsergroupAddOutlined ,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n\r\n\r\n  {\r\n    key: \"charity\",\r\n    path: `${APP_PREFIX_PATH}/charity`,\r\n    title: \"Charity\",\r\n    icon: BankOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n\r\n  {\r\n    key: \"sponsor\",\r\n    path: `${APP_PREFIX_PATH}/sponsor`,\r\n    title: \"Sponsor\",\r\n    icon: DollarCircleOutlined ,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n\r\n  {\r\n    key: \"feed\",\r\n    path: `${APP_PREFIX_PATH}/feed`,\r\n    title: \"Feed\",\r\n    icon: ProfileOutlined  ,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n\r\n  {\r\n    key: \"category\",\r\n    path: `${APP_PREFIX_PATH}/category`,\r\n    title: \"Category\",\r\n    icon: UnorderedListOutlined   ,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n\r\n  {\r\n    key: \"tournament\",\r\n    path: `${APP_PREFIX_PATH}/tournament`,\r\n    title: \"Tournament\",\r\n    icon: DribbbleOutlined   ,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n\r\n\r\n  \r\n  {\r\n    key: \"user\",\r\n    path: `${APP_PREFIX_PATH}/user`,\r\n    title: \"Users\",\r\n    icon: UserOutlined    ,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n\r\n  {\r\n    key: \"activity\",\r\n    path: `${APP_PREFIX_PATH}/activity`,\r\n    title: \"Acitvity\",\r\n    icon: InteractionOutlined    ,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n\r\n  {\r\n    key: \"rules\",\r\n    path: `${APP_PREFIX_PATH}/defined_rules`,\r\n    title: \"Rules\",\r\n    icon: CarryOutOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n\r\n\r\n  {\r\n    key: \"levels\",\r\n    path: `${APP_PREFIX_PATH}/levels`,\r\n    title: \"Levels\",\r\n    icon: OrderedListOutlined ,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n\r\n\r\n\r\n\r\n\r\n];\r\n\r\nconst navigationConfig = [...dashBoardNavTree];\r\n\r\nexport default navigationConfig;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\Footer.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\HeaderNav.js",["470"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavPanel from './NavPanel';\r\nimport NavSearch  from './NavSearch';\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport {\r\n  Button,\r\n} from \"antd\";\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n  const { navCollapsed, mobileNav, navType, headerNavColor, toggleCollapsedNav, onMobileNavToggle, isMobile, currentTheme } = props;\r\n  const [searchActive, setSearchActive] = useState(false)\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false)\r\n  }\r\n\r\n  const onToggle = () => {\r\n    if(!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed)\r\n    } else {\r\n      onMobileNavToggle(!mobileNav)\r\n    }\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = ()=> {\r\n    if(!headerNavColor) {\r\n      return utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff' )\r\n    }\r\n    return utils.getColorContrast(headerNavColor)\r\n  }\r\n  const navMode = mode()\r\n  const getNavWidth = () => {\r\n    if(isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if(navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isMobile) {\r\n      onSearchClose()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Header className={`app-header ${navMode}`} style={{backgroundColor: headerNavColor}}>\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={navMode}/>\r\n        <div className=\"nav\" style={{width: `calc(100% - ${getNavWidth()})`}}>\r\n          <div className=\"nav-left\">\r\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">          \r\n              {\r\n                isNavTop && !isMobile ?\r\n                null\r\n                :\r\n                <li className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => {onToggle()}}>\r\n                  {navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n           <NavPanel />\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose}/>\r\n          \r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav, currentTheme } =  theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav, currentTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps, {toggleCollapsedNav, onMobileNavToggle})(HeaderNav);","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\PageHeader.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\MobileNav.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\utils\\index.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\index.js",["471"],"import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from \"components/shared-components/Loading\";\r\nimport { APP_PREFIX_PATH } from \"configs/AppConfig\";\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"content\" />}>\r\n      <Switch>\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/home`}\r\n          component={lazy(() => import(`./home`))}\r\n        />\r\n\r\n        <Route\r\n          exact\r\n          path={`${APP_PREFIX_PATH}`}\r\n          component={lazy(() => import(`./home`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/login`}\r\n          component={lazy(() => import(`../auth-views/components/LoginForm`))}\r\n        />\r\n\r\n        {/* <Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/home`} /> */}\r\n\r\n        {/* Acitivity Routes  */}\r\n\r\n        {/* <Route\r\n          path={`${APP_PREFIX_PATH}/charity/edit/:id`}\r\n          component={lazy(() => import(`./charity/edit`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/charity/add`}\r\n          component={lazy(() => import(`./charity/add`))}\r\n        /> */}\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/activity`}\r\n          component={lazy(() => import(`./activity`))}\r\n        />\r\n\r\n        {/* Charity Routes  */}\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/charity/edit/:id`}\r\n          component={lazy(() => import(`./charity/edit`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/charity/add`}\r\n          component={lazy(() => import(`./charity/add`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/charity`}\r\n          component={lazy(() => import(`./charity`))}\r\n        />\r\n        {/* Sponser Routes  */}\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/sponsor/edit/:id`}\r\n          component={lazy(() => import(`./sponsor/edit`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/sponsor/add`}\r\n          component={lazy(() => import(`./sponsor/add`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/sponsor`}\r\n          component={lazy(() => import(`./sponsor`))}\r\n        />\r\n\r\n        {/* Feed Routes  */}\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/feed/edit`}\r\n          component={lazy(() => import(`./feed/edit`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/feed/add`}\r\n          component={lazy(() => import(`./feed/add`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/feed`}\r\n          component={lazy(() => import(`./feed`))}\r\n        />\r\n\r\n        {/* Category Routes  */}\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/category/edit`}\r\n          component={lazy(() => import(`./category/edit`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/category/add`}\r\n          component={lazy(() => import(`./category/add`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/category`}\r\n          component={lazy(() => import(`./category`))}\r\n        />\r\n\r\n        {/* Tournament Routes  */}\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/tournament/manage/:id`}\r\n          component={lazy(() => import(`./tournament/manage`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/tournament/edit`}\r\n          component={lazy(() => import(`./tournament/edit`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/tournament/add`}\r\n          component={lazy(() => import(`./tournament/add`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/tournament/leaderboard/tournamentid/:id`}\r\n          component={lazy(() => import(`./tournament/manage/leaderboard`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/tournament`}\r\n          component={lazy(() => import(`./tournament`))}\r\n        />\r\n\r\n        {/* Round Routes  */}\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/round/edit/:id`}\r\n          component={lazy(() => import(`./round/edit`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/round/add/:id`}\r\n          component={lazy(() => import(`./round/add`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/round/setroundanswers/roundid/:id`}\r\n          component={lazy(() => import(`./tournament/manage/answerquestions`))}\r\n        />\r\n\r\n        {/* Prize Config Routes  */}\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/prize/edit/:id`}\r\n          component={lazy(() => import(`./prize/edit`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/prize/add/:id`}\r\n          component={lazy(() => import(`./prize/add`))}\r\n        />\r\n\r\n        {/* Game Routes  */}\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/game/add/:id`}\r\n          component={lazy(() => import(`./game/add`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/game/edit/:id`}\r\n          component={lazy(() => import(`./game/edit`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/game/:id`}\r\n          component={lazy(() => import(`./game`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/round/add/:id`}\r\n          component={lazy(() => import(`./round/add`))}\r\n        />\r\n\r\n        {/* Question Routes  */}\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/addquestion/gameid/:id`}\r\n          component={lazy(() => import(`./question/add`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/editquestion/gameid/:id`}\r\n          component={lazy(() => import(`./question/edit`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/questions/gameid/:id`}\r\n          component={lazy(() => import(`./question`))}\r\n        />\r\n\r\n        {/* Rules Routes  */}\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/addrule/gameid/:id`}\r\n          component={lazy(() => import(`./rule/add`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/editrule/gameid/:id`}\r\n          component={lazy(() => import(`./rule/edit`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/rules/gameid/:id`}\r\n          component={lazy(() => import(`./rule`))}\r\n        />\r\n\r\n        {/* Charity Routes  */}\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/charity/edit/:id`}\r\n          component={lazy(() => import(`./charity/edit`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/charity/add`}\r\n          component={lazy(() => import(`./charity/add`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/user`}\r\n          component={lazy(() => import(`./user`))}\r\n        />\r\n\r\n        {/* Defined Rules Routes  */}\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/defined_rules/edit/:id`}\r\n          component={lazy(() => import(`./defined_rules/edit`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/defined_rules`}\r\n          component={lazy(() => import(`./defined_rules`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/rule/add`}\r\n          component={lazy(() => import(`./defined_rules/add`))}\r\n        />\r\n\r\n\r\n        {/* Employee Routes  */}\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/employee/edit/:id`}\r\n          component={lazy(() => import(`./employee/edit`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/employee/add`}\r\n          component={lazy(() => import(`./employee/add`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/employee`}\r\n          component={lazy(() => import(`./employee`))}\r\n        />\r\n\r\n        {/* Defined Rules Routes  */}\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/defined_rules/edit/:id`}\r\n          component={lazy(() => import(`./defined_rules/edit`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/defined_rules`}\r\n          component={lazy(() => import(`./defined_rules`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/rule/add`}\r\n          component={lazy(() => import(`./defined_rules/add`))}\r\n        />\r\n\r\n\r\n\r\n        {/* Level Routes  */}\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/level/edit/:id`}\r\n          component={lazy(() => import(`./level/edit`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/levels`}\r\n          component={lazy(() => import(`./level`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/level/add`}\r\n          component={lazy(() => import(`./level/add`))}\r\n        />\r\n\r\n        {/* <Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/charity`} /> */}\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default React.memo(AppViews);\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\shared-components\\Loading\\index.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\Logo.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\MenuContent.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\NavPanel.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\AppBreadcrumb.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\redux\\actions\\Theme.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\NavSearch\\index.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\util-components\\IntlMessage\\index.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\ThemeConfigurator.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\level\\add\\index.js",["472","473","474","475","476","477"],"import React, { Component, useState } from \"react\";\r\nimport { Form, Input, Button, Upload, Typography, message ,InputNumber} from \"antd\";\r\n\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { ADD_CATEGORY, ADD_LEVEL } from \"configs/Endpoints\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 3,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Demo = () => {\r\n  const history = useHistory();\r\n\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const onFinish = (values) => {\r\n    setloading(true);\r\n    //formData.append(\"picture\", file);\r\n    //  console.log(file);\r\n    service\r\n      .post(ADD_LEVEL, values)\r\n      .then((res) => {\r\n        if (res.id) {\r\n          // history.push(\"/app/level\");\r\n          history.goBack();\r\n          message.success(\"Successfully Done :) \");\r\n        } else {\r\n          message.error(\"Failed\");\r\n        }\r\n      })\r\n\r\n      .catch((e) => {\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setloading(false);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"AddLevel\"\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <br></br>\r\n      <Typography>\r\n        <Title>Add Level</Title>\r\n      </Typography>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <Form.Item\r\n        label=\" Title\"\r\n        name=\"title\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input a Level Title !\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"  Min XP\"\r\n        name=\"minxp\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please enter minimum XP equired !\",\r\n          },\r\n          {\r\n            validator: (r, value) =>\r\n              value < 0? Promise.reject(\"value low\") : Promise.resolve(true),\r\n            message: \"Please Choose Valid Value!\",\r\n          },\r\n        ]}\r\n      >\r\n        <InputNumber />\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport class AddLevel extends Component {\r\n  render() {\r\n    return <Demo />;\r\n  }\r\n}\r\n\r\nexport default AddLevel;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\level\\index.js",["478","479","480"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Divider, Skeleton, Button, Tooltip, message } from \"antd\";\r\nimport { PlusCircleOutlined,UnorderedListOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { DELETE_CATEGORY,GET_ALL_CATEGORIES, GET_ALL_LEVEL,DELETE_LEVEL, } from \"configs/Endpoints\";\r\n\r\nconst Level = () => {\r\n  const columns = [\r\n    {\r\n      title: \"Level ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n\r\n    {\r\n      title: \"Level Title\",\r\n      dataIndex: \"title\",\r\n      key: \"name\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n\r\n    {\r\n      title: \"Level XP\",\r\n      dataIndex: \"minxp\",\r\n      key: \"name\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => (\r\n        <span>\r\n          <Link\r\n            to={{\r\n              pathname: \"level/edit/\" + record.id,\r\n              dataProps: { leveldetails: record },\r\n            }}\r\n          >\r\n            Edit\r\n          </Link>\r\n          <Divider type=\"vertical\" />\r\n          <Link\r\n            onClick={() => {\r\n              deleteLevel(record.id);\r\n            }}\r\n          >\r\n            Delete\r\n          </Link>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  const [levelList, setLevelList] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const deleteLevel = (id) => {\r\n    setloading(true);\r\n\r\n   service.delete( DELETE_LEVEL + id, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n \r\n          console.log(res)\r\n          if (res.message == \"Level was deleted successfully!\") {\r\n            message.success(\"Successfully Deleted :) \");\r\n          } else {\r\n            message.error(\"Failed to delete \");\r\n          }\r\n\r\n          //alert(response);\r\n          fetchData();\r\n          setloading(false);\r\n        })\r\n      .catch((e) => {\r\n        setloading(false);\r\n\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      });\r\n  };\r\n  const fetchData = () => {\r\n    setloading(true);\r\n\r\n    service.get(GET_ALL_LEVEL, {\r\n \r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res)  => {\r\n        setloading(false)\r\n        console.log(res)\r\n        setLevelList(res);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  if (loading)\r\n    return (\r\n      <div\r\n        style={{\r\n          minHeight: 500,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Skeleton active paragraph={{ rows: 10 }} />\r\n      </div>\r\n    );\r\n  return (\r\n\r\n    \r\n    <div>\r\n      <span\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <UnorderedListOutlined style={{ fontSize: 70,color:\"#1a3353\" }}> </UnorderedListOutlined>{\" \"}\r\n        <div>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </div>\r\n        <h1 style={{ fontFamily: \"fantasy\", fontSize: 50 }}> LEVELS </h1>\r\n      </span>\r\n      <br></br>\r\n\r\n      <Tooltip title=\"Add Level\">\r\n        <Link to=\"level/add\">\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<PlusCircleOutlined style={{ fontSize: \"18px\" }} />}\r\n          >\r\n            Add Level\r\n          </Button>\r\n        </Link>\r\n      </Tooltip>\r\n      <br></br>\r\n      <br></br>\r\n      <Table columns={columns} dataSource={levelList} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Level;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\level\\edit\\index.js",["481","482","483","484","485","486","487","488","489"],"import React, { Component, useState } from \"react\";\r\nimport { Form, Input, Button, Upload, message, Typography,InputNumber } from \"antd\";\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { EDIT_CATEGORY, EDIT_LEVEL } from \"configs/Endpoints\";\r\nimport service from \"auth/FetchInterceptor\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\nconst normFile = (e) => {\r\n  console.log(\"Upload event:\", e);\r\n  if (Array.isArray(e)) {\r\n    return e;\r\n  }\r\n  return e && e.fileList;\r\n};\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 3,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Demo = (props) => {\r\n  const history = useHistory();\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n\r\n    setloading(true);\r\n\r\n    service\r\n      .put(EDIT_LEVEL + props.location.dataProps.leveldetails.id, values)\r\n      .then((res) => {\r\n        console.log(res.message);\r\n        if (res.message == \"Level was updated successfully.\") {\r\n          // history.push(\"/app/level\");\r\n          history.goBack();\r\n          message.success(\"Successfully Done :) \");\r\n        } else {\r\n          message.error(\"Failed\");\r\n        }\r\n      })\r\n\r\n      .catch((e) => {\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setloading(false);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"EditLevel\"\r\n      initialValues={{\r\n        title: props.location.dataProps.leveldetails.title,\r\n        minxp: props.location.dataProps.leveldetails.minxp,\r\n\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <br></br>\r\n      <Typography>\r\n        <Title>Edit Level </Title>\r\n      </Typography>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <Form.Item label=\"Title\" name=\"title\">\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"  Min XP\"\r\n        name=\"minxp\"\r\n        rules={[\r\n          {\r\n            validator: (r, value) =>\r\n              value < 0 ? Promise.reject(\"value low\") : Promise.resolve(true),\r\n            message: \"Please Choose Valid Value!\",\r\n          },\r\n        ]}\r\n      >\r\n        <InputNumber />\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\shared-components\\Flex\\index.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\defined_rules\\add\\index.js",["490","491","492","493","494","495"],"import React, { Component, useState } from \"react\";\r\nimport { Form, Input, Button, Upload, Typography, message } from \"antd\";\r\n\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { ADD_CATEGORY, ADD_FIXED_RULE } from \"configs/Endpoints\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 3,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Demo = () => {\r\n  const history = useHistory();\r\n\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const onFinish = (values) => {\r\n    setloading(true);\r\n    //formData.append(\"picture\", file);\r\n    //  console.log(file);\r\n    service\r\n      .post(ADD_FIXED_RULE , values)\r\n      .then((res) => {\r\n        if (res.id) {\r\n          // history.push(\"/app/rule\");\r\n          history.goBack();\r\n          message.success(\"Successfully Done :) \");\r\n        } else {\r\n          message.error(\"Failed\");\r\n        }\r\n      })\r\n\r\n      .catch((e) => {\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setloading(false);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"AddRule\"\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <br></br>\r\n      <Typography>\r\n        <Title>Add  Rule</Title>\r\n      </Typography>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <Form.Item\r\n        label=\" Description\"\r\n        name=\"description\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input a Add Rule Description !\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport class AddRule extends Component {\r\n  render() {\r\n    return <Demo />;\r\n  }\r\n}\r\n\r\nexport default AddRule;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\defined_rules\\index.js",["496","497","498","499"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Divider, Skeleton, Button, Tooltip, message } from \"antd\";\r\nimport { PlusCircleOutlined,UnorderedListOutlined,CarryOutOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { DELETE_CATEGORY,GET_ALL_CATEGORIES,DELETE_FIXED_RULE, GET_ALL_FIXED_RULES, } from \"configs/Endpoints\";\r\n\r\nconst Rules = () => {\r\n  const columns = [\r\n    {\r\n      title: \"Rule ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n\r\n    {\r\n      title: \"Rules Description\",\r\n      dataIndex: \"description\",\r\n      key: \"name\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => (\r\n        <span>\r\n          <Link\r\n            to={{\r\n              pathname: \"defined_rules/edit/\" + record.id,\r\n              dataProps: { ruledetails: record },\r\n            }}\r\n          >\r\n            Edit\r\n          </Link>\r\n          <Divider type=\"vertical\" />\r\n          <Link\r\n            onClick={() => {\r\n              deleteRules(record.id);\r\n            }}\r\n          >\r\n            Delete\r\n          </Link>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  const [ruleList, setRulesList] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const deleteRules = (id) => {\r\n    setloading(true);\r\n\r\n   service.delete( DELETE_FIXED_RULE + id, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n \r\n          console.log(res)\r\n          if (res.message == \"Rule was deleted successfully!\") {\r\n            message.success(\"Successfully Deleted :) \");\r\n          } else {\r\n            message.error(\"Failed to delete \");\r\n          }\r\n\r\n          //alert(response);\r\n          fetchData();\r\n          setloading(false);\r\n        })\r\n      .catch((e) => {\r\n        setloading(false);\r\n\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      });\r\n  };\r\n  const fetchData = () => {\r\n    setloading(true);\r\n\r\n    service.get(GET_ALL_FIXED_RULES, {\r\n \r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res)  => {\r\n        setloading(false)\r\n        console.log(res)\r\n        setRulesList(res);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  if (loading)\r\n    return (\r\n      <div\r\n        style={{\r\n          minHeight: 500,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Skeleton active paragraph={{ rows: 10 }} />\r\n      </div>\r\n    );\r\n  return (\r\n\r\n    \r\n    <div>\r\n      <span\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <CarryOutOutlined style={{ fontSize: 70,color:\"#1a3353\" }}> </CarryOutOutlined>{\" \"}\r\n        <div>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </div>\r\n        <h1 style={{ fontFamily: \"fantasy\", fontSize: 50 }}> RULES </h1>\r\n      </span>\r\n      <br></br>\r\n\r\n      <Tooltip title=\"Add Rules\">\r\n        <Link to=\"rule/add\">\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<PlusCircleOutlined style={{ fontSize: \"18px\" }} />}\r\n          >\r\n            Add Rule\r\n          </Button>\r\n        </Link>\r\n      </Tooltip>\r\n      <br></br>\r\n      <br></br>\r\n      <Table columns={columns} dataSource={ruleList} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rules;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\defined_rules\\edit\\index.js",["500","501","502","503","504","505","506","507","508"],"import React, { Component, useState } from \"react\";\r\nimport { Form, Input, Button, Upload, message, Typography } from \"antd\";\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { EDIT_CATEGORY, EDIT_FIXED_RULE } from \"configs/Endpoints\";\r\nimport service from \"auth/FetchInterceptor\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\nconst normFile = (e) => {\r\n  console.log(\"Upload event:\", e);\r\n  if (Array.isArray(e)) {\r\n    return e;\r\n  }\r\n  return e && e.fileList;\r\n};\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 3,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Demo = (props) => {\r\n  const history = useHistory();\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n\r\n    setloading(true);\r\n\r\n    service\r\n      .put(EDIT_FIXED_RULE + props.location.dataProps.ruledetails.id, values)\r\n      .then((res) => {\r\n        console.log(res.message);\r\n        if (res.message == \"Rule was updated successfully.\") {\r\n          // history.push(\"/app/rule\");\r\n          history.goBack();\r\n          message.success(\"Successfully Done :) \");\r\n        } else {\r\n          message.error(\"Failed\");\r\n        }\r\n      })\r\n\r\n      .catch((e) => {\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setloading(false);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"EditRule\"\r\n      initialValues={{\r\n        description: props.location.dataProps.ruledetails.description,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <br></br>\r\n      <Typography>\r\n        <Title>Edit Rule </Title>\r\n      </Typography>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <Form.Item\r\n        label=\"Description\"\r\n        name=\"description\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input a Rule Description   !\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\util-components\\Icon\\index.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\NavSearch\\SearchInput.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\NavLanguage.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\configs\\Endpoints.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\auth\\FetchInterceptor.js",["509"],"import axios from 'axios'\r\nimport { API_BASE_URL } from 'configs/AppConfig'\r\nimport history from '../history'\r\nimport { AUTH_TOKEN } from 'redux/constants/Auth'\r\nimport { message, notification } from 'antd';\r\n\r\nconst service = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 60000,\r\n  headers: {\r\n\t\r\n\t  'Accept': 'application/json',\r\n\t  'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Config\r\nconst ENTRY_ROUTE = '/auth/login'\r\nconst TOKEN_PAYLOAD_KEY = 'authorization'\r\nconst PUBLIC_REQUEST_KEY = 'public-request'\r\n\r\n// API Request interceptor\r\nservice.interceptors.request.use(config => {\r\n\tconst jwtToken = localStorage.getItem(AUTH_TOKEN)\r\n\t//debugger;\r\n  if (jwtToken) {\r\n    config.headers[\"Authorization\"] = `Bearer ${jwtToken}`;\r\n  }\r\n\r\n  if (!jwtToken && !config.headers[PUBLIC_REQUEST_KEY]) {\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n  }\r\n\r\n  return config\r\n}, error => {\r\n\t// Do something with request error here\r\n\tnotification.error({\r\n\t\tmessage: 'Error'\r\n\t})\r\n  Promise.reject(error)\r\n})\r\n\r\n// API respone interceptor\r\nservice.interceptors.response.use( (response) => {\r\n\treturn response.data\r\n}, (error) => {\r\n\r\n\tlet notificationParam = {\r\n\t\tmessage: ''\r\n\t}\r\n\t\r\n\t// Remove token and redirect \r\n\tif (error.response.status === 403) {\r\n\t\tnotificationParam.message = 'Authentication Fail'\r\n\t\tnotificationParam.description = 'Please login again'\r\n\t\tlocalStorage.removeItem(AUTH_TOKEN)\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\tif (error.response.status === 404) {\r\n\t\tnotificationParam.message = 'Not Found'\r\n\t}\r\n\r\n\tif (error.response.status === 500) {\r\n\t\tnotificationParam.message = 'Internal Server Error'\r\n\t}\r\n\t\r\n\tif (error.response.status === 508) {\r\n\t\tnotificationParam.message = 'Time Out'\r\n\t}\r\n\r\n\tmessage.error(error.response.data.message)\r\n\r\n\treturn Promise.reject(error);\r\n});\r\n\r\nexport default service","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\shared-components\\ColorPicker\\index.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\history.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\tournament\\manage\\answerquestions.js",["510","511","512","513"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Divider, Skeleton, Button, Radio, message } from \"antd\";\r\nimport { PoweroffOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { ROUND_END, ROUND_QUESTIONS } from \"configs/Endpoints\";\r\n\r\nconst Game = (props) => {\r\n  const history = useHistory();\r\n\r\n  const [questionList, setQuestionList] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [val, setVal] = useState(null);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Question ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n\r\n    {\r\n      title: \"Question \",\r\n      dataIndex: \"text\",\r\n      key: \"gamename\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n\r\n    {\r\n      title: \"Answer \",\r\n\r\n      key: \"Answer\",\r\n      render: (text, record) => {\r\n        return (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              //  justifyContent: \"flex-end\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <span>\r\n              <Radio.Group buttonStyle=\"solid\">\r\n                <Radio.Button\r\n                  onClick={() => setVal({ key: record.id, val: 1 })}\r\n                  value=\"1\"\r\n                >\r\n                  X\r\n                </Radio.Button>\r\n                <Radio.Button\r\n                  onClick={() => setVal({ key: record.id, val: 0 })}\r\n                  value=\"0\"\r\n                >\r\n                  O\r\n                </Radio.Button>\r\n              </Radio.Group>\r\n            </span>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    if (val === null) return;\r\n    setData((old) => {\r\n      let oldold = { ...old };\r\n      oldold[val.key] = val.val;\r\n      return oldold;\r\n    });\r\n  }, [val]);\r\n\r\n  const endRound = () => {\r\n    let sendvalue = Object.keys(data).map((K) => ({\r\n      id: K,\r\n      answer: data[K],\r\n    }));\r\n\r\n    if (sendvalue.length == questionList.length) {\r\n      setloading(true);\r\n      service\r\n        .put(\r\n          ROUND_END + props.match.params.id,\r\n          sendvalue\r\n        )\r\n        .then((data) => {\r\n          if (data.success) {\r\n            // history.push(\r\n            //   \"/app/tournament/manage/\" + props.location.dataProps.tournamentid\r\n            // );\r\n            history.goBack();\r\n            message.success(\"Successfully Done :)\");\r\n          } else {\r\n            message.error(\"Failed\");\r\n          }\r\n        })\r\n\r\n        .catch((e) => {\r\n          message.error(\r\n            \"Unable to load  ! Please check your internet or Server \"\r\n          );\r\n        })\r\n        .finally(() => {\r\n          setloading(false);\r\n        });\r\n    } else {\r\n      message.error(\"Please Answer all questions\");\r\n    }\r\n  };\r\n\r\n  const fetchData = () => {\r\n    setloading(true);\r\n\r\n    service\r\n      .get(\r\n        ROUND_QUESTIONS +\r\n          props.location.dataProps.rounddetails.id\r\n      )\r\n      .then((response) => {\r\n        setloading(false);\r\n        //   console.log(response);\r\n        setQuestionList(response);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  if (loading)\r\n    return (\r\n      <div\r\n        style={{\r\n          minHeight: 500,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Skeleton active paragraph={{ rows: 10 }} />\r\n      </div>\r\n    );\r\n  return (\r\n    <div>\r\n      <Table columns={columns} dataSource={questionList} />\r\n\r\n      <Button\r\n        type=\"primary\"\r\n        icon={<PoweroffOutlined />}\r\n        loading={loading}\r\n        onClick={() => {\r\n          endRound();\r\n        }}\r\n      >\r\n        Finish Round\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\tournament\\manage\\leaderboard.js",["514","515","516","517","518","519","520","521"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Divider, Skeleton, Button, Tooltip, message } from \"antd\";\r\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { OmitProps } from \"antd/lib/transfer/ListBody\";\r\nimport { LEADERBOARD, WINNERS } from \"configs/Endpoints\";\r\nimport { TrophyOutlined,DollarOutlined  } from \"@ant-design/icons\";\r\nconst LeaderBoard = (props) => {\r\n  const columns = [\r\n    {\r\n      title: \"User ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n\r\n    {\r\n      title: \"User Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n    {\r\n      title: \"User Score\",\r\n      dataIndex: \"Score\",\r\n      key: \"score\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n    {\r\n      title: \"User Position\",\r\n      dataIndex: \"Position\",\r\n      key: \"Position\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n  ];\r\n\r\n\r\n  const columnswinners = [\r\n    {\r\n      title: \"User ID\",\r\n      dataIndex: \"uid\",\r\n      key: \"id\",\r\n    },\r\n\r\n    {\r\n      title: \"User Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n    {\r\n      title: \"User Score\",\r\n      dataIndex: \"Score\",\r\n      key: \"score\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n    {\r\n      title: \"User Position\",\r\n      dataIndex: \"Position\",\r\n      key: \"Position\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n\r\n    {\r\n      title: \"Prize Amount\",\r\n      dataIndex: \"prize\",\r\n      key: \"Position\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n\r\n  ];\r\n\r\n  const [categoryList, setCategoryList] = useState([]);\r\n  const [winnerList, setWinnerList] = useState([]);\r\n\r\n  const [loading, setloading] = useState(false);\r\n\r\n  \r\n  \r\n  const fetchwinnerData = () => {\r\n    setloading(true);\r\n\r\n    service\r\n      .get(WINNERS + props.match.params.id)\r\n\r\n      .then((response) => {\r\n        setloading(false);\r\n        console.log(response);\r\n        setWinnerList(response);\r\n      });\r\n  };\r\n  \r\n  const fetchData = () => {\r\n    setloading(true);\r\n\r\n    service\r\n      .get(LEADERBOARD + props.match.params.id)\r\n\r\n      .then((response) => {\r\n        setloading(false);\r\n        console.log(response);\r\n        setCategoryList(response);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n    fetchwinnerData();\r\n  }, []);\r\n\r\n  \r\n  if (loading)\r\n    return (\r\n      <div\r\n        style={{\r\n          minHeight: 500,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Skeleton active paragraph={{ rows: 10 }} />\r\n      </div>\r\n    );\r\n  return (\r\n    <div>\r\n            <br></br>\r\n            <br></br>\r\n\r\n      <span\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <TrophyOutlined style={{ fontSize: 110,color:\"#1a3353\" }}> </TrophyOutlined>{\" \"}\r\n        <div>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </div>\r\n        <h1 style={{ fontFamily: \"fantasy\", fontSize: 80 }}> LEADER BOARD </h1>\r\n      </span>\r\n      <br></br> \r\n      <br></br>\r\n      <Table columns={columns} dataSource={categoryList} />\r\n\r\n      <br></br>\r\n            <br></br>\r\n\r\n      <span\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <DollarOutlined style={{ fontSize: 110,color:\"#1a3353\" }}> </DollarOutlined>{\" \"}\r\n        <div>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </div>\r\n        <h1 style={{ fontFamily: \"fantasy\", fontSize: 80 }}> WINNERS </h1>\r\n      </span>\r\n      <br></br> \r\n      <br></br>\r\n      <Table columns={columnswinners} dataSource={winnerList} />\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeaderBoard;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\auth-views\\components\\LoginForm.js",["522","523","524","525","526","527","528"],"import React, { useEffect,useState } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { Button, Form, Input, Divider, Alert, message as msg } from \"antd\";\r\nimport { MailOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  showLoading,\r\n  showAuthMessage,\r\n  hideAuthMessage,\r\n  authenticated,\r\n} from \"redux/actions/Auth\";\r\nimport JwtAuthService from \"services/JwtAuthService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\nimport { AUTHENTICATED, AUTH_TOKEN } from \"redux/constants/Auth\";\r\nimport { API_BASE_URL } from \"configs/AppConfig\";\r\n\r\nexport const LoginForm = (props) => {\r\n  let dispatch = useDispatch();\r\n  let history = useHistory();\r\n\r\n  const [load, setload] = useState(false);\r\n\r\n  const {\r\n    otherSignIn,\r\n    showForgetPassword,\r\n    hideAuthMessage,\r\n    onForgetPasswordClick,\r\n    showLoading,\r\n    extra,\r\n    loading,\r\n    showMessage,\r\n    message,\r\n    authenticated,\r\n    showAuthMessage,\r\n    token,\r\n    redirect,\r\n    allowRedirect,\r\n  } = props;\r\n\r\n  const onLogin = (values) => {\r\n    setload(true);\r\n    console.log(values);\r\n\r\n    fetch(API_BASE_URL + \"signin\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(values),\r\n    }).then((res) => {\r\n      res.json().then((data) => {\r\n        if (data.token) {\r\n          setload(false);\r\n          msg.success(\"Successfully Done :) \");\r\n\r\n          localStorage.setItem(AUTH_TOKEN, data.token);\r\n          dispatch({\r\n            type: AUTHENTICATED,\r\n            token: data.token,\r\n          });\r\n          history.push(redirect);\r\n        } else {\r\n          setload(false);\r\n          msg.error(\"failed to login\");\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (token !== null && allowRedirect) {\r\n      history.push(redirect);\r\n    }\r\n    if (showMessage) {\r\n      setTimeout(() => {\r\n        hideAuthMessage();\r\n      }, 3000);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        initial={{ opacity: 0, marginBottom: 0 }}\r\n        animate={{\r\n          opacity: showMessage ? 1 : 0,\r\n          marginBottom: showMessage ? 20 : 0,\r\n        }}\r\n      >\r\n        <Alert type=\"error\" showIcon message={message}></Alert>\r\n      </motion.div>\r\n      <Form layout=\"vertical\" name=\"login-form\" onFinish={onLogin}>\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your email\",\r\n            },\r\n            {\r\n              type: \"email\",\r\n              message: \"Please enter a validate email!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input prefix={<MailOutlined className=\"text-primary\" />} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          label={\r\n            <div\r\n              className={`${\r\n                showForgetPassword\r\n                  ? \"d-flex justify-content-between w-100 align-items-center\"\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              <span>Password</span>\r\n              {showForgetPassword && (\r\n                <span\r\n                  onClick={() => onForgetPasswordClick}\r\n                  className=\"cursor-pointer font-size-sm font-weight-normal text-muted\"\r\n                >\r\n                  Forget Password?\r\n                </span>\r\n              )}\r\n            </div>\r\n          }\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your password\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password prefix={<LockOutlined className=\"text-primary\" />} />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" block loading={load}>\r\n            Log In\r\n          </Button>\r\n        </Form.Item>\r\n        <a href=\"http://localhost:3000/auth/emplogin\"> \r\n        <Button type=\"primary\" block loading={load}>\r\n             Employee Log In\r\n          </Button>\r\n          </a>\r\n      \r\n        {extra}\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  otherSignIn: PropTypes.bool,\r\n  showForgetPassword: PropTypes.bool,\r\n  extra: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n};\r\n\r\nLoginForm.defaultProps = {\r\n  otherSignIn: true,\r\n  showForgetPassword: false,\r\n};\r\n\r\nconst mapStateToProps = ({ auth }) => {\r\n  const { loading, message, showMessage, token, redirect } = auth;\r\n  return { loading, message, showMessage, token, redirect };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  showAuthMessage,\r\n  showLoading,\r\n  hideAuthMessage,\r\n  authenticated,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\rule\\index.js",["529","530"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Divider, Skeleton, Button, Tooltip, message } from \"antd\";\r\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { DELETE_RULE,GET_ALL_RULES } from \"configs/Endpoints\";\r\n\r\nconst Rule = (props) => {\r\n  const columns = [\r\n    {\r\n      title: \"Rule ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n\r\n    {\r\n      title: \"Rule Text\",\r\n      dataIndex: \"description\",\r\n      key: \"text\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => (\r\n        <span>\r\n          <Link\r\n            to={{\r\n              pathname: `/app/editrule/gameid/${props.match.params.id}`,\r\n              dataProps: { ruledetails: record },\r\n            }}\r\n          >\r\n            Edit\r\n          </Link>\r\n          <Divider type=\"vertical\" />\r\n          <Link\r\n            onClick={() => {\r\n              deleteRule(record.id);\r\n            }}\r\n          >\r\n            Delete\r\n          </Link>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  const [ruleList, setRuleList] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const deleteRule = (id) => {\r\n    setloading(true);\r\n\r\n    service\r\n      .delete(DELETE_RULE + id)\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.message == \"Custome Rule was deleted successfully!\") {\r\n          message.success(\"Successfully Deleted :) \");\r\n        } else {\r\n          message.error(\"Failed to delete \");\r\n        }\r\n\r\n        //alert(response);\r\n        fetchData();\r\n        setloading(false);\r\n      })\r\n      .catch((e) => {\r\n        setloading(false);\r\n\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      });\r\n  };\r\n  const fetchData = () => {\r\n    setloading(true);\r\n\r\n    service\r\n      .get(\r\n        GET_ALL_RULES + props.match.params.id\r\n      )\r\n      .then((response) => {\r\n        setloading(false);\r\n        console.log(response);\r\n        setRuleList(response);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  if (loading)\r\n    return (\r\n      <div\r\n        style={{\r\n          minHeight: 500,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Skeleton active paragraph={{ rows: 10 }} />\r\n      </div>\r\n    );\r\n  return (\r\n    <div>\r\n      <Tooltip title=\"Add Rule\">\r\n        <Link to={`/app/addrule/gameid/${props.match.params.id}`}>\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<PlusCircleOutlined style={{ fontSize: \"18px\" }} />}\r\n          >\r\n            Add Rule\r\n          </Button>\r\n        </Link>\r\n      </Tooltip>\r\n      <br></br>\r\n      <br></br>\r\n      <Table columns={columns} dataSource={ruleList} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rule;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\user\\index.js",["531","532","533","534","535","536"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  Divider,\r\n  Skeleton,\r\n  Button,\r\n  Tooltip,\r\n  message,\r\n  Form,\r\n  Input,\r\n  Typography,\r\n  InputNumber,\r\n  Select,\r\n} from \"antd\";\r\nimport { Modal } from \"antd\";\r\nimport { PlusCircleOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport {\r\n  ADD_TRANSACTION,\r\n  ALL_TYPES,\r\n  ALL_USERS,\r\n  FIND_CHARITY,\r\n  DONATE,\r\n} from \"configs/Endpoints\";\r\nimport { IMAGE_BASE_URL } from \"configs/AppConfig\";\r\n\r\nconst User = () => {\r\n  const tailLayout = {\r\n    wrapperCol: {\r\n      offset: 8,\r\n      span: 16,\r\n    },\r\n  };\r\n  const layout = {\r\n    labelCol: {\r\n      span: 3,\r\n    },\r\n    wrapperCol: {\r\n      span: 12,\r\n    },\r\n  };\r\n  const columns = [\r\n    {\r\n      title: \"User ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n    {\r\n      title: \"User Age \",\r\n      dataIndex: \"age\",\r\n      key: \"age\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n\r\n    {\r\n      title: \"User XP\",\r\n      dataIndex: \"xp\",\r\n      key: \"xp\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n\r\n\r\n    {\r\n      title: \"Level\",\r\n      dataIndex: \"Level\",\r\n      key: \"level\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n    {\r\n      title: \"Invited By\",\r\n      dataIndex: \"Invited By\",\r\n      key: \"invited\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n    {\r\n      title: \"User Balance\",\r\n      dataIndex: \"Amount\",\r\n      key: \"amount\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n\r\n\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => (\r\n        <span>\r\n          <Divider type=\"vertical\" />\r\n\r\n          <Button type=\"primary\" onClick={() => showModal(record.id)}>\r\n            Add Transaction\r\n          </Button>\r\n          <Divider type=\"vertical\" />\r\n\r\n          <Modal\r\n            title=\"User Transactions\"\r\n            visible={visible}\r\n            footer={null}\r\n            onCancel={handleCancel}\r\n          >\r\n            <Form\r\n              {...layout}\r\n              name=\"AddTickets\"\r\n              initialValues={{\r\n                remember: true,\r\n              }}\r\n              onFinish={onFinish}\r\n              onFinishFailed={onFinishFailed}\r\n            >\r\n              <br></br>\r\n              <Form.Item\r\n                label=\" Type : \"\r\n                name=\"type_id\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please select a type  !\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select\r\n                  defaultValue=\"Choose\"\r\n                  style={{ width: 150 }}\r\n                  onChange={handleChange}\r\n                >\r\n                  {typelist.map((mytype) => (\r\n                    <Option value={mytype.id}>{mytype.name}</Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Amount\"\r\n                name=\"amount\"\r\n                style={{ width: 650 }}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please enter valid amount !\",\r\n                  },\r\n                  {\r\n                    validator: (r, value) =>\r\n                      value < 1\r\n                        ? Promise.reject(\"value low\")\r\n                        : Promise.resolve(true),\r\n                    message: \"Value should be greate than 1 !\",\r\n                  },\r\n                ]}\r\n              >\r\n                <InputNumber />\r\n              </Form.Item>\r\n\r\n              <Form.Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n                  Add Transaction\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>{\" \"}\r\n          </Modal>\r\n\r\n          {record.Amount > 0 ? (\r\n            <>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => showModal1(record.charity_id, record.id)}\r\n              >\r\n                Donate{\" \"}\r\n              </Button>\r\n              <Divider type=\"vertical\" />\r\n\r\n              <Modal\r\n                title=\"Donate to Charity\"\r\n                visible={visible1}\r\n                footer={null}\r\n                onCancel={handleCancel1}\r\n              >\r\n                <Form\r\n                  {...layout}\r\n                  name=\"Donate\"\r\n                  initialValues={{\r\n                    remember: true,\r\n                  }}\r\n                  onFinish={onFinish1}\r\n                  onFinishFailed={onFinishFailed}\r\n                >\r\n                  <br></br>\r\n                  <center>\r\n                    <h2>Charity Name : {charity.name}</h2>\r\n                    <br></br>\r\n                    <h2>Charity Details : {charity.description}</h2>\r\n                    <br></br>\r\n                    <img style={{ height: 200, width: 200 }} src={image}></img>\r\n                  </center>\r\n                  <br></br> <br></br> <br></br>\r\n                  <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n                      Donate\r\n                    </Button>\r\n                  </Form.Item>\r\n                </Form>{\" \"}\r\n              </Modal>\r\n            </>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  const [userList, setUserList] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n  const [visible, setvisible] = useState(false);\r\n  const [visible1, setvisible1] = useState(false);\r\n\r\n  const [typelist, settypelist] = useState([]);\r\n  const [userid, setuserid] = useState();\r\n  const [charity, setcharity] = useState(\"\");\r\n\r\n  const [image, setImage] = useState();\r\n  // drop down of type\r\n  const { Option } = Select;\r\n  function handleChange(value) {\r\n    \r\n  }\r\n\r\n  // get all method\r\n  const fetchallData = () => {\r\n    setloading(true);\r\n    service.get(ALL_TYPES).then((response) => {\r\n      setloading(false);\r\n      console.log(response);\r\n      settypelist(response);\r\n    });\r\n  };\r\n\r\n  const showModal = (id) => {\r\n    setvisible(true);\r\n    setuserid(id);\r\n  };\r\n\r\n  const showModal1 = (id, userid) => {\r\n    service.get(FIND_CHARITY + id).then((response) => {\r\n      // console.log(response[0]);\r\n      setvisible1(true);\r\n      setcharity(response[0]);\r\n      setuserid(userid);\r\n      // console.log(userid);\r\n      setImage(IMAGE_BASE_URL + response[0].picture);\r\n    });\r\n\r\n    // setcharityid(id);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setvisible(false);\r\n  };\r\n  const handleCancel1 = () => {\r\n    setvisible1(false);\r\n  };\r\n\r\n  const onFinish1 = (values) => {\r\n    setloading(true);\r\n    service\r\n      .post(DONATE + userid, {})\r\n      .then((data) => {\r\n        if (data.success) {\r\n          setvisible1(false);\r\n          message.success(\"Successfully Done :) \");\r\n          fetchData()\r\n        } else {\r\n          message.error(data.message);\r\n        }\r\n      })\r\n\r\n      .catch((e) => {\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setloading(false);\r\n      });\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    setloading(true);\r\n    service\r\n      .post(ADD_TRANSACTION, {\r\n        amount: values.amount,\r\n        users_id: userid,\r\n        type_id: values.type_id,\r\n      })\r\n      .then((data) => {\r\n        if (data.id) {\r\n          setvisible(false);\r\n          message.success(\"Successfully Done :) \");\r\n        } else {\r\n          message.error(data.message);\r\n        }\r\n      })\r\n\r\n      .catch((e) => {\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setloading(false);\r\n      });\r\n  };\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const fetchData = () => {\r\n    setloading(true);\r\n\r\n    service\r\n      .get(ALL_USERS)\r\n\r\n      .then((response) => {\r\n        setloading(false);\r\n        console.log(response);\r\n        setUserList(response);\r\n      });\r\n  };\r\n\r\n  // user effect load when page loads and if we put any vairable in array bracket it just runs on every update ...\r\n  useEffect(() => {\r\n    fetchData();\r\n    fetchallData();\r\n  }, []);\r\n  if (loading)\r\n    return (\r\n      <div\r\n        style={{\r\n          minHeight: 500,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Skeleton active paragraph={{ rows: 10 }} />\r\n      </div>\r\n    );\r\n  return (\r\n    <div>\r\n      <span\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <UserOutlined style={{ fontSize: 80, color: \"#1a3353\" }}>\r\n          {\" \"}\r\n        </UserOutlined>{\" \"}\r\n        <div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n        <h1 style={{ fontFamily: \"fantasy\", fontSize: 60 }}> USERS </h1>\r\n      </span>\r\n\r\n      <br></br>\r\n      <Table columns={columns} dataSource={userList} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\rule\\edit\\index.js",["537","538","539","540","541","542","543","544","545","546"],"import React, { Component, useState } from \"react\";\r\nimport { Form, Input, Button, Upload, message, Typography } from \"antd\";\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { EDIT_RULE } from \"configs/Endpoints\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\nconst normFile = (e) => {\r\n  console.log(\"Upload event:\", e);\r\n  if (Array.isArray(e)) {\r\n    return e;\r\n  }\r\n  return e && e.fileList;\r\n};\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 3,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Demo = (props) => {\r\n  const history = useHistory();\r\n  const [loading, setloading] = useState(false);\r\n  const [url, seturl] = useState(\r\n    \"https://h7u5d3a4.stackpathcdn.com/assets/hospitals/1448/saylani-welfare-65_450X450.jpg\"\r\n  );\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n\r\n    setloading(true);\r\n\r\n    service\r\n      .put(\r\n        EDIT_RULE + props.location.dataProps.ruledetails.id,\r\n\r\n        values\r\n      )\r\n      .then((data) => {\r\n        console.log(data.message);\r\n        if (data.message == \"Custom Rule was updated successfully.\") {\r\n          // history.push(\"/app/rules/gameid/\" + props.match.params.id);\r\n          history.goBack();\r\n          message.success(\"Successfully Done :) \");\r\n        } else {\r\n          message.error(\"Failed\");\r\n        }\r\n      })\r\n\r\n      .catch((e) => {\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setloading(false);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"EditRule\"\r\n      initialValues={{\r\n        description: props.location.dataProps.ruledetails.description,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <br></br>\r\n      <Typography>\r\n        <Title>Edit Rule </Title>\r\n      </Typography>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <Form.Item label=\"Text\" name=\"description\">\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\rule\\add\\index.js",["547","548","549","550","551","552"],"import React, { Component, useState, useEffect } from \"react\";\r\nimport { Form, Input, Button, Upload, Typography, message, Select } from \"antd\";\r\n\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { ADD_RULE } from \"configs/Endpoints\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 3,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Demo = (props) => {\r\n  const history = useHistory();\r\n\r\n  const [loading, setloading] = useState(false);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const onFinish = (values) => {\r\n    setloading(true);\r\n    service\r\n      .post(ADD_RULE, {\r\n        game_id: props.match.params.id,\r\n        description: values.description,\r\n      })\r\n      .then((data) => {\r\n        if (data.id) {\r\n          // history.push(\"/app/rules/gameid/\" + props.match.params.id);\r\n          history.goBack();\r\n          message.success(\"Successfully Done :) \");\r\n        } else {\r\n          message.error(data.message);\r\n        }\r\n      })\r\n\r\n      .catch((e) => {\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setloading(false);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"AddRule\"\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <br></br>\r\n      <Typography>\r\n        <Title>Add Rule</Title>\r\n      </Typography>\r\n\r\n      <br></br>\r\n\r\n      <Form.Item\r\n        label=\" Text\"\r\n        name=\"description\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input a Rule text !\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport class AddRule extends Component {\r\n  render() {\r\n    return <Demo {...this.props} />;\r\n  }\r\n}\r\n\r\nexport default AddRule;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\question\\index.js",["553","554"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Divider, Skeleton, Button, Tooltip, message } from \"antd\";\r\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { GET_ALL_QUESTIONS, DELETE_QUESTION } from \"configs/Endpoints\";\r\n\r\nconst Question = (props) => {\r\n  const columns = [\r\n    {\r\n      title: \"Question ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n\r\n    {\r\n      title: \"Question Text\",\r\n      dataIndex: \"text\",\r\n      key: \"text\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => (\r\n        <span>\r\n          <Link\r\n            to={{\r\n              pathname: `/app/editquestion/gameid/${props.match.params.id}`,\r\n              dataProps: { questiondetails: record },\r\n            }}\r\n          >\r\n            Edit\r\n          </Link>\r\n          <Divider type=\"vertical\" />\r\n          <Link\r\n            onClick={() => {\r\n              deleteQuestion(record.id);\r\n            }}\r\n          >\r\n            Delete\r\n          </Link>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  const [questionList, setQuestionList] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const deleteQuestion = (id) => {\r\n    setloading(true);\r\n\r\n    service\r\n      .delete(DELETE_QUESTION + id)\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.message == \"Question was deleted successfully!\") {\r\n          message.success(\"Successfully Deleted :) \");\r\n        } else {\r\n          message.error(\"Failed to delete \");\r\n        }\r\n\r\n        //alert(response);\r\n        fetchData();\r\n        setloading(false);\r\n      })\r\n      .catch((e) => {\r\n        setloading(false);\r\n\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      });\r\n  };\r\n  const fetchData = () => {\r\n    setloading(true);\r\n\r\n    service.get(GET_ALL_QUESTIONS + props.match.params.id).then((response) => {\r\n      setloading(false);\r\n      console.log(response);\r\n      setQuestionList(response);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  if (loading)\r\n    return (\r\n      <div\r\n        style={{\r\n          minHeight: 500,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Skeleton active paragraph={{ rows: 10 }} />\r\n      </div>\r\n    );\r\n  return (\r\n    <div>\r\n      <Tooltip title=\"Add Question\">\r\n        <Link to={`/app/addquestion/gameid/${props.match.params.id}`}>\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<PlusCircleOutlined style={{ fontSize: \"18px\" }} />}\r\n          >\r\n            Add Question\r\n          </Button>\r\n        </Link>\r\n      </Tooltip>\r\n      <br></br>\r\n      <br></br>\r\n      <Table columns={columns} dataSource={questionList} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\question\\edit\\index.js",["555","556","557","558","559","560","561","562","563","564"],"import React, { Component, useState } from \"react\";\r\nimport { Form, Input, Button, Upload, message, Typography } from \"antd\";\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { EDIT_QUESTION } from \"configs/Endpoints\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\nconst normFile = (e) => {\r\n  console.log(\"Upload event:\", e);\r\n  if (Array.isArray(e)) {\r\n    return e;\r\n  }\r\n  return e && e.fileList;\r\n};\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 3,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Demo = (props) => {\r\n  const history = useHistory();\r\n  const [loading, setloading] = useState(false);\r\n  const [url, seturl] = useState(\r\n    \"https://h7u5d3a4.stackpathcdn.com/assets/hospitals/1448/saylani-welfare-65_450X450.jpg\"\r\n  );\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n\r\n    setloading(true);\r\n\r\n    service\r\n      .put(\r\n        EDIT_QUESTION + props.location.dataProps.questiondetails.id,\r\n        values\r\n      )\r\n      .then((data) => {\r\n        console.log(data.message);\r\n        if (data.message == \"Question was updated successfully.\") {\r\n          history.push(\"/app/questions/gameid/\" + props.match.params.id);\r\n          message.success(\"Successfully Done :) \");\r\n        } else {\r\n          message.error(\"Failed\");\r\n        }\r\n      })\r\n\r\n      .catch((e) => {\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setloading(false);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"EditQuestion\"\r\n      initialValues={{\r\n        text: props.location.dataProps.questiondetails.text,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <br></br>\r\n      <Typography>\r\n        <Title>Edit Question </Title>\r\n      </Typography>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <Form.Item label=\"Text\" name=\"text\">\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\game\\index.js",["565","566","567","568","569"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Divider, Skeleton, Button, Tooltip, message } from \"antd\";\r\nimport {\r\n  PlusCircleOutlined,\r\n  EditOutlined,\r\n  FormOutlined,\r\n  DeleteOutlined,\r\n  PlayCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { ACTIVATE_ROUND, DELETE_GAME, GET_ALL_GAMES } from \"configs/Endpoints\";\r\nimport { IMAGE_BASE_URL } from \"configs/AppConfig\";\r\n\r\nconst Game = (props) => {\r\n  const columns = [\r\n    \r\n    {\r\n      title: \"Avatar\",\r\n      dataIndex: \"picture\",\r\n      key: \"picture\",\r\n      render: (text) => <img style={{objectFit:'cover', width:50, height:50,borderRadius:100 }}src={`${IMAGE_BASE_URL+text}`}/>,\r\n    },\r\n\r\n    {\r\n      title: \"Game ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n\r\n    {\r\n      title: \"Game Name\",\r\n      dataIndex: \"gamename\",\r\n      key: \"gamename\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n\r\n    {\r\n      title: \"\",\r\n      key: \"action\",\r\n      render: (text, record) => {\r\n        return (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"flex-end\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <span>\r\n              <Link\r\n                to={{\r\n                  pathname: \"/app/questions/gameid/\" + record.id,\r\n                  dataProps: { gamedetails: record },\r\n                }}\r\n              >\r\n                <Button\r\n                  type=\"primary\"\r\n                  icon={<EditOutlined style={{ fontSize: \"15px\" }} />}\r\n                >\r\n                  Questions\r\n                </Button>\r\n              </Link>\r\n              <Divider type=\"vertical\" />\r\n\r\n              <Link\r\n                to={{\r\n                  pathname: \"/app/rules/gameid/\" + record.id,\r\n                  dataProps: { gamedetails: record },\r\n                }}\r\n              >\r\n                <Button\r\n                  type=\"primary\"\r\n                  style={{ background: \"brown\", borderColor: \"brown\" }}\r\n                  icon={<EditOutlined style={{ fontSize: \"15px\" }} />}\r\n                >\r\n                  Rules\r\n                </Button>\r\n              </Link>\r\n              <Divider type=\"vertical\" />\r\n\r\n              <Link\r\n                to={{\r\n                  pathname: `/app/game/edit/${props.match.params.id}`,\r\n                  dataProps: { gamedetails: record },\r\n                }}\r\n              >\r\n                <Button\r\n                  style={{ background: \"orange\", borderColor: \"orange\" }}\r\n                  type=\"primary\"\r\n                  icon={<FormOutlined style={{ fontSize: \"14px\" }} />}\r\n                >\r\n                  Edit\r\n                </Button>\r\n              </Link>\r\n              <Divider type=\"vertical\" />\r\n\r\n              <Link\r\n                onClick={() => {\r\n                  deleteGame(record.id);\r\n                }}\r\n              >\r\n                <Button\r\n                  type=\"danger\"\r\n                  icon={<DeleteOutlined style={{ fontSize: \"15px\" }} />}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </Link>\r\n            </span>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const [gameList, setGameList] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n  const [roundstatus, setroundstatus] = useState();\r\n\r\n  const StartRound = () => {\r\n    setloading(true);\r\n    service\r\n      .put(\r\n        ACTIVATE_ROUND + props.match.params.id,\r\n        {\r\n          tournament_id: props.location.dataProps.tournamentid,\r\n        }\r\n      )\r\n\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.message== 'Round Activated') {\r\n          message.success(\"Round Started Successfully  :) \");\r\n\r\n          // loadRound();\r\n        } else {\r\n          message.error(\"Failed to Start \");\r\n        }\r\n\r\n        setloading(false);\r\n      })\r\n      .catch((e) => {\r\n        setloading(false);\r\n\r\n        // message.error(\r\n        //   \"Unable to load  ! Please check your internet or Server \"\r\n        // );\r\n      });\r\n  };\r\n\r\n  const deleteGame = (id) => {\r\n    setloading(true);\r\n\r\n    service\r\n      .delete(DELETE_GAME + id)\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.message == \"Game was deleted successfully!\") {\r\n          message.success(\"Successfully Deleted :) \");\r\n        } else {\r\n          message.error(\"Failed to delete \");\r\n        }\r\n\r\n        //alert(response);\r\n        fetchData();\r\n        setloading(false);\r\n      })\r\n      .catch((e) => {\r\n        setloading(false);\r\n\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      });\r\n  };\r\n\r\n  // const loadRound = () => {\r\n  //   fetch(\"http://160.119.254.32:3000/round/find/\" + props.match.params.id, {\r\n  //     method: \"GET\",\r\n  //     headers: {\r\n  //       \"Content-Type\": \"application/json\",\r\n  //     },\r\n  //   })\r\n  //     .then((res) => res.json())\r\n  //     .then((response) => {\r\n  //       console.log(\"here it is \" + response);\r\n  //       //        setroundstatus(response[0].setActive);\r\n  //     });\r\n  // };\r\n\r\n  const fetchData = () => {\r\n    setloading(true);\r\n    service.get(GET_ALL_GAMES + props.match.params.id).then((response) => {\r\n      setloading(false);\r\n      setGameList(response);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  if (loading)\r\n    return (\r\n      <div\r\n        style={{\r\n          minHeight: 500,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Skeleton active paragraph={{ rows: 10 }} />\r\n      </div>\r\n    );\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        {roundstatus == null ? (\r\n          <div>\r\n            <Tooltip title=\"Start Round\">\r\n              <Button\r\n                type=\"primary\"\r\n                icon={<PlayCircleOutlined style={{ fontSize: \"18px\" }} />}\r\n                onClick={StartRound}\r\n              >\r\n                Start Round\r\n              </Button>\r\n            </Tooltip>\r\n          </div>\r\n        ) : (\r\n          <p>Round Started ... </p>\r\n        )}\r\n      </div>\r\n\r\n      <Divider />\r\n      <Divider>Games Configration</Divider>\r\n      <Divider />\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          paddingHorizontal: 20,\r\n        }}\r\n      >\r\n        <Tooltip title=\"Add Game\">\r\n          <Link to={`/app/game/add/${props.match.params.id}`}>\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<PlusCircleOutlined style={{ fontSize: \"18px\" }} />}\r\n            >\r\n              Add Game\r\n            </Button>\r\n          </Link>\r\n        </Tooltip>\r\n      </div>\r\n\r\n      <br></br>\r\n\r\n      <br></br>\r\n\r\n      <Table columns={columns} dataSource={gameList} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\question\\add\\index.js",["570","571","572","573","574"],"import React, { Component, useState, useEffect } from \"react\";\r\nimport { Form, Input, Button, Upload, Typography, message, Select } from \"antd\";\r\n\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { ADD_QUESTION, GET_ALL_SPONSOR } from \"configs/Endpoints\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 3,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Demo = (props) => {\r\n  const history = useHistory();\r\n  const [categorytList, setCategoryList] = useState([]);\r\n\r\n  const [loading, setloading] = useState(false);\r\n\r\n  // drop down things\r\n  const { Option } = Select;\r\n  function handleChange(value) {\r\n    //  console.log(`selected ${value}`);\r\n  }\r\n\r\n  // get all method\r\n  const fetchData = () => {\r\n    setloading(true);\r\n\r\n    service.get(GET_ALL_SPONSOR).then((response) => {\r\n      setloading(false);\r\n      console.log(response);\r\n      setCategoryList(response);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const onFinish = (values) => {\r\n    setloading(true);\r\n    //formData.append(\"picture\", file);\r\n    //  console.log(file);\r\n    service\r\n      .post(ADD_QUESTION, {\r\n        game_id: props.match.params.id,\r\n        text: values.text,\r\n        sponsor_id: values.sponsor_id,\r\n      })\r\n\r\n      .then((data) => {\r\n        if (data.id) {\r\n          // history.push(\"/app/questions/gameid/\" + props.match.params.id);\r\n          history.goBack();\r\n          message.success(\"Successfully Done :) \");\r\n        } else {\r\n          message.error(data.message);\r\n        }\r\n      })\r\n\r\n      .catch((e) => {\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setloading(false);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"AddQuestion\"\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <br></br>\r\n      <Typography>\r\n        <Title>Add Question</Title>\r\n      </Typography>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <Form.Item\r\n        label=\" Sponser\"\r\n        name=\"sponsor_id\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please select Sponser !\",\r\n          },\r\n        ]}\r\n      >\r\n        <Select\r\n          defaultValue=\"Choose\"\r\n          style={{ width: 120 }}\r\n          onChange={handleChange}\r\n        >\r\n          {categorytList.map((category) => (\r\n            <Option value={category.id}>{category.name}</Option>\r\n          ))}\r\n        </Select>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\" Text\"\r\n        name=\"text\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input a Question text !\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport class AddQuestion extends Component {\r\n  render() {\r\n    return <Demo {...this.props} />;\r\n  }\r\n}\r\n\r\nexport default AddQuestion;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\game\\edit\\index.js",["575","576","577","578","579","580","581","582"],"import React, { Component, useState } from \"react\";\r\nimport { Form, Input, Button, Upload, message, Typography } from \"antd\";\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { EDIT_GAME } from \"configs/Endpoints\";\r\nimport { IMAGE_BASE_URL } from \"configs/AppConfig\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\nconst normFile = (e) => {\r\n  console.log(\"Upload event:\", e);\r\n  if (Array.isArray(e)) {\r\n    return e;\r\n  }\r\n  return e && e.fileList;\r\n};\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 3,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Demo = (props) => {\r\n  const history = useHistory();\r\n\r\n  // console.log(\"Props:\", props.location.dataProps.gamedetails.name);\r\n\r\n  const [file, setFile] = useState(\"\");\r\n  const [loading, setloading] = useState(false);\r\n  const [image, setImage] = useState(\r\n    IMAGE_BASE_URL + props.location.dataProps.gamedetails.picture\r\n  );\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n\r\n    setloading(true);\r\n    var formData = new FormData();\r\n    formData.append(\"gamename\", values.name);\r\n    formData.append(\"picture\", file);\r\n\r\n    console.log(file);\r\n    service\r\n      .put(\r\n        EDIT_GAME +\r\n          props.location.dataProps.gamedetails.id,\r\n        formData\r\n      )\r\n      .then((data) => {\r\n        if (data.message == \"Game was updated successfully.\") {\r\n          // history.push(\"/app/game/\" + props.match.params.id);\r\n          history.goBack();\r\n          message.success(\"Successfully Done :) \");\r\n        } else {\r\n          message.error(\"Failed\");\r\n        }\r\n      })\r\n\r\n      .catch((e) => {\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setloading(false);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"EditGame\"\r\n      initialValues={{\r\n        name: props.location.dataProps.gamedetails.gamename,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <br></br>\r\n      <Typography>\r\n        <Title>Edit Game </Title>\r\n      </Typography>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <Form.Item label=\"Name\" name=\"name\">\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\" Edit Picture\">\r\n        <Form.Item name=\"picture\" valuePropName=\"picture\" noStyle>\r\n        <Upload.Dragger\r\n                    accept=\"image/*\"\r\n\r\n            beforeUpload={(file) => {\r\n              setFile(file);\r\n              let reader = new FileReader();\r\n              reader.onload = (e) => {\r\n                setImage(e.target.result);\r\n              };\r\n              reader.readAsDataURL(file);\r\n\r\n              // Prevent upload\r\n              return false;\r\n            }}\r\n            name=\"picture\"\r\n          >\r\n            <img style={{ height: 200, width: 200 }} src={image}></img>\r\n            <br></br> <br></br> <br></br>{\" \"}\r\n            <p className=\"ant-upload-text\">\r\n           Upload new Image \r\n            </p>\r\n          </Upload.Dragger>        </Form.Item>\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\game\\add\\index.js",["583","584","585","586","587","588"],"import React, { Component, useState } from \"react\";\r\nimport { Form, Input, Button, Upload, Typography, message } from \"antd\";\r\n\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { ADD_GAME, EDIT_GAME } from \"configs/Endpoints\";\r\nimport placeHolder from \"../../../../assets/svg/icon.jpg\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 3,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Demo = (props) => {\r\n  const history = useHistory();\r\n\r\n  const [file, setFile] = useState(\"\");\r\n  const [loading, setloading] = useState(false);\r\n  const [image, setImage] = useState(\r\n    placeHolder\r\n  );\r\n  const onFinish = (values) => {\r\n    setloading(true);\r\n    var formData = new FormData();\r\n    formData.append(\"gamename\", values.name);\r\n    formData.append(\"picture\", file);\r\n\r\n    // isko remove krna hhhh\r\n    formData.append(\"ticketcost\", 5);\r\n    //dsfdsfdsfsdfds\r\n\r\n    formData.append(\"round_id\", props.match.params.id);\r\n    console.log(file);\r\n    service\r\n      .post(ADD_GAME, formData)\r\n      .then((data) => {\r\n        if (data.createdAt) {\r\n          // history.push(\"/app/game/\" + props.match.params.id);\r\n          history.goBack();\r\n          message.success(\"Successfully Done :) \");\r\n        } else {\r\n          message.error(data.message);\r\n        }\r\n      })\r\n\r\n      .catch((e) => {\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setloading(false);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"AddGame\"\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <br></br>\r\n      <Typography>\r\n        <Title>Add Game </Title>\r\n      </Typography>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <Form.Item\r\n        label=\" Name\"\r\n        name=\"name\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input a Game Name !\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item label=\" Image\">\r\n      <Form.Item\r\n          name=\"picture\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input something about this charity !\",\r\n            },\r\n          ]}\r\n          valuePropName=\"picture\"\r\n          noStyle\r\n        >\r\n           <Upload.Dragger\r\n                       accept=\"image/*\"\r\n\r\n            beforeUpload={(file) => {\r\n              setFile(file);\r\n              let reader = new FileReader();\r\n              reader.onload = (e) => {\r\n                setImage(e.target.result);\r\n              };\r\n              reader.readAsDataURL(file);\r\n\r\n              // Prevent upload\r\n              return false;\r\n            }}\r\n            name=\"picture\"\r\n          >\r\n            <img style={{height:200, width:200}} src={image}></img>\r\n            <br></br>{\" \"}   <br></br>{\" \"}   <br></br>{\" \"}\r\n            <p className=\"ant-upload-text\">\r\n              Click or drag file to this area to upload\r\n            </p>\r\n          </Upload.Dragger>\r\n        </Form.Item>\r\n\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport class AddGame extends Component {\r\n  render() {\r\n    return <Demo {...this.props} />;\r\n  }\r\n}\r\n\r\nexport default AddGame;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\tournament\\index.js",["589","590","591","592","593","594","595"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  Divider,\r\n  Skeleton,\r\n  Button,\r\n  Tooltip,\r\n  message,\r\n  Row,\r\n  Col,\r\n} from \"antd\";\r\nimport {\r\n  PlusCircleOutlined,\r\n  EditOutlined,\r\n  FormOutlined,\r\n  DeleteOutlined,\r\n  FundViewOutlined,\r\n  PlayCircleOutlined,\r\n  DribbbleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"moment\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { DELETE_TOURNAMENT, GET_ALL_TOURNAMENT } from \"configs/Endpoints\";\r\nimport { IMAGE_BASE_URL } from \"configs/AppConfig\";\r\n\r\nconst Tournament = () => {\r\n  const columns = [\r\n    {\r\n      title: \"Avatar\",\r\n      dataIndex: \"picture\",\r\n      key: \"picture\",\r\n      render: (text) => (\r\n        <img\r\n          style={{\r\n            objectFit: \"cover\",\r\n            width: 50,\r\n            height: 50,\r\n            borderRadius: 100,\r\n          }}\r\n          src={`${IMAGE_BASE_URL + text}`}\r\n        />\r\n      ),\r\n    },\r\n\r\n    {\r\n      title: \" ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n\r\n    {\r\n      title: \" Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n\r\n    {\r\n      title: \"Start Time\",\r\n      dataIndex: \"startsOn\",\r\n      key: \"startsOn\",\r\n      render: (text) => <a href=\"/#\">{Moment(text).format(\"LLLL\")}</a>,\r\n    },\r\n\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"setActive\",\r\n      key: \"setActive\",\r\n      render: (text) => {\r\n        if (text == 1) {\r\n          return <a href=\"/#\">Active</a>;\r\n        } else if (text == 0) {\r\n          return <a href=\"/#\">Ended</a>;\r\n        } else {\r\n          return <a href=\"/#\">Not Started</a>;\r\n        }\r\n      },\r\n    },\r\n    {\r\n      title: \"Required Tickets\",\r\n      dataIndex: \"ticketReq\",\r\n      key: \"ticketReq\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => {\r\n        return (\r\n          <Col xs={6} sm={6} md={6} lg={24}>\r\n            <span>\r\n              {record.setActive == 0 ? (\r\n                <>\r\n                  <Link\r\n                    to={{\r\n                      pathname:\r\n                        `/app/tournament/leaderboard/tournamentid/` + record.id,\r\n\r\n                      dataProps: { tournamentdetails: record },\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      type=\"primary\"\r\n                      style={{ background: \"green\", borderColor: \"green\" }}\r\n                      icon={<FundViewOutlined style={{ fontSize: \"18px\" }} />}\r\n                    >\r\n                      Results\r\n                    </Button>\r\n                  </Link>\r\n                  <Divider type=\"vertical\" />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Link\r\n                    to={{\r\n                      pathname: \"tournament/manage/\" + record.id,\r\n                      dataProps: { tournamentdetails: record },\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      type=\"primary\"\r\n                      icon={<EditOutlined style={{ fontSize: \"15px\" }} />}\r\n                    >\r\n                      Manage\r\n                    </Button>\r\n                  </Link>\r\n                  <Divider type=\"vertical\" />{\" \"}\r\n                </>\r\n              )}\r\n\r\n              {record.setActive == null ? (\r\n                <>\r\n                  <Link\r\n                    to={{\r\n                      pathname: \"tournament/edit/\" + record.id,\r\n                      dataProps: { tournamentdetails: record },\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      style={{ background: \"orange\", borderColor: \"orange\" }}\r\n                      type=\"primary\"\r\n                      icon={<FormOutlined style={{ fontSize: \"14px\" }} />}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                  </Link>\r\n                  <Divider type=\"vertical\" />\r\n                </>\r\n              ) : (\r\n                <span></span>\r\n              )}\r\n\r\n              {record.setActive == null ? (\r\n                <Link\r\n                  onClick={() => {\r\n                    deleteTournament(record.id);\r\n                  }}\r\n                >\r\n                  <Button\r\n                    type=\"danger\"\r\n                    icon={<DeleteOutlined style={{ fontSize: \"15px\" }} />}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </Link>\r\n              ) : (\r\n                <span></span>\r\n              )}\r\n            </span>\r\n          </Col>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  const [tournamentList, setTournamentList] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const deleteTournament = (id) => {\r\n    setloading(true);\r\n\r\n    service\r\n      .delete(DELETE_TOURNAMENT + id)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.message == \"Tournament was deleted successfully!\") {\r\n          message.success(\"Successfully Deleted :) \");\r\n        } else {\r\n          message.error(\"Failed to delete \");\r\n        }\r\n\r\n        //alert(response);\r\n        fetchData();\r\n        setloading(false);\r\n      })\r\n      .catch((e) => {\r\n        setloading(false);\r\n\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      });\r\n  };\r\n  const fetchData = () => {\r\n    setloading(true);\r\n\r\n    service.get(GET_ALL_TOURNAMENT).then((res) => {\r\n      setloading(false);\r\n      console.log(res);\r\n      setTournamentList(res);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  if (loading)\r\n    return (\r\n      <div\r\n        style={{\r\n          minHeight: 500,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Skeleton active paragraph={{ rows: 10 }} />\r\n      </div>\r\n    );\r\n  return (\r\n    <div>\r\n      <br></br>\r\n\r\n      <span\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <DribbbleOutlined style={{ fontSize: 90, color: \"#1a3353\" }}>\r\n          {\" \"}\r\n        </DribbbleOutlined>{\" \"}\r\n        <div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n        <h1 style={{ fontFamily: \"fantasy\", fontSize: 60 }}> TOURNAMENTS </h1>\r\n      </span>\r\n      <br></br>\r\n\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          paddingHorizontal: 20,\r\n        }}\r\n      >\r\n        <Tooltip title=\"Add Tournament\">\r\n          <Link to=\"tournament/add\">\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<PlusCircleOutlined style={{ fontSize: \"18px\" }} />}\r\n            >\r\n              Add Tournament\r\n            </Button>\r\n          </Link>\r\n        </Tooltip>\r\n      </div>\r\n\r\n      <br></br>\r\n      <br></br>\r\n      <Table columns={columns} dataSource={tournamentList} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tournament;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\tournament\\manage\\index.js",["596","597","598","599","600","601","602","603","604"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Divider, Skeleton, Button, Tooltip, message } from \"antd\";\r\nimport {\r\n  PlusCircleOutlined,\r\n  EditOutlined,\r\n  FormOutlined,\r\n  DeleteOutlined,\r\n  PlayCircleOutlined,\r\n  SendOutlined,\r\n  TrophyOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"moment\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport {\r\n  ACTIVATE_TOURNAMENT,\r\n  GET_TOURNAMENT_BY_ID,\r\n  GET_ROUND_BY_ID,\r\n  DELETE_ROUND,\r\n  GET_ALL_PRIZES,\r\n  DELETE_PRIZE,\r\n  END_TOURNAMENT,\r\n} from \"../../../../configs/Endpoints\";\r\n\r\nconst Round = (props) => {\r\n  const columns = [\r\n    {\r\n      title: \"Round ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n\r\n    {\r\n      title: \"Round Number\",\r\n      dataIndex: \"roundnumber\",\r\n      key: \"roundnumber\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"setActive\",\r\n      key: \"setActive\",\r\n      render: (text) => {\r\n        if (text == 1) {\r\n          return <a href=\"/#\">Active</a>;\r\n        } else if (text == 0) {\r\n          return <a href=\"/#\">Ended</a>;\r\n        } else {\r\n          return <a href=\"/#\">Not Started</a>;\r\n        }\r\n      },\r\n    },\r\n    {\r\n      title: \"Criteria\",\r\n      dataIndex: \"criteria\",\r\n      key: \"criteria\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n    {\r\n      title: \"\",\r\n      key: \"action\",\r\n      render: (text, record) => {\r\n        return (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"flex-end\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <span>\r\n              {record.setActive == null ? (\r\n                <>\r\n                  <Link\r\n                    to={{\r\n                      pathname: \"/app/game/\" + record.id,\r\n                      dataProps: {\r\n                        tournamentid: props.match.params.id,\r\n                      },\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      type=\"primary\"\r\n                      icon={<EditOutlined style={{ fontSize: \"15px\" }} />}\r\n                    >\r\n                      Manage Round\r\n                    </Button>\r\n                  </Link>\r\n                  <Divider type=\"vertical\" />\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/app/round/edit/${props.match.params.id}`,\r\n                      dataProps: { rounddetails: record },\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      style={{ background: \"orange\", borderColor: \"orange\" }}\r\n                      type=\"primary\"\r\n                      icon={<FormOutlined style={{ fontSize: \"14px\" }} />}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                  </Link>\r\n                  <Divider type=\"vertical\" />\r\n\r\n                  <Link\r\n                    onClick={() => {\r\n                      deleteRound(record.id);\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      type=\"danger\"\r\n                      icon={<DeleteOutlined style={{ fontSize: \"15px\" }} />}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </Link>\r\n                </>\r\n              ) : record.setActive == 0 ? (\r\n                <>\r\n                  <p>Round has been played</p>\r\n                </>\r\n              ) : (\r\n                <span>\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/app/round/setroundanswers/roundid/${record.id}`,\r\n                      dataProps: {\r\n                        rounddetails: record,\r\n                        tournamentid: props.match.params.id,\r\n                      },\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      style={{ background: \"green\", borderColor: \"green\" }}\r\n                      type=\"primary\"\r\n                      icon={<SendOutlined style={{ fontSize: \"14px\" }} />}\r\n                    >\r\n                      Answer Questions and End Round\r\n                    </Button>\r\n                  </Link>\r\n                </span>\r\n              )}\r\n            </span>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  // prizes columns\r\n\r\n  const prizescolumns = [\r\n    {\r\n      title: \"Prize ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n\r\n    {\r\n      title: \"Prize\",\r\n      dataIndex: \"prize\",\r\n      key: \"prize\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n    {\r\n      title: \"Rank\",\r\n      dataIndex: \"rank\",\r\n      key: \"rank\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n    {\r\n      title: \"XP\",\r\n      dataIndex: \"xp\",\r\n      key: \"xp\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n    {\r\n      title: \"\",\r\n      key: \"action\",\r\n      render: (text, record) => {\r\n        return (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"flex-end\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <span>\r\n              {record.setActive == null ? (\r\n                <>\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/app/prize/edit/${props.match.params.id}`,\r\n                      dataProps: { prizedetails: record },\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      style={{ background: \"orange\", borderColor: \"orange\" }}\r\n                      type=\"primary\"\r\n                      icon={<FormOutlined style={{ fontSize: \"14px\" }} />}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                  </Link>\r\n                  <Divider type=\"vertical\" />\r\n                </>\r\n              ) : (\r\n                <span></span>\r\n              )}\r\n\r\n              {record.setActive == null ? (\r\n                <Link\r\n                  onClick={() => {\r\n                    deletePrize(record.id);\r\n                  }}\r\n                >\r\n                  <Button\r\n                    type=\"danger\"\r\n                    icon={<DeleteOutlined style={{ fontSize: \"15px\" }} />}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </Link>\r\n              ) : (\r\n                <span></span>\r\n              )}\r\n            </span>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const [roundList, setRoundList] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n  const [tournamentstatus, settournamentstatus] = useState();\r\n  const [prizeList, setprizeList] = useState([]);\r\n\r\n  const StartTournament = () => {\r\n    setloading(true);\r\n\r\n    service\r\n      .put(ACTIVATE_TOURNAMENT + props.match.params.id)\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.success) {\r\n          message.success(\"Successfully Started :) \");\r\n\r\n          loadTournament();\r\n        } else {\r\n          message.error(\"Failed to Start \");\r\n        }\r\n\r\n        setloading(false);\r\n      })\r\n      .catch((e) => {\r\n        setloading(false);\r\n\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      });\r\n  };\r\n\r\n  const EndTournament = () => {\r\n    setloading(true);\r\n\r\n    service\r\n      .put(END_TOURNAMENT + props.match.params.id)\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.message == \"Tournament has Ended\") {\r\n          message.success(\"Successfully Ended :) \");\r\n\r\n          loadTournament();\r\n        } else {\r\n          message.error(\"Failed to end \");\r\n        }\r\n\r\n        setloading(false);\r\n      })\r\n      .catch((e) => {\r\n        setloading(false);\r\n\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      });\r\n  };\r\n\r\n  const deleteRound = (id) => {\r\n    setloading(true);\r\n\r\n    service\r\n      .delete(DELETE_ROUND + id)\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.message == \"Round was deleted successfully!\") {\r\n          message.success(\"Successfully Deleted :) \");\r\n        } else {\r\n          message.error(\"Failed to delete \");\r\n        }\r\n\r\n        //alert(response);\r\n        fetchData();\r\n        setloading(false);\r\n      })\r\n      .catch((e) => {\r\n        setloading(false);\r\n\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      });\r\n  };\r\n\r\n  const deletePrize = (id) => {\r\n    setloading(true);\r\n\r\n    service\r\n      .delete(DELETE_PRIZE + id)\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.message == \"Prize was deleted successfully!\") {\r\n          message.success(\"Successfully Deleted :) \");\r\n        } else {\r\n          message.error(\"Failed to delete \");\r\n        }\r\n\r\n        //alert(response);\r\n        fetchprizeData();\r\n        setloading(false);\r\n      })\r\n      .catch((e) => {\r\n        setloading(false);\r\n\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      });\r\n  };\r\n  const loadTournament = () => {\r\n    service\r\n      .get(GET_TOURNAMENT_BY_ID + props.match.params.id)\r\n\r\n      .then((response) => {\r\n        // console.log(response[0].setActive);\r\n        settournamentstatus(response[0].setActive);\r\n      });\r\n  };\r\n\r\n  const fetchprizeData = () => {\r\n    setloading(true);\r\n\r\n    service.get(GET_ALL_PRIZES + props.match.params.id).then((response) => {\r\n      setloading(false);\r\n      console.log(response);\r\n      setprizeList(response);\r\n    });\r\n  };\r\n  const fetchData = () => {\r\n    setloading(true);\r\n\r\n    loadTournament();\r\n\r\n    service\r\n      .get(GET_ROUND_BY_ID + props.match.params.id)\r\n\r\n      .then((response) => {\r\n        setloading(false);\r\n        //   console.log(response);\r\n        setRoundList(response);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    fetchprizeData();\r\n  }, []);\r\n  if (loading)\r\n    return (\r\n      <div\r\n        style={{\r\n          minHeight: 500,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Skeleton active paragraph={{ rows: 10 }} />\r\n      </div>\r\n    );\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {tournamentstatus == null ? (\r\n          <div>\r\n            <Tooltip title=\"Start Tournament\">\r\n              <Button\r\n                type=\"primary\"\r\n                icon={<PlayCircleOutlined style={{ fontSize: \"18px\" }} />}\r\n                onClick={StartTournament}\r\n              >\r\n                Start Tournament\r\n              </Button>\r\n            </Tooltip>\r\n          </div>\r\n        ) : tournamentstatus == 1 ? (\r\n          <div>\r\n            <Tooltip title=\"Start Tournament\">\r\n              <Button\r\n                type=\"primary\"\r\n                icon={<SendOutlined style={{ fontSize: \"18px\" }} />}\r\n                onClick={EndTournament}\r\n              >\r\n                Finish Tournament\r\n              </Button>\r\n            </Tooltip>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        <br></br>\r\n        <div>\r\n          <Link\r\n            to={{\r\n              pathname:\r\n                `/app/tournament/leaderboard/tournamentid/` +\r\n                props.match.params.id,\r\n              dataProps: {\r\n                tournamentid: props.match.params.id,\r\n              },\r\n            }}\r\n          >\r\n            <Button\r\n              style={{\r\n                background: \"black\",\r\n                borderColor: \"yellow\",\r\n                color: \"gold\",\r\n              }}\r\n              type=\"primary\"\r\n              icon={\r\n                <TrophyOutlined style={{ fontSize: \"20px\", color: \"gold\" }} />\r\n              }\r\n            >\r\n              Leaderboard{\" \"}\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <Divider />\r\n      <Divider>Rounds Configration</Divider>\r\n      <Divider />\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          paddingHorizontal: 20,\r\n        }}\r\n      >\r\n        <Tooltip title=\"Add Round\">\r\n          <Link to={`/app/round/add/${props.match.params.id}`}>\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<PlusCircleOutlined style={{ fontSize: \"18px\" }} />}\r\n            >\r\n              Add Round\r\n            </Button>\r\n          </Link>\r\n        </Tooltip>\r\n      </div>\r\n\r\n      <br></br>\r\n\r\n      <br></br>\r\n\r\n      <Table columns={columns} dataSource={roundList} />\r\n\r\n      <Divider />\r\n      <Divider>Prize Configration</Divider>\r\n      <Divider />\r\n\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          paddingHorizontal: 20,\r\n        }}\r\n      >\r\n        <Tooltip title=\"Add Round\">\r\n          <Link to={`/app/prize/add/${props.match.params.id}`}>\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<PlusCircleOutlined style={{ fontSize: \"18px\" }} />}\r\n            >\r\n              Add Prize\r\n            </Button>\r\n          </Link>\r\n        </Tooltip>\r\n      </div>\r\n\r\n      <br></br>\r\n\r\n      <br></br>\r\n\r\n      <Table columns={prizescolumns} dataSource={prizeList} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Round;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\prize\\add\\index.js",["605","606","607","608","609","610"],"import React, { Component, useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Upload,\r\n  Typography,\r\n  message,\r\n  InputNumber,\r\n} from \"antd\";\r\n\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { ADD_PRIZE } from \"configs/Endpoints\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 3,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Demo = (props) => {\r\n  const history = useHistory();\r\n\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const onFinish = (values) => {\r\n    setloading(true);\r\n\r\n    service\r\n      .post(ADD_PRIZE, {\r\n        tournament_id: props.match.params.id,\r\n        rank: values.rank,\r\n        prize: values.prize,\r\n        xp:values.xp\r\n      })\r\n      .then((data) => {\r\n        if (data.id) {\r\n          // history.push(\"/app/tournament/manage/\" + props.match.params.id);\r\n          history.goBack();\r\n          message.success(\"Successfully Done :) \");\r\n        } else {\r\n          message.error(data.message);\r\n        }\r\n      })\r\n\r\n      .catch((e) => {\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setloading(false);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"AddRound\"\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <br></br>\r\n      <Typography>\r\n        <Title>Add Prize </Title>\r\n      </Typography>\r\n      <br></br>\r\n      <Form.Item\r\n        label=\"  Rank\"\r\n        name=\"rank\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please enter prize rank !\",\r\n          },\r\n          {\r\n            validator: (r, value) =>\r\n              value < 1 ? Promise.reject(\"value low\") : Promise.resolve(true),\r\n            message: \"Value should be greate than 1 !\",\r\n          },\r\n        ]}\r\n      >\r\n        <InputNumber />\r\n      </Form.Item>\r\n\r\n\r\n\r\n\r\n      <Form.Item\r\n        label=\"  Prize\"\r\n        name=\"prize\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please enter winning prize !\",\r\n          },\r\n          {\r\n            validator: (r, value) =>\r\n              value < 1 ? Promise.reject(\"value low\") : Promise.resolve(true),\r\n            message: \"Value should be greate than 1 !\",\r\n          },\r\n        ]}\r\n      >\r\n        <InputNumber />\r\n      </Form.Item>\r\n\r\n\r\n      <Form.Item\r\n        label=\"  XP\"\r\n        name=\"xp\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please enter Experience points !\",\r\n          },\r\n          {\r\n            validator: (r, value) =>\r\n              value < 1 ? Promise.reject(\"value low\") : Promise.resolve(true),\r\n            message: \"Value should be greate than 1 !\",\r\n          },\r\n        ]}\r\n      >\r\n        <InputNumber />\r\n      </Form.Item>\r\n\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport class AddRound extends Component {\r\n  render() {\r\n    return <Demo {...this.props} />;\r\n  }\r\n}\r\n\r\nexport default AddRound;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\prize\\edit\\index.js",["611","612","613","614","615","616","617","618","619"],"import React, { Component, useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Upload,\r\n  message,\r\n  Typography,\r\n  InputNumber,\r\n  Divider,\r\n} from \"antd\";\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { EDIT_PRIZE } from \"configs/Endpoints\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 3,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Demo = (props) => {\r\n  const history = useHistory();\r\n\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n\r\n    setloading(true);\r\n    service\r\n      .put(\r\n        EDIT_PRIZE +\r\n          props.location.dataProps.prizedetails.id,\r\n        {\r\n          tournament_id: props.match.params.id,\r\n          prize: values.prize,\r\n          xp:values.xp\r\n        }\r\n      )\r\n      .then((data) => {\r\n        console.log(data.message);\r\n        if (data.message == \"Prize was updated successfully.\") {\r\n          // history.push(\"/app/tournament/manage/\" + props.match.params.id);\r\n          history.goBack();\r\n          message.success(\"Successfully Done :) \");\r\n        } else {\r\n          message.error(\"Failed\");\r\n        }\r\n      })\r\n\r\n      .catch((e) => {\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setloading(false);\r\n      });\r\n  };\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"EditRound\"\r\n      initialValues={{\r\n        prize: props.location.dataProps.prizedetails.prize,\r\n        xp: props.location.dataProps.prizedetails.xp,\r\n\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <br></br>\r\n      <Typography>\r\n        <Title>Edit Prize </Title>\r\n      </Typography>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <Form.Item label=\"  Prize Amount\" name=\"prize\">\r\n        <InputNumber />\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"  XP\" name=\"xp\">\r\n        <InputNumber />\r\n      </Form.Item>\r\n\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\tournament\\add\\index.js",["620","621","622","623","624","625"],"import React, { Component, useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Upload,\r\n  Typography,\r\n  message,\r\n  Select,\r\n  InputNumber,\r\n  DatePicker,\r\n} from \"antd\";\r\n\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FormattedDateTimeRange } from \"react-intl\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { ADD_TOURNAMENT, GET_ALL_CATEGORIES } from \"configs/Endpoints\";\r\nimport placeHolder from \"../../../../assets/svg/icon.jpg\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 3,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Demo = () => {\r\n  const history = useHistory();\r\n\r\n  const [file, setFile] = useState(\"\");\r\n  const [loading, setloading] = useState(false);\r\n  const [image, setImage] = useState(\r\n    placeHolder\r\n  );\r\n\r\n  const [categorytList, setCategoryList] = useState([]);\r\n\r\n  // drop down things\r\n  const { Option } = Select;\r\n  function handleChange(value) {\r\n    //  console.log(`selected ${value}`);\r\n  }\r\n\r\n  // date picker methods\r\n  function onChange(value, dateString) {\r\n    console.log(\"Formatted Selected Time: \", value.toJSON());\r\n  }\r\n\r\n  function onOk(value) {\r\n    console.log(\"onOk: \", value);\r\n  }\r\n\r\n  // get all method\r\n  const fetchData = () => {\r\n    setloading(true);\r\n\r\n    service.get(GET_ALL_CATEGORIES).then((response) => {\r\n      setloading(false);\r\n      console.log(response);\r\n      setCategoryList(response);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n    setloading(true);\r\n    var formData = new FormData();\r\n    formData.append(\"name\", values.name);\r\n    formData.append(\"picture\", file);\r\n    formData.append(\"category_id\", values.category_id);\r\n    formData.append(\"ticketReq\", values.ticketReq);\r\n    formData.append(\"startsOn\", values.startsOn.toJSON());\r\n    console.log(file);\r\n    service\r\n      .post(ADD_TOURNAMENT, formData)\r\n      .then((data) => {\r\n        if (data.createdAt) {\r\n          // history.push(\"/app/tournament\");\r\n          history.goBack();\r\n          message.success(\"Successfully Done :) \");\r\n        } else {\r\n          message.error(\"Failed\");\r\n        }\r\n      })\r\n\r\n      .catch((e) => {\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setloading(false);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"AddTournament\"\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <br></br>\r\n      <Typography>\r\n        <Title>Add Tournament</Title>\r\n      </Typography>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <Form.Item\r\n        label=\" Category\"\r\n        name=\"category_id\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please select category !\",\r\n          },\r\n        ]}\r\n      >\r\n        <Select          defaultValue=\"Choose\"\r\n          style={{ width: 120 }}\r\n          onChange={handleChange}\r\n        >\r\n          {categorytList.map((category) => (\r\n            <Option value={category.id}>{category.name}</Option>\r\n          ))}\r\n        </Select>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\" Name\"\r\n        name=\"name\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input a Tournament Name !\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Starts At :\"\r\n        name=\"startsOn\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input a Tournament Name !\",\r\n          },\r\n        ]}\r\n      >\r\n        <DatePicker\r\n          showTime\r\n          placeholder=\"Select Time\"\r\n          onChange={onChange}\r\n          onOk={onOk}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"  Tickets\"\r\n        name=\"ticketReq\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please enter how many tickets are required !\",\r\n          },\r\n          {\r\n            validator: (r, value) =>\r\n              value < 1 ? Promise.reject(\"value low\") : Promise.resolve(true),\r\n            message: \"Atleast 1 or more tickets are required!\",\r\n          },\r\n        ]}\r\n      >\r\n        <InputNumber />\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\" Image\">\r\n        <Form.Item\r\n          name=\"picture\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input something about this charity !\",\r\n            },\r\n          ]}\r\n          valuePropName=\"picture\"\r\n          noStyle\r\n        >\r\n          <Upload.Dragger\r\n                      accept=\"image/*\"\r\n\r\n            beforeUpload={(file) => {\r\n              setFile(file);\r\n              let reader = new FileReader();\r\n              reader.onload = (e) => {\r\n                setImage(e.target.result);\r\n              };\r\n              reader.readAsDataURL(file);\r\n\r\n              // Prevent upload\r\n              return false;\r\n            }}\r\n            name=\"picture\"\r\n          >\r\n            <img style={{ height: 200, width: 200 }} src={image}></img>\r\n            <br></br> <br></br> <br></br>{\" \"}\r\n            <p className=\"ant-upload-text\">\r\n              Click or drag file to this area to upload\r\n            </p>\r\n          </Upload.Dragger>\r\n        </Form.Item>\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport class AddTournament extends Component {\r\n  render() {\r\n    return <Demo />;\r\n  }\r\n}\r\n\r\nexport default AddTournament;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\tournament\\edit\\index.js",["626","627","628","629","630","631","632","633","634"],"import React, { Component, useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Upload,\r\n  message,\r\n  Typography,\r\n  Select,\r\n  DatePicker,\r\n  InputNumber,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { EDIT_TOURNAMENT, GET_ALL_CATEGORIES } from \"configs/Endpoints\";\r\nimport { IMAGE_BASE_URL } from \"configs/AppConfig\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\nconst normFile = (e) => {\r\n  console.log(\"Upload event:\", e);\r\n  if (Array.isArray(e)) {\r\n    return e;\r\n  }\r\n  return e && e.fileList;\r\n};\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 3,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Demo = (props) => {\r\n  const history = useHistory();\r\n\r\n  // category list and api call\r\n  const [categorytList, setCategoryList] = useState([]);\r\n\r\n  const fetchData = () => {\r\n    setloading(true);\r\n\r\n    service.get(GET_ALL_CATEGORIES).then((response) => {\r\n      setloading(false);\r\n      console.log(response);\r\n      setCategoryList(response);\r\n      console.log(\r\n        \"my props \" + props.location.dataProps.tournamentdetails.startsOn\r\n      );\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  // drop down things\r\n  const { Option } = Select;\r\n  function handleChange(value) {\r\n    //  console.log(`selected ${value}`);\r\n  }\r\n\r\n  // date picker methods\r\n  function onChange(value, dateString) {\r\n    console.log(\"Formatted Selected Time: \", value.toJSON());\r\n  }\r\n\r\n  function onOk(value) {\r\n    console.log(\"onOk: \", value);\r\n  }\r\n\r\n  const [file, setFile] = useState(\"\");\r\n  const [loading, setloading] = useState(false);\r\n  const [image, setImage] = useState(\r\n    IMAGE_BASE_URL + props.location.dataProps.tournamentdetails.picture\r\n  );\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n\r\n    setloading(true);\r\n    console.log(values);\r\n    var formData = new FormData();\r\n    formData.append(\"name\", values.name);\r\n    formData.append(\"picture\", file);\r\n    formData.append(\"ticketReq\", values.ticketReq);\r\n    formData.append(\"category_id\", values.category_id);\r\n\r\n    console.log(file);\r\n    \r\n    service\r\n      .put(\r\n        EDIT_TOURNAMENT + props.location.dataProps.tournamentdetails.id,\r\n        formData\r\n      )\r\n      .then((res) => {\r\n        if (res.message == \"Tournament was updated successfully.\") {\r\n          // history.push(\"/app/tournament\");\r\n          history.goBack();\r\n          message.success(\"Successfully Done :) \");\r\n        } else {\r\n          message.error(\"Failed\");\r\n        }\r\n      })\r\n\r\n      .catch((e) => {\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setloading(false);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"EditTournament\"\r\n      initialValues={{\r\n        name: props.location.dataProps.tournamentdetails.name,\r\n        ticketReq: props.location.dataProps.tournamentdetails.ticketReq,\r\n        category_id: props.location.dataProps.tournamentdetails.category_id,\r\n        startsOn: moment(props.location.dataProps.tournamentdetails.startsOn),\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <br></br>\r\n      <Typography>\r\n        <Title>Edit Tournament </Title>\r\n      </Typography>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <Form.Item label=\" Category\" name=\"category_id\">\r\n        <Select\r\n          defaultValue={props.location.dataProps.tournamentdetails.category_id}\r\n          style={{ width: 120 }}\r\n          onChange={handleChange}\r\n        >\r\n          {categorytList.map((category) => (\r\n            <Option value={category.id}>{category.name}</Option>\r\n          ))}\r\n        </Select>\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Name\" name=\"name\">\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Starts At :\" name=\"startsOn\">\r\n        <DatePicker\r\n          showTime\r\n          defaultValue={moment(\r\n            props.location.dataProps.tournamentdetails.startsOn\r\n          )}\r\n          placeholder=\"Select Time\"\r\n          onChange={onChange}\r\n          onOk={onOk}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"  Tickets\"\r\n        name=\"ticketReq\"\r\n        rules={[\r\n          {\r\n            validator: (r, value) =>\r\n              value < 1 ? Promise.reject(\"value low\") : Promise.resolve(true),\r\n            message: \"Atleast 1 or more tickets are required!\",\r\n          },\r\n        ]}\r\n      >\r\n        <InputNumber />\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\" Edit Picture\">\r\n        <Form.Item name=\"picture\" valuePropName=\"picture\" noStyle>\r\n        <Upload.Dragger\r\n                    accept=\"image/*\"\r\n\r\n            beforeUpload={(file) => {\r\n              setFile(file);\r\n              let reader = new FileReader();\r\n              reader.onload = (e) => {\r\n                setImage(e.target.result);\r\n              };\r\n              reader.readAsDataURL(file);\r\n\r\n              // Prevent upload\r\n              return false;\r\n            }}\r\n            name=\"picture\"\r\n          >\r\n            <img style={{ height: 200, width: 200 }} src={image}></img>\r\n            <br></br> <br></br> <br></br>{\" \"}\r\n            <p className=\"ant-upload-text\">\r\n           Upload new Image \r\n            </p>\r\n          </Upload.Dragger>\r\n        </Form.Item>\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\category\\index.js",["635"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Divider, Skeleton, Button, Tooltip, message } from \"antd\";\r\nimport { PlusCircleOutlined,UnorderedListOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { DELETE_CATEGORY,GET_ALL_CATEGORIES, } from \"configs/Endpoints\";\r\n\r\nconst Category = () => {\r\n  const columns = [\r\n    {\r\n      title: \"Category ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n\r\n    {\r\n      title: \"Category Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => (\r\n        <span>\r\n          <Link\r\n            to={{\r\n              pathname: \"category/edit/\" + record.id,\r\n              dataProps: { categorydetails: record },\r\n            }}\r\n          >\r\n            Edit\r\n          </Link>\r\n          <Divider type=\"vertical\" />\r\n          <Link\r\n            onClick={() => {\r\n              deleteCategory(record.id);\r\n            }}\r\n          >\r\n            Delete\r\n          </Link>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  const [categoryList, setCategoryList] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const deleteCategory = (id) => {\r\n    setloading(true);\r\n\r\n   service.delete( DELETE_CATEGORY + id, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n \r\n          console.log(res)\r\n          if (res.message == \"Category was deleted successfully!\") {\r\n            message.success(\"Successfully Deleted :) \");\r\n          } else {\r\n            message.error(\"Failed to delete \");\r\n          }\r\n\r\n          //alert(response);\r\n          fetchData();\r\n          setloading(false);\r\n        })\r\n      .catch((e) => {\r\n        setloading(false);\r\n\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      });\r\n  };\r\n  const fetchData = () => {\r\n    setloading(true);\r\n\r\n    service.get(GET_ALL_CATEGORIES, {\r\n \r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res)  => {\r\n        setloading(false)\r\n        console.log(res)\r\n        setCategoryList(res);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  if (loading)\r\n    return (\r\n      <div\r\n        style={{\r\n          minHeight: 500,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Skeleton active paragraph={{ rows: 10 }} />\r\n      </div>\r\n    );\r\n  return (\r\n\r\n    \r\n    <div>\r\n      <span\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <UnorderedListOutlined style={{ fontSize: 70,color:\"#1a3353\" }}> </UnorderedListOutlined>{\" \"}\r\n        <div>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </div>\r\n        <h1 style={{ fontFamily: \"fantasy\", fontSize: 50 }}> CATEGORIES </h1>\r\n      </span>\r\n      <br></br>\r\n\r\n      <Tooltip title=\"Add Category\">\r\n        <Link to=\"category/add\">\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<PlusCircleOutlined style={{ fontSize: \"18px\" }} />}\r\n          >\r\n            Add Category\r\n          </Button>\r\n        </Link>\r\n      </Tooltip>\r\n      <br></br>\r\n      <br></br>\r\n      <Table columns={columns} dataSource={categoryList} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\round\\add\\index.js",["636","637","638","639","640","641","642","643"],"import React, { Component, useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Upload,\r\n  Typography,\r\n  message,\r\n  InputNumber,\r\n} from \"antd\";\r\n\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { ADD_ROUND } from \"configs/Endpoints\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 3,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Demo = (props) => {\r\n  const history = useHistory();\r\n\r\n  const [file, setFile] = useState(\"\");\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const onFinish = (values) => {\r\n    setloading(true);\r\n\r\n    service\r\n      .post(ADD_ROUND, {\r\n        tournament_id: props.match.params.id,\r\n        criteria: values.criteria,\r\n      })\r\n\r\n      .then((res) => {\r\n        if (res.id) {\r\n          // history.push(\"/app/tournament/manage/\" + props.match.params.id);\r\n          history.goBack();\r\n          message.success(\"Successfully Done :) \");\r\n        } else {\r\n          message.error(res.message);\r\n        }\r\n      })\r\n\r\n      .catch((e) => {\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setloading(false);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"AddRound\"\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <br></br>\r\n      <Typography>\r\n        <Title>Add Round </Title>\r\n      </Typography>\r\n      <br></br>\r\n      <Form.Item\r\n        label=\"  Criteria\"\r\n        name=\"criteria\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please enter how many players will pass this round !\",\r\n          },\r\n          {\r\n            validator: (r, value) =>\r\n              value < 1 ? Promise.reject(\"value low\") : Promise.resolve(true),\r\n            message: \"Atleast 1 or more players are required!\",\r\n          },\r\n        ]}\r\n      >\r\n        <InputNumber />\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport class AddRound extends Component {\r\n  render() {\r\n    return <Demo {...this.props} />;\r\n  }\r\n}\r\n\r\nexport default AddRound;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\round\\edit\\index.js",["644","645","646","647","648","649","650","651","652"],"import React, { Component, useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Upload,\r\n  message,\r\n  Typography,\r\n  InputNumber,\r\n  Divider,\r\n} from \"antd\";\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { EDIT_ROUND } from \"configs/Endpoints\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 3,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Demo = (props) => {\r\n  const history = useHistory();\r\n\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n\r\n    setloading(true);\r\n    service\r\n      .put(EDIT_ROUND + props.location.dataProps.rounddetails.id, {\r\n        tournament_id: props.match.params.id,\r\n        criteria: values.criteria,\r\n      })\r\n\r\n      .then((data) => {\r\n        console.log(data.message);\r\n        if (data.message == \"Round was updated successfully.\") {\r\n          // history.push(\"/app/tournament/manage/\" + props.match.params.id);\r\n          history.goBack();\r\n          message.success(\"Successfully Done :) \");\r\n        } else {\r\n          message.error(\"Failed\");\r\n        }\r\n      })\r\n\r\n      .catch((e) => {\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setloading(false);\r\n      });\r\n  };\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"EditRound\"\r\n      initialValues={{\r\n        criteria: props.location.dataProps.rounddetails.criteria,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <br></br>\r\n      <Typography>\r\n        <Title>Edit Round </Title>\r\n      </Typography>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <Form.Item label=\"  Criteria\" name=\"criteria\">\r\n        <InputNumber />\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\category\\add\\index.js",["653","654","655","656","657"],"import React, { Component, useState } from \"react\";\r\nimport { Form, Input, Button, Upload, Typography, message } from \"antd\";\r\n\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { ADD_CATEGORY } from \"configs/Endpoints\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 3,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Demo = () => {\r\n  const history = useHistory();\r\n\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const onFinish = (values) => {\r\n    setloading(true);\r\n    //formData.append(\"picture\", file);\r\n    //  console.log(file);\r\n    service.post(ADD_CATEGORY, values)\r\n      .then((res) => {\r\n          if (res.id) {\r\n            // history.push(\"/app/category\");\r\n            history.goBack();\r\n            message.success(\"Successfully Done :) \");\r\n          } else {\r\n            message.error(\"Failed\");\r\n          }\r\n        })\r\n\r\n      .catch((e) => {\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setloading(false);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  \r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"AddCategory\"\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <br></br>\r\n      <Typography>\r\n        <Title>Add Category</Title>\r\n      </Typography>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <Form.Item\r\n        label=\" Name\"\r\n        name=\"name\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input a Category Name !\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport class AddCategory extends Component {\r\n  render() {\r\n    return <Demo />;\r\n  }\r\n}\r\n\r\nexport default AddCategory;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\category\\edit\\index.js",["658","659","660","661","662","663","664","665","666","667"],"import React, { Component, useState } from \"react\";\r\nimport { Form, Input, Button, Upload, message, Typography } from \"antd\";\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { EDIT_CATEGORY } from \"configs/Endpoints\";\r\nimport service from \"auth/FetchInterceptor\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\nconst normFile = (e) => {\r\n  console.log(\"Upload event:\", e);\r\n  if (Array.isArray(e)) {\r\n    return e;\r\n  }\r\n  return e && e.fileList;\r\n};\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 3,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Demo = (props) => {\r\n  const history = useHistory();\r\n  const [loading, setloading] = useState(false);\r\n  const [url, seturl] = useState(\r\n    \"https://h7u5d3a4.stackpathcdn.com/assets/hospitals/1448/saylani-welfare-65_450X450.jpg\"\r\n  );\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n\r\n    setloading(true);\r\n\r\n    service\r\n      .put(EDIT_CATEGORY + props.location.dataProps.categorydetails.id, values)\r\n      .then((res) => {\r\n        console.log(res.message);\r\n        if (res.message == \"Category was updated successfully.\") {\r\n          // history.push(\"/app/category\");\r\n          history.goBack();\r\n          message.success(\"Successfully Done :) \");\r\n        } else {\r\n          message.error(\"Failed\");\r\n        }\r\n      })\r\n\r\n      .catch((e) => {\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setloading(false);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"EditCategory\"\r\n      initialValues={{\r\n        name: props.location.dataProps.categorydetails.name,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <br></br>\r\n      <Typography>\r\n        <Title>Edit Category </Title>\r\n      </Typography>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <Form.Item\r\n        label=\"Name\"\r\n        name=\"name\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input a Category Name !\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\feed\\index.js",["668","669"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Divider, Skeleton, Button, Tooltip, message } from \"antd\";\r\nimport { PlusCircleOutlined,ProfileOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { DELETE_FEED, GET_ALL_FEED } from \"configs/Endpoints\";\r\nimport { IMAGE_BASE_URL } from \"configs/AppConfig\";\r\n\r\nconst Feed = () => {\r\n  const columns = [\r\n    {\r\n      title: \"Avatar\",\r\n      dataIndex: \"picture\",\r\n      key: \"picture\",\r\n      render: (text) => <img style={{objectFit:'cover', width:50, height:50,borderRadius:100 }}src={`${IMAGE_BASE_URL+text}`}/>,\r\n    },\r\n\r\n\r\n    {\r\n      title: \"Feed ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n\r\n    {\r\n      title: \"Title\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n    {\r\n      title: \"Feed Description \",\r\n      dataIndex: \"description\",\r\n      key: \"description\",\r\n      render: (text) => {\r\n        console.log(text.length)\r\n        if (text.length < 40) {\r\n          return <a href=\"/#\">{text}</a>;\r\n        }else{\r\n          return <a href=\"/#\">{text.slice(0,45)+\"...\"}</a>;\r\n        }\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => (\r\n        <span>\r\n          <Link\r\n            to={{\r\n              pathname: \"feed/edit/\" + record.id,\r\n              dataProps: { feeddetails: record },\r\n            }}\r\n          >\r\n            Edit\r\n          </Link>\r\n          <Divider type=\"vertical\" />\r\n          <Link\r\n            onClick={() => {\r\n              deleteFeed(record.id);\r\n            }}\r\n          >\r\n            Delete\r\n          </Link>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  const [feedList, setFeedList] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const deleteFeed = (id) => {\r\n    setloading(true);\r\n\r\n    service\r\n      .delete(DELETE_FEED + id, {})\r\n      .then((res) => {\r\n        if (res.message == \"Feed was deleted successfully!\") {\r\n          message.success(\"Successfully Deleted :) \");\r\n        } else {\r\n          message.error(\"Failed to delete \");\r\n        }\r\n\r\n        //alert(response);\r\n        fetchData();\r\n        setloading(false);\r\n      })\r\n      .catch((e) => {\r\n        setloading(false);\r\n\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      });\r\n  };\r\n  const fetchData = () => {\r\n    setloading(true);\r\n\r\n    service\r\n      .get(GET_ALL_FEED, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n\r\n      .then((response) => {\r\n        setloading(false);\r\n        console.log(response);\r\n        setFeedList(response);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  if (loading)\r\n    return (\r\n      <div\r\n        style={{\r\n          minHeight: 500,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Skeleton active paragraph={{ rows: 10 }} />\r\n      </div>\r\n    );\r\n  return (\r\n    <div>\r\n\r\n<span\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <ProfileOutlined style={{ fontSize: 80,color:\"#1a3353\" }}> </ProfileOutlined>{\" \"}\r\n        <div>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </div>\r\n        <h1 style={{ fontFamily: \"fantasy\", fontSize: 60 }}> NEW FEED </h1>\r\n      </span>\r\n      <br></br>\r\n\r\n      <Tooltip title=\"Add Feed\">\r\n        <Link to=\"feed/add\">\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<PlusCircleOutlined style={{ fontSize: \"18px\" }} />}\r\n          >\r\n            Add Feed\r\n          </Button>\r\n        </Link>\r\n      </Tooltip>\r\n      <br></br>\r\n      <br></br>\r\n      <Table columns={columns} dataSource={feedList} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\feed\\add\\index.js",["670","671","672","673","674"],"import React, { Component, useState } from \"react\";\r\nimport { Form, Input, Button, Upload, Typography, message } from \"antd\";\r\n\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { ADD_FEED } from \"configs/Endpoints\";\r\nimport placeHolder from \"../../../../assets/svg/icon.jpg\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 3,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Demo = () => {\r\n  const history = useHistory();\r\n\r\n  const [file, setFile] = useState(\"\");\r\n  const [loading, setloading] = useState(false);\r\n  const [image, setImage] = useState(\r\n    placeHolder\r\n  );\r\n  const onFinish = (values) => {\r\n    setloading(true);\r\n    var formData = new FormData();\r\n    formData.append(\"name\", values.name);\r\n    formData.append(\"description\", values.description);\r\n    formData.append(\"picture\", file);\r\n    console.log(file);\r\n    service\r\n      .post(ADD_FEED, formData)\r\n      .then((res) => {\r\n        if (res.createdAt) {\r\n          message.success(\"Successfully Done :) \");\r\n          // history.push(\"/app/feed\");\r\n          history.goBack();\r\n        } else {\r\n          message.error(\"Failed\");\r\n        }\r\n      })\r\n\r\n      .catch((e) => {\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setloading(false);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"AddFeed\"\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <br></br>\r\n      <Typography>\r\n        <Title>Add Feed </Title>\r\n      </Typography>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <Form.Item\r\n        label=\" Title\"\r\n        name=\"name\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input a Feed Name !\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\" Description\"\r\n        name=\"description\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input something about this feed !\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item label=\" Image\">\r\n      <Form.Item\r\n          name=\"picture\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input something about this charity !\",\r\n            },\r\n          ]}\r\n          valuePropName=\"picture\"\r\n          noStyle\r\n        >\r\n          <Upload.Dragger\r\n                      accept=\"image/*\"\r\n\r\n            beforeUpload={(file) => {\r\n              setFile(file);\r\n              let reader = new FileReader();\r\n              reader.onload = (e) => {\r\n                setImage(e.target.result);\r\n              };\r\n              reader.readAsDataURL(file);\r\n\r\n              // Prevent upload\r\n              return false;\r\n            }}\r\n            name=\"picture\"\r\n          >\r\n            <img style={{height:200, width:200}} src={image}></img>\r\n            <br></br>{\" \"}   <br></br>{\" \"}   <br></br>{\" \"}\r\n            <p className=\"ant-upload-text\">\r\n              Click or drag file to this area to upload\r\n            </p>\r\n          </Upload.Dragger>\r\n\r\n        </Form.Item>\r\n\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport class AddFeed extends Component {\r\n  render() {\r\n    return <Demo />;\r\n  }\r\n}\r\n\r\nexport default AddFeed;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\feed\\edit\\index.js",["675","676","677","678","679","680","681","682"],"import React, { Component, useState } from \"react\";\r\nimport { Form, Input, Button, Upload, message, Typography } from \"antd\";\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { EDIT_FEED } from \"configs/Endpoints\";\r\nimport { IMAGE_BASE_URL } from \"configs/AppConfig\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\nconst normFile = (e) => {\r\n  console.log(\"Upload event:\", e);\r\n  if (Array.isArray(e)) {\r\n    return e;\r\n  }\r\n  return e && e.fileList;\r\n};\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 3,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Demo = (props) => {\r\n  const history = useHistory();\r\n\r\n  // console.log(\"Props:\", props.location.dataProps.feeddetails.name);\r\n\r\n  const [file, setFile] = useState(\"\");\r\n  const [loading, setloading] = useState(false);\r\n  const [image, setImage] = useState(\r\n    IMAGE_BASE_URL + props.location.dataProps.feeddetails.picture\r\n  );\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n\r\n    setloading(true);\r\n    var formData = new FormData();\r\n    formData.append(\"name\", values.name);\r\n    formData.append(\"description\", values.description);\r\n    formData.append(\"picture\", file);\r\n    console.log(file);\r\n    service\r\n      .put(EDIT_FEED + props.location.dataProps.feeddetails.id, formData)\r\n      .then((res) => {\r\n        if (res.message == \"Feed was updated successfully.\") {\r\n          // history.push(\"/app/feed\");\r\n          history.goBack();\r\n          message.success(\"Successfully Done :) \");\r\n        } else {\r\n          message.error(\"Failed\");\r\n        }\r\n      })\r\n\r\n      .catch((e) => {\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setloading(false);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"EditFeed\"\r\n      initialValues={{\r\n        name: props.location.dataProps.feeddetails.name,\r\n        description: props.location.dataProps.feeddetails.description,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <br></br>\r\n      <Typography>\r\n        <Title>Edit Feed </Title>\r\n      </Typography>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <Form.Item label=\"Name\" name=\"name\">\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Description\" name=\"description\">\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\" Edit Picture\">\r\n        <Form.Item name=\"picture\" valuePropName=\"picture\" noStyle>\r\n          <Upload.Dragger\r\n                      accept=\"image/*\"\r\n\r\n            beforeUpload={(file) => {\r\n              setFile(file);\r\n              let reader = new FileReader();\r\n              reader.onload = (e) => {\r\n                setImage(e.target.result);\r\n              };\r\n              reader.readAsDataURL(file);\r\n\r\n              // Prevent upload\r\n              return false;\r\n            }}\r\n            name=\"picture\"\r\n          >\r\n            <img style={{ height: 200, width: 200 }} src={image}></img>\r\n            <br></br> <br></br> <br></br>{\" \"}\r\n            <p className=\"ant-upload-text\">Upload new Image</p>\r\n          </Upload.Dragger>\r\n        </Form.Item>\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\sponsor\\index.js",["683","684"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Divider, Skeleton, Button, Tooltip, message, } from \"antd\";\r\nimport { PlusCircleOutlined,DollarCircleOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { DELETE_SPONSOR, GET_ALL_SPONSOR } from \"configs/Endpoints\";\r\nimport { IMAGE_BASE_URL } from \"configs/AppConfig\";\r\n\r\nconst Sponsor = () => {\r\n  const columns = [\r\n    {\r\n      title: \"Avatar\",\r\n      dataIndex: \"picture\",\r\n      key: \"picture\",\r\n      render: (text) => (\r\n        <img\r\n          style={{\r\n            objectFit: \"cover\",\r\n            width: 50,\r\n            height: 50,\r\n            borderRadius: 100,\r\n          }}\r\n          src={`${IMAGE_BASE_URL + text}`}\r\n        />\r\n      ),\r\n    },\r\n\r\n    {\r\n      title: \"Sponsor ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n\r\n    {\r\n      title: \"Sponsor Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => (\r\n        <span>\r\n          <Link\r\n            to={{\r\n              pathname: \"sponsor/edit/\" + record.id,\r\n              dataProps: { sponsordetails: record },\r\n            }}\r\n          >\r\n            Edit\r\n          </Link>\r\n          <Divider type=\"vertical\" />\r\n          <Link\r\n            onClick={() => {\r\n              deleteSponsor(record.id);\r\n            }}\r\n          >\r\n            Delete\r\n          </Link>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  const [sponsorList, setSponsorList] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const deleteSponsor = (id) => {\r\n    setloading(true);\r\n\r\n    service\r\n      .delete(DELETE_SPONSOR + id, {})\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.message == \"sponsor was deleted successfully!\") {\r\n          message.success(\"Successfully Deleted :) \");\r\n        } else {\r\n          message.error(\"Failed to delete \");\r\n        }\r\n        //alert(response);\r\n        fetchData();\r\n        setloading(false);\r\n      })\r\n      .catch((e) => {\r\n        setloading(false);\r\n\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      });\r\n  };\r\n  const fetchData = () => {\r\n    setloading(true);\r\n\r\n    service.get(GET_ALL_SPONSOR).then((response) => {\r\n      setloading(false);\r\n      console.log(response);\r\n      setSponsorList(response);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  if (loading)\r\n    return (\r\n      <div\r\n        style={{\r\n          minHeight: 500,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Skeleton active paragraph={{ rows: 10 }} />\r\n      </div>\r\n    );\r\n  return (\r\n    <div>\r\n      <br></br>\r\n\r\n      <span\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <DollarCircleOutlined style={{ fontSize: 85, color: \"#1a3353\" }}> </DollarCircleOutlined>{\" \"}\r\n        <div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n        <h1 style={{ fontFamily: \"fantasy\", fontSize: 60 }}> SPONSORS </h1>\r\n      </span>\r\n      <br></br>\r\n\r\n      <Tooltip title=\"Add Sponsor\">\r\n        <Link to=\"sponsor/add\">\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<PlusCircleOutlined style={{ fontSize: \"18px\" }} />}\r\n          >\r\n            Add Sponsor\r\n          </Button>\r\n        </Link>\r\n      </Tooltip>\r\n      <br></br>\r\n      <br></br>\r\n      <Table columns={columns} dataSource={sponsorList} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sponsor;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\sponsor\\add\\index.js",["685","686","687","688","689"],"import React, { Component, useState } from \"react\";\r\nimport { Form, Input, Button, Upload, Typography, message } from \"antd\";\r\n\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { ADD_SPONSOR } from \"configs/Endpoints\";\r\nimport placeHolder from \"../../../../assets/svg/icon.jpg\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 3,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Demo = () => {\r\n  const history = useHistory();\r\n\r\n  const [file, setFile] = useState(\"\");\r\n  const [loading, setloading] = useState(false);\r\n  const [image, setImage] = useState(\r\n    placeHolder\r\n  );\r\n  const onFinish = (values) => {\r\n    setloading(true);\r\n    var formData = new FormData();\r\n    formData.append(\"name\", values.name);\r\n    formData.append(\"picture\", file);\r\n    console.log(file);\r\n    service\r\n      .post(ADD_SPONSOR, formData)\r\n      .then((res) => {\r\n        if (res.createdAt) {\r\n          // history.push(\"/app/sponsor\");\r\n          history.goBack();\r\n          message.success(\"Successfully Done :) \");\r\n        } else {\r\n          message.error(\"Failed\");\r\n        }\r\n      })\r\n\r\n      .catch((e) => {\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setloading(false);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"AddSponsor\"\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <br></br>\r\n      <Typography>\r\n        <Title>Add Sponsor</Title>\r\n      </Typography>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <Form.Item\r\n        label=\" Name\"\r\n        name=\"name\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input a Sponsor Name !\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\" Image\">\r\n      <Form.Item\r\n          name=\"picture\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input something about this charity !\",\r\n            },\r\n          ]}\r\n          valuePropName=\"picture\"\r\n          noStyle\r\n        >\r\n          <Upload.Dragger\r\n                      accept=\"image/*\"\r\n\r\n            beforeUpload={(file) => {\r\n              setFile(file);\r\n              let reader = new FileReader();\r\n              reader.onload = (e) => {\r\n                setImage(e.target.result);\r\n              };\r\n              reader.readAsDataURL(file);\r\n\r\n              // Prevent upload\r\n              return false;\r\n            }}\r\n            name=\"picture\"\r\n          >\r\n            <img style={{height:200, width:200}} src={image}></img>\r\n            <br></br>{\" \"}   <br></br>{\" \"}   <br></br>{\" \"}\r\n            <p className=\"ant-upload-text\">\r\n              Click or drag file to this area to upload\r\n            </p>\r\n          </Upload.Dragger>\r\n\r\n        </Form.Item>\r\n\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport class AddSponsor extends Component {\r\n  render() {\r\n    return <Demo />;\r\n  }\r\n}\r\n\r\nexport default AddSponsor;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\sponsor\\edit\\index.js",["690","691","692","693","694","695","696","697"],"import React, { Component, useState } from \"react\";\r\nimport { Form, Input, Button, Upload, message, Typography } from \"antd\";\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { EDIT_SPONSOR } from \"configs/Endpoints\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { IMAGE_BASE_URL } from \"configs/AppConfig\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\nconst normFile = (e) => {\r\n  console.log(\"Upload event:\", e);\r\n  if (Array.isArray(e)) {\r\n    return e;\r\n  }\r\n  return e && e.fileList;\r\n};\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 3,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Demo = (props) => {\r\n  const history = useHistory();\r\n\r\n  // console.log(\"Props:\", props.location.dataProps..name);\r\n\r\n  const [file, setFile] = useState(\"\");\r\n  const [loading, setloading] = useState(false);\r\n  const [image, setImage] = useState(\r\n    IMAGE_BASE_URL + props.location.dataProps.sponsordetails.picture\r\n  );\r\n\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n\r\n    setloading(true);\r\n    var formData = new FormData();\r\n    formData.append(\"name\", values.name);\r\n    // formData.append(\"description\", values.description);\r\n    formData.append(\"picture\", file);\r\n    console.log(file);\r\n    service\r\n      .put(\r\n        EDIT_SPONSOR + props.location.dataProps.sponsordetails.id,\r\n\r\n        formData\r\n      )\r\n      .then((res) => {\r\n        if (res.message == \"sponsor was updated successfully.\") {\r\n          // history.push(\"/app/sponsor\");\r\n          history.goBack();\r\n          message.success(\"Successfully Done :) \");\r\n        } else {\r\n          message.error(\"Failed\");\r\n        }\r\n      })\r\n\r\n      .catch((e) => {\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setloading(false);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"EditSponsor\"\r\n      initialValues={{\r\n        name: props.location.dataProps.sponsordetails.name,\r\n        description: props.location.dataProps.sponsordetails.description,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <br></br>\r\n      <Typography>\r\n        <Title>Edit Sponsor </Title>\r\n      </Typography>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <Form.Item\r\n        label=\"Name\"\r\n        name=\"name\"\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\" Edit Picture\">\r\n        <Form.Item name=\"picture\" valuePropName=\"picture\" noStyle>\r\n        <Upload.Dragger\r\n                    accept=\"image/*\"\r\n\r\n            beforeUpload={(file) => {\r\n              setFile(file);\r\n              let reader = new FileReader();\r\n              reader.onload = (e) => {\r\n                setImage(e.target.result);\r\n              };\r\n              reader.readAsDataURL(file);\r\n\r\n              // Prevent upload\r\n              return false;\r\n            }}\r\n            name=\"picture\"\r\n          >\r\n            <img style={{ height: 200, width: 200 }} src={image}></img>\r\n            <br></br> <br></br> <br></br>{\" \"}\r\n            <p className=\"ant-upload-text\">\r\n           Upload new Image \r\n            </p>\r\n          </Upload.Dragger>\r\n        </Form.Item>\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\charity\\index.js",["698","699"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Divider, Skeleton, Button, Tooltip, message } from \"antd\";\r\nimport { PlusCircleOutlined, BankFilled } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { GET_ALL_CHARITIES, DELETE_CHARITY } from \"configs/Endpoints\";\r\nimport { IMAGE_BASE_URL } from \"configs/AppConfig\";\r\n\r\nconst Charity = () => {\r\n  const columns = [\r\n    {\r\n      title: \"Avatar\",\r\n      dataIndex: \"picture\",\r\n      key: \"picture\",\r\n      render: (text) => (\r\n        <img\r\n          style={{\r\n            objectFit: \"cover\",\r\n            width: 50,\r\n            height: 50,\r\n            borderRadius: 100,\r\n          }}\r\n          src={`${IMAGE_BASE_URL + text}`}\r\n        />\r\n      ),\r\n    },\r\n\r\n    {\r\n      title: \"Charity ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n    {\r\n      title: \"Charity Description \",\r\n      dataIndex: \"description\",\r\n      key: \"description\",\r\n      render: (text) => {\r\n        console.log(text.length)\r\n        if (text.length < 40) {\r\n          return <a href=\"/#\">{text}</a>;\r\n        }else{\r\n          return <a href=\"/#\">{text.slice(0,45)+\"...\"}</a>;\r\n        }\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => (\r\n        <span>\r\n          <Link\r\n            to={{\r\n              pathname: \"charity/edit/\" + record.id,\r\n              dataProps: { charitydetails: record },\r\n            }}\r\n          >\r\n            Edit\r\n          </Link>\r\n          <Divider type=\"vertical\" />\r\n          <Link\r\n            onClick={() => {\r\n              deleteCharity(record.id);\r\n            }}\r\n          >\r\n            Delete\r\n          </Link>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  const [charityList, setCharityList] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const deleteCharity = (id) => {\r\n    setloading(true);\r\n\r\n    service\r\n      .delete(DELETE_CHARITY + id, {})\r\n      .then((res) => {\r\n        if (res.message == \"Charity was deleted successfully!\") {\r\n          message.success(\"Successfully Deleted :) \");\r\n        } else {\r\n          message.error(\"Failed to delete \");\r\n        }\r\n\r\n        //alert(response);\r\n        fetchData();\r\n        setloading(false);\r\n      })\r\n\r\n      .catch((e) => {\r\n        setloading(false);\r\n\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      });\r\n  };\r\n  const fetchData = () => {\r\n    setloading(true);\r\n\r\n    service.get(GET_ALL_CHARITIES, {}).then((response) => {\r\n      setloading(false);\r\n      console.log(response);\r\n      setCharityList(response);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  if (loading)\r\n    return (\r\n      <div\r\n        style={{\r\n          minHeight: 500,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Skeleton active paragraph={{ rows: 10 }} />\r\n      </div>\r\n    );\r\n  return (\r\n    <div>\r\n      <br></br>\r\n\r\n      <span\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <BankFilled style={{ fontSize: 90, color: \"#1a3353\" }}> </BankFilled>{\" \"}\r\n        <div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n        <h1 style={{ fontFamily: \"fantasy\", fontSize: 60 }}> CHARITIES </h1>\r\n      </span>\r\n      <br></br>\r\n\r\n      <Tooltip title=\"Add Charity\">\r\n        <Link to=\"charity/add\">\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<PlusCircleOutlined style={{ fontSize: \"18px\" }} />}\r\n          >\r\n            Add Charity\r\n          </Button>\r\n        </Link>\r\n      </Tooltip>\r\n      <br></br>\r\n      <br></br>\r\n      <Table columns={columns} dataSource={charityList} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Charity;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\charity\\add\\index.js",["700","701","702","703","704","705","706"],"import React, { Component, useState } from \"react\";\r\nimport { Form, Input, Button, Upload, Typography, message } from \"antd\";\r\n\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { ADD_CHARITY } from \"configs/Endpoints\";\r\nimport SkeletonImage from \"antd/lib/skeleton/Image\";\r\nimport placeHolder from \"../../../../assets/svg/icon.jpg\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 3,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Demo = () => {\r\n  const history = useHistory();\r\n  let form = \"\";\r\n  const [file, setFile] = useState(\"\");\r\n  const [loading, setloading] = useState(false);\r\n  const [image, setImage] = useState(\r\n    placeHolder\r\n  );\r\n\r\n  const onFinish = (values) => {\r\n    setloading(true);\r\n    var formData = new FormData();\r\n    formData.append(\"name\", values.name);\r\n    formData.append(\"description\", values.description);\r\n    formData.append(\"picture\", file);\r\n    console.log(file);\r\n    // const config = { headers: { 'Content-Type': 'multipart/form-data' } };\r\n    service\r\n      .post(ADD_CHARITY, formData)\r\n      .then((res) => {\r\n        if (res.createdAt) {\r\n          // history.push(\"/app/charity\");\r\n          message.success(\"Successfully Done :) \");\r\n\r\n          history.goBack();\r\n\r\n        } else {\r\n          message.error(\"Failed\");\r\n        }\r\n      })\r\n\r\n      .catch((e) => {\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setloading(false);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      ref={(f) => (form = f)}\r\n      {...layout}\r\n      name=\"AddCharity\"\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <br></br>\r\n      <Typography>\r\n        <Title>Add Charity </Title>\r\n      </Typography>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <Form.Item\r\n        label=\" Name\"\r\n        name=\"name\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input a Charity Name !\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\" Description\"\r\n        name=\"description\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input something about this charity !\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item label=\" Image\">\r\n        <Form.Item\r\n          name=\"picture\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input something about this charity !\",\r\n            },\r\n          ]}\r\n          valuePropName=\"picture\"\r\n          noStyle\r\n        >\r\n          <Upload.Dragger\r\n            accept=\"image/*\"\r\n            beforeUpload={(file) => {\r\n              setFile(file);\r\n              let reader = new FileReader();\r\n              reader.onload = (e) => {\r\n                setImage(e.target.result);\r\n              };\r\n              reader.readAsDataURL(file);\r\n\r\n              // Prevent upload\r\n              return false;\r\n            }}\r\n            name=\"picture\"\r\n          >\r\n            <img style={{ objectFit:'contain',height: 200, width: 200 }} src={image}></img>\r\n            <br></br> <br></br> <br></br>\r\n            <p className=\"ant-upload-text\">\r\n              Click or drag file to this area to upload\r\n            </p>\r\n          </Upload.Dragger>\r\n        </Form.Item>\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport class AddCharity extends Component {\r\n  render() {\r\n    return <Demo />;\r\n  }\r\n}\r\n\r\nexport default AddCharity;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\charity\\edit\\index.js",["707","708","709","710","711","712","713","714"],"import React, { Component, useState } from \"react\";\r\nimport { Form, Input, Button, Upload, message, Typography } from \"antd\";\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { EDIT_CHARITY } from \"configs/Endpoints\";\r\nimport { IMAGE_BASE_URL } from \"configs/AppConfig\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\nconst normFile = (e) => {\r\n  console.log(\"Upload event:\", e);\r\n  if (Array.isArray(e)) {\r\n    return e;\r\n  }\r\n  return e && e.fileList;\r\n};\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 3,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Demo = (props) => {\r\n  const history = useHistory();\r\n\r\n  // console.log(\"Props:\", props.location.dataProps.charitydetails.name);\r\n\r\n  const [file, setFile] = useState();\r\n  const [loading, setloading] = useState(false);\r\n  const [image, setImage] = useState(\r\n    IMAGE_BASE_URL + props.location.dataProps.charitydetails.picture\r\n  );\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n\r\n    setloading(true);\r\n    var formData = new FormData();\r\n    formData.append(\"name\", values.name);\r\n    formData.append(\"description\", values.description);\r\n    formData.append(\"picture\", file);\r\n    console.log(file);\r\n    service\r\n      .put(EDIT_CHARITY + props.location.dataProps.charitydetails.id, formData)\r\n      .then((res) => {\r\n        if (res.message == \"Charity was updated successfully.\") {\r\n          // history.push(\"/app/charity\");\r\n          history.goBack();\r\n          message.success(\"Successfully Done :) \");\r\n        } else {\r\n          message.error(\"Failed\");\r\n        }\r\n      })\r\n\r\n      .catch((e) => {\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setloading(false);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"EditCharity\"\r\n      initialValues={{\r\n        name: props.location.dataProps.charitydetails.name,\r\n        description: props.location.dataProps.charitydetails.description,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <br></br>\r\n      <Typography>\r\n        <Title>Edit Charity </Title>\r\n      </Typography>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <Form.Item label=\"Name\" name=\"name\">\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Description\" name=\"description\">\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\" Edit Picture\">\r\n        <Form.Item name=\"picture\" valuePropName=\"picture\" noStyle>\r\n          <Upload.Dragger\r\n                      accept=\"image/*\"\r\n\r\n            beforeUpload={(file) => {\r\n              setFile(file);\r\n              let reader = new FileReader();\r\n              reader.onload = (e) => {\r\n                setImage(e.target.result);\r\n              };\r\n              reader.readAsDataURL(file);\r\n\r\n              // Prevent upload\r\n              return false;\r\n            }}\r\n            name=\"picture\"\r\n          >\r\n            <img style={{ height: 200, width: 200 }} src={image}></img>\r\n            <br></br> <br></br> <br></br>{\" \"}\r\n            <p className=\"ant-upload-text\">Upload new Image</p>\r\n          </Upload.Dragger>\r\n        </Form.Item>\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\activity\\index.js",["715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  Divider,\r\n  Skeleton,\r\n  Button,\r\n  Tooltip,\r\n  message,\r\n  Select,\r\n  Form,\r\n} from \"antd\";\r\nimport {\r\n  PlusCircleOutlined,\r\n  BankFilled,\r\n  InteractionOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport {\r\n  GET_ALL_CHARITIES,\r\n  DELETE_CHARITY,\r\n  GET_ALL_ACTIVITY,\r\n  GET_ACTIVITY_BY_ID,\r\n  GET_ALL_CATEGORIES,\r\n  ALL_TYPES,\r\n  ALL_USERS,\r\n} from \"configs/Endpoints\";\r\nimport { IMAGE_BASE_URL } from \"configs/AppConfig\";\r\nimport Moment from \"moment\";\r\n\r\nconst Activity = () => {\r\n  const id = 0;\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Activity ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n\r\n    {\r\n      title: \"User ID\",\r\n      dataIndex: \"users_id\",\r\n      key: \"name\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n    {\r\n      title: \"Activity Details \",\r\n      dataIndex: \"description\",\r\n      key: \"description\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n\r\n    {\r\n      title: \"Activity Time\",\r\n      dataIndex: \"createdAt\",\r\n      key: \"startsOn\",\r\n      render: (text) => <a href=\"/#\">{Moment(text).format(\"LLLL\")}</a>,\r\n    },\r\n  ];\r\n  const [activityList, setActivityList] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const [usertList, setUserList] = useState([]);\r\n\r\n  // drop down things\r\n  const { Option } = Select;\r\n  function handleChange(value) {\r\n    console.log(value);\r\n    if (value == \"all\") {\r\n      fetchData();\r\n    } else {\r\n      service.get(GET_ACTIVITY_BY_ID + value).then((response) => {\r\n        setActivityList(response);\r\n      });\r\n    }\r\n    //  console.log(`selected ${value}`);\r\n  }\r\n\r\n  // date picker methods\r\n  function onChange(value, dateString) {\r\n    console.log(\"Formatted Selected Time: \", value.toJSON());\r\n  }\r\n\r\n  function onOk(value) {\r\n    console.log(\"onOk: \", value);\r\n  }\r\n\r\n  // get all method\r\n  const fetchusers = () => {\r\n    setloading(true);\r\n\r\n    service.get(ALL_USERS).then((response) => {\r\n      setloading(false);\r\n      console.log(response);\r\n      setUserList(response);\r\n    });\r\n  };\r\n\r\n  const fetchData = () => {\r\n    setloading(true);\r\n    service.get(GET_ALL_ACTIVITY, {}).then((response) => {\r\n      setloading(false);\r\n      console.log(response);\r\n      setActivityList(response);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n    fetchusers();\r\n  }, []);\r\n  if (loading)\r\n    return (\r\n      <div\r\n        style={{\r\n          minHeight: 500,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Skeleton active paragraph={{ rows: 10 }} />\r\n      </div>\r\n    );\r\n  return (\r\n    <div>\r\n      <br></br>\r\n\r\n      <span\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <InteractionOutlined\r\n          style={{ fontSize: 90, color: \"#1a3353\" }}\r\n        ></InteractionOutlined>\r\n        <div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n        <h1 style={{ fontFamily: \"fantasy\", fontSize: 60 }}> ACTIVITIES </h1>\r\n      </span>\r\n      <Form.Item label=\" See Activity By Name  \" name=\"user_id\">\r\n        <Select\r\n          defaultValue=\"Choose \"\r\n          style={{ width: \"auto\" }}\r\n          onChange={handleChange}\r\n        >\r\n          <Option value={\"all\"}>All Users</Option>\r\n          {usertList.map((user) => (\r\n            <Option value={user.id}>{user.name}</Option>\r\n          ))}\r\n        </Select>\r\n      </Form.Item>\r\n\r\n      <br></br>\r\n      <Table columns={columns} dataSource={activityList} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Activity;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\home\\index.js",["731","732","733","734","735","736","737","738","739","740","741","742","743","744","745"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Divider, Skeleton, Button, Tooltip, message } from \"antd\";\r\nimport {\r\n  PlusCircleOutlined,\r\n  EditOutlined,\r\n  FormOutlined,\r\n  DeleteOutlined,\r\n  FundViewOutlined,\r\n  PlayCircleOutlined,PlayCircleFilled  \r\n} from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"moment\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { DELETE_TOURNAMENT, GET_ALL_TOURNAMENT } from \"configs/Endpoints\";\r\nimport { IMAGE_BASE_URL } from \"configs/AppConfig\";\r\n\r\nconst Home = () => {\r\n  const columns = [\r\n    {\r\n      title: \"Avatar\",\r\n      dataIndex: \"picture\",\r\n      key: \"picture\",\r\n      render: (text) => <img style={{objectFit:'cover', width:50, height:50,borderRadius:100 }}src={`${IMAGE_BASE_URL+text}`}/>,\r\n    },\r\n\r\n\r\n    {\r\n      title: \"Tournament ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n\r\n    {\r\n      title: \"Tournament Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n\r\n    {\r\n      title: \"Start Time \",\r\n      dataIndex: \"startsOn\",\r\n      key: \"startsOn\",\r\n      render: (text) => <a href=\"/#\">{Moment(text).format(\"LLLL\")}</a>,\r\n    },\r\n\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"setActive\",\r\n      key: \"setActive\",\r\n      render: (text) => {\r\n        if (text == 1) {\r\n          return <a href=\"/#\">Active</a>;\r\n        } else if (text == 0) {\r\n          return <a href=\"/#\">Ended</a>;\r\n        } else {\r\n          return <a href=\"/#\">Not Started</a>;\r\n        }\r\n      },\r\n    },\r\n    {\r\n      title: \"Required Tickets\",\r\n      dataIndex: \"ticketReq\",\r\n      key: \"ticketReq\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n    // {\r\n    //   title: \"Action\",\r\n    //   key: \"action\",\r\n    //   render: (text, record) => {\r\n    //     return (\r\n    //       <span>\r\n    //         {record.setActive == 0 ? (\r\n    //           <>\r\n    //             <Link\r\n    //               to={{\r\n    //                 pathname: \"tournament\",\r\n    //                 dataProps: { tournamentdetails: record },\r\n    //               }}\r\n    //             >\r\n    //               <Button\r\n    //                 type=\"primary\"\r\n    //                 style={{ background: \"green\", borderColor: \"green\" }}\r\n    //                 icon={<FundViewOutlined style={{ fontSize: \"18px\" }} />}\r\n    //               >\r\n    //                 Results\r\n    //               </Button>\r\n    //             </Link>\r\n    //             <Divider type=\"vertical\" />\r\n    //           </>\r\n    //         ) : (\r\n    //           <>\r\n    //             <Link\r\n    //               to={{\r\n    //                 pathname: \"tournament/manage/\" + record.id,\r\n    //                 dataProps: { tournamentdetails: record },\r\n    //               }}\r\n    //             >\r\n    //               <Button\r\n    //                 type=\"primary\"\r\n    //                 icon={<EditOutlined style={{ fontSize: \"15px\" }} />}\r\n    //               >\r\n    //                 Manage\r\n    //               </Button>\r\n    //             </Link>\r\n    //             <Divider type=\"vertical\" />{\" \"}\r\n    //           </>\r\n    //         )}\r\n\r\n    //         {record.setActive == null ? (\r\n    //           <>\r\n    //             <Link\r\n    //               to={{\r\n    //                 pathname: \"tournament/edit/\" + record.id,\r\n    //                 dataProps: { tournamentdetails: record },\r\n    //               }}\r\n    //             >\r\n    //               <Button\r\n    //                 style={{ background: \"orange\", borderColor: \"orange\" }}\r\n    //                 type=\"primary\"\r\n    //                 icon={<FormOutlined style={{ fontSize: \"14px\" }} />}\r\n    //               >\r\n    //                 Edit\r\n    //               </Button>\r\n    //             </Link>\r\n    //             <Divider type=\"vertical\" />\r\n    //           </>\r\n    //         ) : (\r\n    //           <span></span>\r\n    //         )}\r\n\r\n    //         {record.setActive == null ? (\r\n    //           <Link\r\n    //             onClick={() => {\r\n    //               deleteTournament(record.id);\r\n    //             }}\r\n    //           >\r\n    //             <Button\r\n    //               type=\"danger\"\r\n    //               icon={<DeleteOutlined style={{ fontSize: \"15px\" }} />}\r\n    //             >\r\n    //               Delete\r\n    //             </Button>\r\n    //           </Link>\r\n    //         ) : (\r\n    //           <span></span>\r\n    //         )}\r\n    //       </span>\r\n    //     );\r\n    //   },\r\n    // },\r\n  ];\r\n  const [tournamentList, setTournamentList] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const deleteTournament = (id) => {\r\n    setloading(true);\r\n\r\n    service\r\n      .delete(DELETE_TOURNAMENT + id)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.message == \"Tournament was deleted successfully!\") {\r\n          message.success(\"Successfully Deleted :) \");\r\n        } else {\r\n          message.error(\"Failed to delete \");\r\n        }\r\n\r\n        //alert(response);\r\n        fetchData();\r\n        setloading(false);\r\n      })\r\n      .catch((e) => {\r\n        setloading(false);\r\n\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      });\r\n  };\r\n  const fetchData = () => {\r\n    setloading(true);\r\n\r\n    service.get(GET_ALL_TOURNAMENT, )\r\n      .then((res) => {\r\n        setloading(false);\r\n        console.log(res);\r\n        setTournamentList(res.filter(R => R.setActive === 1));\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  if (loading)\r\n    return (\r\n      <div\r\n        style={{\r\n          minHeight: 500,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Skeleton active paragraph={{ rows: 10 }} />\r\n      </div>\r\n    );\r\n  return (\r\n    <div>\r\n            <br></br> \r\n\r\n      <span\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <PlayCircleFilled  style={{ fontSize: 70,color:\"#1a3353\" }}> </PlayCircleFilled >{\" \"}\r\n        <div>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </div>\r\n        <h1 style={{ fontFamily: \"fantasy\", fontSize: 50 }}> ACTIVE TOURNAMENTS </h1>\r\n      </span>\r\n      <br></br> \r\n      <br></br>\r\n\r\n      <br></br>\r\n      <Table columns={columns} dataSource={tournamentList} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\services\\JwtAuthService.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\redux\\actions\\Auth.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\lang\\entries\\zh_CN.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\lang\\entries\\en_US.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\TopNav.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\components\\layout-components\\SideNav.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\auth-views\\index.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\auth-views\\errors\\error-page-2\\index.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\auth-views\\authentication\\login\\index.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\auth-views\\errors\\error-page-1\\index.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\auth-views\\authentication\\forgot-password\\index.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\auth-views\\authentication\\login-2\\index.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\auth-views\\authentication\\login-1\\index.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\auth-views\\authentication\\register-1\\index.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\auth-views\\authentication\\register-2\\index.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\auth-views\\components\\RegisterForm.js",[],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\employee\\index.js",["746","747","748"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Divider, Skeleton, Button, Tooltip, message } from \"antd\";\r\nimport { PlusCircleOutlined, BankFilled,UsergroupAddOutlined  } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { GET_ALL_CHARITIES, DELETE_CHARITY } from \"configs/Endpoints\";\r\nimport { IMAGE_BASE_URL } from \"configs/AppConfig\";\r\n\r\nconst Employee = () => {\r\n  const columns = [\r\n    {\r\n      title: \"Avatar\",\r\n      dataIndex: \"picture\",\r\n      key: \"picture\",\r\n      render: (text) => (\r\n        <img\r\n          style={{\r\n            objectFit: \"cover\",\r\n            width: 50,\r\n            height: 50,\r\n            borderRadius: 100,\r\n          }}\r\n          src={`${IMAGE_BASE_URL + text}`}\r\n        />\r\n      ),\r\n    },\r\n\r\n    {\r\n      title: \"Employee ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n    {\r\n      title: \"Employee Description \",\r\n      dataIndex: \"description\",\r\n      key: \"description\",\r\n      render: (text) => {\r\n        console.log(text.length)\r\n        if (text.length < 40) {\r\n          return <a href=\"/#\">{text}</a>;\r\n        }else{\r\n          return <a href=\"/#\">{text.slice(0,45)+\"...\"}</a>;\r\n        }\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => (\r\n        <span>\r\n          <Link\r\n            to={{\r\n              pathname: \"employee/edit/\" + record.id,\r\n              dataProps: { charitydetails: record },\r\n            }}\r\n          >\r\n            Edit\r\n          </Link>\r\n          <Divider type=\"vertical\" />\r\n          <Link\r\n            onClick={() => {\r\n              deleteCharity(record.id);\r\n            }}\r\n          >\r\n            Delete\r\n          </Link>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  const [charityList, setCharityList] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const deleteCharity = (id) => {\r\n    setloading(true);\r\n\r\n    service\r\n      .delete(DELETE_CHARITY + id, {})\r\n      .then((res) => {\r\n        if (res.message == \"Employee was deleted successfully!\") {\r\n          message.success(\"Successfully Deleted :) \");\r\n        } else {\r\n          message.error(\"Failed to delete \");\r\n        }\r\n\r\n        //alert(response);\r\n        fetchData();\r\n        setloading(false);\r\n      })\r\n\r\n      .catch((e) => {\r\n        setloading(false);\r\n\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      });\r\n  };\r\n  const fetchData = () => {\r\n    setloading(true);\r\n\r\n    service.get(GET_ALL_CHARITIES, {}).then((response) => {\r\n      setloading(false);\r\n      console.log(response);\r\n      setCharityList(response);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  if (loading)\r\n    return (\r\n      <div\r\n        style={{\r\n          minHeight: 500,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Skeleton active paragraph={{ rows: 10 }} />\r\n      </div>\r\n    );\r\n  return (\r\n    <div>\r\n      <br></br>\r\n\r\n      <span\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <UsergroupAddOutlined style={{ fontSize: 90, color: \"#1a3353\" }}> </UsergroupAddOutlined >{\" \"}\r\n        <div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n        <h1 style={{ fontFamily: \"fantasy\", fontSize: 60 }}> EMPLOYEES </h1>\r\n      </span>\r\n      <br></br>\r\n\r\n      <Tooltip title=\"Add Employee\">\r\n        <Link to=\"employee/add\">\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<PlusCircleOutlined style={{ fontSize: \"18px\" }} />}\r\n          >\r\n            Add Employee\r\n          </Button>\r\n        </Link>\r\n      </Tooltip>\r\n      <br></br>\r\n      <br></br>\r\n      <Table columns={columns} dataSource={charityList} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Employee;\r\n","C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\employee\\add\\index.js",["749","750","751","752","753","754","755"],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\app-views\\employee\\edit\\index.js",["756","757","758","759","760","761","762","763"],"C:\\Users\\Mamba House\\Desktop\\FYP\\frontend\\src\\views\\auth-views\\components\\employeeLogin.js",["764","765","766","767","768","769","770"],{"ruleId":"771","replacedBy":"772"},{"ruleId":"773","replacedBy":"774"},{"ruleId":"775","severity":1,"message":"776","line":2,"column":10,"nodeType":"777","messageId":"778","endLine":2,"endColumn":13},{"ruleId":"775","severity":1,"message":"779","line":1,"column":23,"nodeType":"777","messageId":"778","endLine":1,"endColumn":38},{"ruleId":"775","severity":1,"message":"780","line":1,"column":40,"nodeType":"777","messageId":"778","endLine":1,"endColumn":47},{"ruleId":"775","severity":1,"message":"781","line":3,"column":8,"nodeType":"777","messageId":"778","endLine":3,"endColumn":12},{"ruleId":"775","severity":1,"message":"782","line":4,"column":7,"nodeType":"777","messageId":"778","endLine":4,"endColumn":20},{"ruleId":"775","severity":1,"message":"783","line":12,"column":3,"nodeType":"777","messageId":"778","endLine":12,"endColumn":9},{"ruleId":"775","severity":1,"message":"784","line":2,"column":25,"nodeType":"777","messageId":"778","endLine":2,"endColumn":33},{"ruleId":"775","severity":1,"message":"785","line":2,"column":31,"nodeType":"777","messageId":"778","endLine":2,"endColumn":37},{"ruleId":"775","severity":1,"message":"786","line":4,"column":10,"nodeType":"777","messageId":"778","endLine":4,"endColumn":24},{"ruleId":"775","severity":1,"message":"787","line":4,"column":26,"nodeType":"777","messageId":"778","endLine":4,"endColumn":39},{"ruleId":"775","severity":1,"message":"788","line":7,"column":10,"nodeType":"777","messageId":"778","endLine":7,"endColumn":22},{"ruleId":"775","severity":1,"message":"789","line":9,"column":16,"nodeType":"777","messageId":"778","endLine":9,"endColumn":25},{"ruleId":"775","severity":1,"message":"790","line":9,"column":27,"nodeType":"777","messageId":"778","endLine":9,"endColumn":31},{"ruleId":"775","severity":1,"message":"791","line":6,"column":10,"nodeType":"777","messageId":"778","endLine":6,"endColumn":25},{"ruleId":"775","severity":1,"message":"792","line":6,"column":26,"nodeType":"777","messageId":"778","endLine":6,"endColumn":44},{"ruleId":"793","severity":1,"message":"794","line":69,"column":27,"nodeType":"795","messageId":"796","endLine":69,"endColumn":29},{"ruleId":"775","severity":1,"message":"797","line":1,"column":17,"nodeType":"777","messageId":"778","endLine":1,"endColumn":26},{"ruleId":"775","severity":1,"message":"785","line":2,"column":31,"nodeType":"777","messageId":"778","endLine":2,"endColumn":37},{"ruleId":"775","severity":1,"message":"786","line":3,"column":10,"nodeType":"777","messageId":"778","endLine":3,"endColumn":24},{"ruleId":"775","severity":1,"message":"787","line":3,"column":26,"nodeType":"777","messageId":"778","endLine":3,"endColumn":39},{"ruleId":"775","severity":1,"message":"798","line":5,"column":10,"nodeType":"777","messageId":"778","endLine":5,"endColumn":23},{"ruleId":"775","severity":1,"message":"789","line":8,"column":16,"nodeType":"777","messageId":"778","endLine":8,"endColumn":25},{"ruleId":"775","severity":1,"message":"790","line":8,"column":27,"nodeType":"777","messageId":"778","endLine":8,"endColumn":31},{"ruleId":"775","severity":1,"message":"799","line":9,"column":7,"nodeType":"777","messageId":"778","endLine":9,"endColumn":15},{"ruleId":"793","severity":1,"message":"794","line":46,"column":25,"nodeType":"795","messageId":"796","endLine":46,"endColumn":27},{"ruleId":"775","severity":1,"message":"785","line":2,"column":31,"nodeType":"777","messageId":"778","endLine":2,"endColumn":37},{"ruleId":"775","severity":1,"message":"786","line":4,"column":10,"nodeType":"777","messageId":"778","endLine":4,"endColumn":24},{"ruleId":"775","severity":1,"message":"787","line":4,"column":26,"nodeType":"777","messageId":"778","endLine":4,"endColumn":39},{"ruleId":"775","severity":1,"message":"788","line":7,"column":10,"nodeType":"777","messageId":"778","endLine":7,"endColumn":22},{"ruleId":"775","severity":1,"message":"789","line":9,"column":16,"nodeType":"777","messageId":"778","endLine":9,"endColumn":25},{"ruleId":"775","severity":1,"message":"790","line":9,"column":27,"nodeType":"777","messageId":"778","endLine":9,"endColumn":31},{"ruleId":"775","severity":1,"message":"800","line":3,"column":29,"nodeType":"777","messageId":"778","endLine":3,"endColumn":50},{"ruleId":"775","severity":1,"message":"791","line":6,"column":10,"nodeType":"777","messageId":"778","endLine":6,"endColumn":25},{"ruleId":"775","severity":1,"message":"792","line":6,"column":26,"nodeType":"777","messageId":"778","endLine":6,"endColumn":44},{"ruleId":"793","severity":1,"message":"794","line":62,"column":27,"nodeType":"795","messageId":"796","endLine":62,"endColumn":29},{"ruleId":"775","severity":1,"message":"797","line":1,"column":17,"nodeType":"777","messageId":"778","endLine":1,"endColumn":26},{"ruleId":"775","severity":1,"message":"785","line":2,"column":31,"nodeType":"777","messageId":"778","endLine":2,"endColumn":37},{"ruleId":"775","severity":1,"message":"786","line":3,"column":10,"nodeType":"777","messageId":"778","endLine":3,"endColumn":24},{"ruleId":"775","severity":1,"message":"787","line":3,"column":26,"nodeType":"777","messageId":"778","endLine":3,"endColumn":39},{"ruleId":"775","severity":1,"message":"798","line":5,"column":10,"nodeType":"777","messageId":"778","endLine":5,"endColumn":23},{"ruleId":"775","severity":1,"message":"789","line":8,"column":16,"nodeType":"777","messageId":"778","endLine":8,"endColumn":25},{"ruleId":"775","severity":1,"message":"790","line":8,"column":27,"nodeType":"777","messageId":"778","endLine":8,"endColumn":31},{"ruleId":"775","severity":1,"message":"799","line":9,"column":7,"nodeType":"777","messageId":"778","endLine":9,"endColumn":15},{"ruleId":"793","severity":1,"message":"794","line":46,"column":25,"nodeType":"795","messageId":"796","endLine":46,"endColumn":27},{"ruleId":"775","severity":1,"message":"801","line":19,"column":7,"nodeType":"777","messageId":"778","endLine":19,"endColumn":24},{"ruleId":"775","severity":1,"message":"802","line":2,"column":17,"nodeType":"777","messageId":"778","endLine":2,"endColumn":24},{"ruleId":"775","severity":1,"message":"803","line":4,"column":10,"nodeType":"777","messageId":"778","endLine":4,"endColumn":14},{"ruleId":"793","severity":1,"message":"794","line":81,"column":26,"nodeType":"795","messageId":"796","endLine":81,"endColumn":28},{"ruleId":"804","severity":1,"message":"805","line":130,"column":6,"nodeType":"806","endLine":130,"endColumn":8,"suggestions":"807"},{"ruleId":"775","severity":1,"message":"802","line":2,"column":17,"nodeType":"777","messageId":"778","endLine":2,"endColumn":24},{"ruleId":"775","severity":1,"message":"783","line":2,"column":36,"nodeType":"777","messageId":"778","endLine":2,"endColumn":42},{"ruleId":"775","severity":1,"message":"808","line":2,"column":44,"nodeType":"777","messageId":"778","endLine":2,"endColumn":51},{"ruleId":"775","severity":1,"message":"809","line":2,"column":53,"nodeType":"777","messageId":"778","endLine":2,"endColumn":60},{"ruleId":"775","severity":1,"message":"810","line":3,"column":10,"nodeType":"777","messageId":"778","endLine":3,"endColumn":28},{"ruleId":"775","severity":1,"message":"803","line":4,"column":10,"nodeType":"777","messageId":"778","endLine":4,"endColumn":14},{"ruleId":"775","severity":1,"message":"811","line":6,"column":10,"nodeType":"777","messageId":"778","endLine":6,"endColumn":19},{"ruleId":"804","severity":1,"message":"812","line":108,"column":6,"nodeType":"806","endLine":108,"endColumn":8,"suggestions":"813"},{"ruleId":"775","severity":1,"message":"802","line":3,"column":31,"nodeType":"777","messageId":"778","endLine":3,"endColumn":38},{"ruleId":"775","severity":1,"message":"814","line":13,"column":8,"nodeType":"777","messageId":"778","endLine":13,"endColumn":22},{"ruleId":"775","severity":1,"message":"815","line":26,"column":5,"nodeType":"777","messageId":"778","endLine":26,"endColumn":16},{"ruleId":"775","severity":1,"message":"816","line":30,"column":5,"nodeType":"777","messageId":"778","endLine":30,"endColumn":16},{"ruleId":"775","severity":1,"message":"817","line":32,"column":5,"nodeType":"777","messageId":"778","endLine":32,"endColumn":12},{"ruleId":"775","severity":1,"message":"818","line":35,"column":5,"nodeType":"777","messageId":"778","endLine":35,"endColumn":18},{"ruleId":"775","severity":1,"message":"819","line":36,"column":5,"nodeType":"777","messageId":"778","endLine":36,"endColumn":20},{"ruleId":"793","severity":1,"message":"794","line":58,"column":30,"nodeType":"795","messageId":"796","endLine":58,"endColumn":32},{"ruleId":"804","severity":1,"message":"805","line":91,"column":6,"nodeType":"806","endLine":91,"endColumn":8,"suggestions":"820"},{"ruleId":"775","severity":1,"message":"808","line":7,"column":3,"nodeType":"777","messageId":"778","endLine":7,"endColumn":10},{"ruleId":"775","severity":1,"message":"821","line":10,"column":3,"nodeType":"777","messageId":"778","endLine":10,"endColumn":8},{"ruleId":"775","severity":1,"message":"822","line":11,"column":3,"nodeType":"777","messageId":"778","endLine":11,"endColumn":13},{"ruleId":"775","severity":1,"message":"810","line":16,"column":10,"nodeType":"777","messageId":"778","endLine":16,"endColumn":28},{"ruleId":"775","severity":1,"message":"803","line":17,"column":10,"nodeType":"777","messageId":"778","endLine":17,"endColumn":14},{"ruleId":"823","severity":1,"message":"824","line":200,"column":21,"nodeType":"825","endLine":200,"endColumn":74},{"ruleId":"775","severity":1,"message":"797","line":1,"column":17,"nodeType":"777","messageId":"778","endLine":1,"endColumn":26},{"ruleId":"775","severity":1,"message":"785","line":2,"column":31,"nodeType":"777","messageId":"778","endLine":2,"endColumn":37},{"ruleId":"775","severity":1,"message":"786","line":3,"column":10,"nodeType":"777","messageId":"778","endLine":3,"endColumn":24},{"ruleId":"775","severity":1,"message":"787","line":3,"column":26,"nodeType":"777","messageId":"778","endLine":3,"endColumn":39},{"ruleId":"775","severity":1,"message":"789","line":8,"column":16,"nodeType":"777","messageId":"778","endLine":8,"endColumn":25},{"ruleId":"775","severity":1,"message":"790","line":8,"column":27,"nodeType":"777","messageId":"778","endLine":8,"endColumn":31},{"ruleId":"775","severity":1,"message":"799","line":9,"column":7,"nodeType":"777","messageId":"778","endLine":9,"endColumn":15},{"ruleId":"775","severity":1,"message":"826","line":36,"column":10,"nodeType":"777","messageId":"778","endLine":36,"endColumn":13},{"ruleId":"775","severity":1,"message":"827","line":36,"column":15,"nodeType":"777","messageId":"778","endLine":36,"endColumn":21},{"ruleId":"793","severity":1,"message":"794","line":53,"column":26,"nodeType":"795","messageId":"796","endLine":53,"endColumn":28},{"ruleId":"775","severity":1,"message":"785","line":2,"column":31,"nodeType":"777","messageId":"778","endLine":2,"endColumn":37},{"ruleId":"775","severity":1,"message":"828","line":2,"column":60,"nodeType":"777","messageId":"778","endLine":2,"endColumn":66},{"ruleId":"775","severity":1,"message":"786","line":4,"column":10,"nodeType":"777","messageId":"778","endLine":4,"endColumn":24},{"ruleId":"775","severity":1,"message":"787","line":4,"column":26,"nodeType":"777","messageId":"778","endLine":4,"endColumn":39},{"ruleId":"775","severity":1,"message":"789","line":9,"column":16,"nodeType":"777","messageId":"778","endLine":9,"endColumn":25},{"ruleId":"775","severity":1,"message":"790","line":9,"column":27,"nodeType":"777","messageId":"778","endLine":9,"endColumn":31},{"ruleId":"793","severity":1,"message":"794","line":58,"column":30,"nodeType":"795","messageId":"796","endLine":58,"endColumn":32},{"ruleId":"804","severity":1,"message":"805","line":87,"column":6,"nodeType":"806","endLine":87,"endColumn":8,"suggestions":"829"},{"ruleId":"775","severity":1,"message":"797","line":1,"column":17,"nodeType":"777","messageId":"778","endLine":1,"endColumn":26},{"ruleId":"775","severity":1,"message":"785","line":2,"column":31,"nodeType":"777","messageId":"778","endLine":2,"endColumn":37},{"ruleId":"775","severity":1,"message":"786","line":3,"column":10,"nodeType":"777","messageId":"778","endLine":3,"endColumn":24},{"ruleId":"775","severity":1,"message":"787","line":3,"column":26,"nodeType":"777","messageId":"778","endLine":3,"endColumn":39},{"ruleId":"775","severity":1,"message":"789","line":8,"column":16,"nodeType":"777","messageId":"778","endLine":8,"endColumn":25},{"ruleId":"775","severity":1,"message":"790","line":8,"column":27,"nodeType":"777","messageId":"778","endLine":8,"endColumn":31},{"ruleId":"775","severity":1,"message":"799","line":9,"column":7,"nodeType":"777","messageId":"778","endLine":9,"endColumn":15},{"ruleId":"775","severity":1,"message":"826","line":36,"column":10,"nodeType":"777","messageId":"778","endLine":36,"endColumn":13},{"ruleId":"775","severity":1,"message":"827","line":36,"column":15,"nodeType":"777","messageId":"778","endLine":36,"endColumn":21},{"ruleId":"793","severity":1,"message":"794","line":52,"column":26,"nodeType":"795","messageId":"796","endLine":52,"endColumn":28},{"ruleId":"823","severity":1,"message":"824","line":22,"column":25,"nodeType":"825","endLine":22,"endColumn":128},{"ruleId":"775","severity":1,"message":"830","line":120,"column":23,"nodeType":"777","messageId":"778","endLine":120,"endColumn":37},{"ruleId":"793","severity":1,"message":"794","line":134,"column":29,"nodeType":"795","messageId":"796","endLine":134,"endColumn":31},{"ruleId":"793","severity":1,"message":"794","line":160,"column":30,"nodeType":"795","messageId":"796","endLine":160,"endColumn":32},{"ruleId":"804","severity":1,"message":"805","line":203,"column":6,"nodeType":"806","endLine":203,"endColumn":8,"suggestions":"831"},{"ruleId":"775","severity":1,"message":"785","line":2,"column":31,"nodeType":"777","messageId":"778","endLine":2,"endColumn":37},{"ruleId":"775","severity":1,"message":"786","line":4,"column":10,"nodeType":"777","messageId":"778","endLine":4,"endColumn":24},{"ruleId":"775","severity":1,"message":"787","line":4,"column":26,"nodeType":"777","messageId":"778","endLine":4,"endColumn":39},{"ruleId":"775","severity":1,"message":"789","line":9,"column":16,"nodeType":"777","messageId":"778","endLine":9,"endColumn":25},{"ruleId":"775","severity":1,"message":"790","line":9,"column":27,"nodeType":"777","messageId":"778","endLine":9,"endColumn":31},{"ruleId":"775","severity":1,"message":"797","line":1,"column":17,"nodeType":"777","messageId":"778","endLine":1,"endColumn":26},{"ruleId":"775","severity":1,"message":"786","line":3,"column":10,"nodeType":"777","messageId":"778","endLine":3,"endColumn":24},{"ruleId":"775","severity":1,"message":"787","line":3,"column":26,"nodeType":"777","messageId":"778","endLine":3,"endColumn":39},{"ruleId":"775","severity":1,"message":"789","line":9,"column":16,"nodeType":"777","messageId":"778","endLine":9,"endColumn":25},{"ruleId":"775","severity":1,"message":"790","line":9,"column":27,"nodeType":"777","messageId":"778","endLine":9,"endColumn":31},{"ruleId":"775","severity":1,"message":"799","line":10,"column":7,"nodeType":"777","messageId":"778","endLine":10,"endColumn":15},{"ruleId":"793","severity":1,"message":"794","line":61,"column":26,"nodeType":"795","messageId":"796","endLine":61,"endColumn":28},{"ruleId":"823","severity":1,"message":"824","line":123,"column":13,"nodeType":"825","endLine":123,"endColumn":66},{"ruleId":"775","severity":1,"message":"786","line":4,"column":10,"nodeType":"777","messageId":"778","endLine":4,"endColumn":24},{"ruleId":"775","severity":1,"message":"787","line":4,"column":26,"nodeType":"777","messageId":"778","endLine":4,"endColumn":39},{"ruleId":"775","severity":1,"message":"832","line":7,"column":20,"nodeType":"777","messageId":"778","endLine":7,"endColumn":29},{"ruleId":"775","severity":1,"message":"789","line":10,"column":16,"nodeType":"777","messageId":"778","endLine":10,"endColumn":25},{"ruleId":"775","severity":1,"message":"790","line":10,"column":27,"nodeType":"777","messageId":"778","endLine":10,"endColumn":31},{"ruleId":"823","severity":1,"message":"824","line":131,"column":13,"nodeType":"825","endLine":131,"endColumn":62},{"ruleId":"775","severity":1,"message":"833","line":9,"column":3,"nodeType":"777","messageId":"778","endLine":9,"endColumn":6},{"ruleId":"775","severity":1,"message":"834","line":18,"column":3,"nodeType":"777","messageId":"778","endLine":18,"endColumn":21},{"ruleId":"823","severity":1,"message":"824","line":34,"column":9,"nodeType":"825","endLine":42,"endColumn":11},{"ruleId":"793","severity":1,"message":"794","line":71,"column":18,"nodeType":"795","messageId":"796","endLine":71,"endColumn":20},{"ruleId":"793","severity":1,"message":"794","line":73,"column":25,"nodeType":"795","messageId":"796","endLine":73,"endColumn":27},{"ruleId":"793","severity":1,"message":"794","line":93,"column":33,"nodeType":"795","messageId":"796","endLine":93,"endColumn":35},{"ruleId":"793","severity":1,"message":"794","line":186,"column":25,"nodeType":"795","messageId":"796","endLine":186,"endColumn":27},{"ruleId":"775","severity":1,"message":"835","line":13,"column":8,"nodeType":"777","messageId":"778","endLine":13,"endColumn":14},{"ruleId":"793","severity":1,"message":"794","line":45,"column":18,"nodeType":"795","messageId":"796","endLine":45,"endColumn":20},{"ruleId":"793","severity":1,"message":"794","line":47,"column":25,"nodeType":"795","messageId":"796","endLine":47,"endColumn":27},{"ruleId":"793","severity":1,"message":"794","line":121,"column":36,"nodeType":"795","messageId":"796","endLine":121,"endColumn":38},{"ruleId":"793","severity":1,"message":"794","line":277,"column":30,"nodeType":"795","messageId":"796","endLine":277,"endColumn":32},{"ruleId":"793","severity":1,"message":"794","line":303,"column":30,"nodeType":"795","messageId":"796","endLine":303,"endColumn":32},{"ruleId":"793","severity":1,"message":"794","line":329,"column":30,"nodeType":"795","messageId":"796","endLine":329,"endColumn":32},{"ruleId":"804","severity":1,"message":"836","line":384,"column":6,"nodeType":"806","endLine":384,"endColumn":8,"suggestions":"837"},{"ruleId":"793","severity":1,"message":"794","line":421,"column":30,"nodeType":"795","messageId":"796","endLine":421,"endColumn":32},{"ruleId":"775","severity":1,"message":"821","line":4,"column":3,"nodeType":"777","messageId":"778","endLine":4,"endColumn":8},{"ruleId":"775","severity":1,"message":"785","line":6,"column":3,"nodeType":"777","messageId":"778","endLine":6,"endColumn":9},{"ruleId":"775","severity":1,"message":"786","line":12,"column":10,"nodeType":"777","messageId":"778","endLine":12,"endColumn":24},{"ruleId":"775","severity":1,"message":"787","line":12,"column":26,"nodeType":"777","messageId":"778","endLine":12,"endColumn":39},{"ruleId":"775","severity":1,"message":"789","line":17,"column":16,"nodeType":"777","messageId":"778","endLine":17,"endColumn":25},{"ruleId":"775","severity":1,"message":"790","line":17,"column":27,"nodeType":"777","messageId":"778","endLine":17,"endColumn":31},{"ruleId":"775","severity":1,"message":"797","line":1,"column":17,"nodeType":"777","messageId":"778","endLine":1,"endColumn":26},{"ruleId":"775","severity":1,"message":"821","line":4,"column":3,"nodeType":"777","messageId":"778","endLine":4,"endColumn":8},{"ruleId":"775","severity":1,"message":"785","line":6,"column":3,"nodeType":"777","messageId":"778","endLine":6,"endColumn":9},{"ruleId":"775","severity":1,"message":"802","line":10,"column":3,"nodeType":"777","messageId":"778","endLine":10,"endColumn":10},{"ruleId":"775","severity":1,"message":"786","line":12,"column":10,"nodeType":"777","messageId":"778","endLine":12,"endColumn":24},{"ruleId":"775","severity":1,"message":"787","line":12,"column":26,"nodeType":"777","messageId":"778","endLine":12,"endColumn":39},{"ruleId":"775","severity":1,"message":"789","line":17,"column":16,"nodeType":"777","messageId":"778","endLine":17,"endColumn":25},{"ruleId":"775","severity":1,"message":"790","line":17,"column":27,"nodeType":"777","messageId":"778","endLine":17,"endColumn":31},{"ruleId":"793","severity":1,"message":"794","line":56,"column":26,"nodeType":"795","messageId":"796","endLine":56,"endColumn":28},{"ruleId":"775","severity":1,"message":"786","line":14,"column":10,"nodeType":"777","messageId":"778","endLine":14,"endColumn":24},{"ruleId":"775","severity":1,"message":"787","line":14,"column":26,"nodeType":"777","messageId":"778","endLine":14,"endColumn":39},{"ruleId":"775","severity":1,"message":"838","line":16,"column":10,"nodeType":"777","messageId":"778","endLine":16,"endColumn":32},{"ruleId":"775","severity":1,"message":"789","line":21,"column":16,"nodeType":"777","messageId":"778","endLine":21,"endColumn":25},{"ruleId":"775","severity":1,"message":"790","line":21,"column":27,"nodeType":"777","messageId":"778","endLine":21,"endColumn":31},{"ruleId":"823","severity":1,"message":"824","line":229,"column":13,"nodeType":"825","endLine":229,"endColumn":66},{"ruleId":"775","severity":1,"message":"797","line":1,"column":17,"nodeType":"777","messageId":"778","endLine":1,"endColumn":26},{"ruleId":"775","severity":1,"message":"786","line":15,"column":10,"nodeType":"777","messageId":"778","endLine":15,"endColumn":24},{"ruleId":"775","severity":1,"message":"787","line":15,"column":26,"nodeType":"777","messageId":"778","endLine":15,"endColumn":39},{"ruleId":"775","severity":1,"message":"789","line":21,"column":16,"nodeType":"777","messageId":"778","endLine":21,"endColumn":25},{"ruleId":"775","severity":1,"message":"790","line":21,"column":27,"nodeType":"777","messageId":"778","endLine":21,"endColumn":31},{"ruleId":"775","severity":1,"message":"799","line":22,"column":7,"nodeType":"777","messageId":"778","endLine":22,"endColumn":15},{"ruleId":"804","severity":1,"message":"805","line":66,"column":6,"nodeType":"806","endLine":66,"endColumn":8,"suggestions":"839"},{"ruleId":"793","severity":1,"message":"794","line":108,"column":25,"nodeType":"795","messageId":"796","endLine":108,"endColumn":27},{"ruleId":"823","severity":1,"message":"824","line":211,"column":13,"nodeType":"825","endLine":211,"endColumn":66},{"ruleId":"793","severity":1,"message":"794","line":62,"column":27,"nodeType":"795","messageId":"796","endLine":62,"endColumn":29},{"ruleId":"775","severity":1,"message":"821","line":4,"column":3,"nodeType":"777","messageId":"778","endLine":4,"endColumn":8},{"ruleId":"775","severity":1,"message":"785","line":6,"column":3,"nodeType":"777","messageId":"778","endLine":6,"endColumn":9},{"ruleId":"775","severity":1,"message":"786","line":12,"column":10,"nodeType":"777","messageId":"778","endLine":12,"endColumn":24},{"ruleId":"775","severity":1,"message":"787","line":12,"column":26,"nodeType":"777","messageId":"778","endLine":12,"endColumn":39},{"ruleId":"775","severity":1,"message":"789","line":17,"column":16,"nodeType":"777","messageId":"778","endLine":17,"endColumn":25},{"ruleId":"775","severity":1,"message":"790","line":17,"column":27,"nodeType":"777","messageId":"778","endLine":17,"endColumn":31},{"ruleId":"775","severity":1,"message":"840","line":38,"column":10,"nodeType":"777","messageId":"778","endLine":38,"endColumn":14},{"ruleId":"775","severity":1,"message":"841","line":38,"column":16,"nodeType":"777","messageId":"778","endLine":38,"endColumn":23},{"ruleId":"775","severity":1,"message":"797","line":1,"column":17,"nodeType":"777","messageId":"778","endLine":1,"endColumn":26},{"ruleId":"775","severity":1,"message":"821","line":4,"column":3,"nodeType":"777","messageId":"778","endLine":4,"endColumn":8},{"ruleId":"775","severity":1,"message":"785","line":6,"column":3,"nodeType":"777","messageId":"778","endLine":6,"endColumn":9},{"ruleId":"775","severity":1,"message":"802","line":10,"column":3,"nodeType":"777","messageId":"778","endLine":10,"endColumn":10},{"ruleId":"775","severity":1,"message":"786","line":12,"column":10,"nodeType":"777","messageId":"778","endLine":12,"endColumn":24},{"ruleId":"775","severity":1,"message":"787","line":12,"column":26,"nodeType":"777","messageId":"778","endLine":12,"endColumn":39},{"ruleId":"775","severity":1,"message":"789","line":17,"column":16,"nodeType":"777","messageId":"778","endLine":17,"endColumn":25},{"ruleId":"775","severity":1,"message":"790","line":17,"column":27,"nodeType":"777","messageId":"778","endLine":17,"endColumn":31},{"ruleId":"793","severity":1,"message":"794","line":52,"column":26,"nodeType":"795","messageId":"796","endLine":52,"endColumn":28},{"ruleId":"775","severity":1,"message":"785","line":2,"column":31,"nodeType":"777","messageId":"778","endLine":2,"endColumn":37},{"ruleId":"775","severity":1,"message":"786","line":4,"column":10,"nodeType":"777","messageId":"778","endLine":4,"endColumn":24},{"ruleId":"775","severity":1,"message":"787","line":4,"column":26,"nodeType":"777","messageId":"778","endLine":4,"endColumn":39},{"ruleId":"775","severity":1,"message":"789","line":9,"column":16,"nodeType":"777","messageId":"778","endLine":9,"endColumn":25},{"ruleId":"775","severity":1,"message":"790","line":9,"column":27,"nodeType":"777","messageId":"778","endLine":9,"endColumn":31},{"ruleId":"775","severity":1,"message":"797","line":1,"column":17,"nodeType":"777","messageId":"778","endLine":1,"endColumn":26},{"ruleId":"775","severity":1,"message":"785","line":2,"column":31,"nodeType":"777","messageId":"778","endLine":2,"endColumn":37},{"ruleId":"775","severity":1,"message":"786","line":3,"column":10,"nodeType":"777","messageId":"778","endLine":3,"endColumn":24},{"ruleId":"775","severity":1,"message":"787","line":3,"column":26,"nodeType":"777","messageId":"778","endLine":3,"endColumn":39},{"ruleId":"775","severity":1,"message":"789","line":8,"column":16,"nodeType":"777","messageId":"778","endLine":8,"endColumn":25},{"ruleId":"775","severity":1,"message":"790","line":8,"column":27,"nodeType":"777","messageId":"778","endLine":8,"endColumn":31},{"ruleId":"775","severity":1,"message":"799","line":9,"column":7,"nodeType":"777","messageId":"778","endLine":9,"endColumn":15},{"ruleId":"775","severity":1,"message":"826","line":36,"column":10,"nodeType":"777","messageId":"778","endLine":36,"endColumn":13},{"ruleId":"775","severity":1,"message":"827","line":36,"column":15,"nodeType":"777","messageId":"778","endLine":36,"endColumn":21},{"ruleId":"793","severity":1,"message":"794","line":49,"column":25,"nodeType":"795","messageId":"796","endLine":49,"endColumn":27},{"ruleId":"823","severity":1,"message":"824","line":15,"column":25,"nodeType":"825","endLine":15,"endColumn":128},{"ruleId":"793","severity":1,"message":"794","line":79,"column":25,"nodeType":"795","messageId":"796","endLine":79,"endColumn":27},{"ruleId":"775","severity":1,"message":"786","line":4,"column":10,"nodeType":"777","messageId":"778","endLine":4,"endColumn":24},{"ruleId":"775","severity":1,"message":"787","line":4,"column":26,"nodeType":"777","messageId":"778","endLine":4,"endColumn":39},{"ruleId":"775","severity":1,"message":"789","line":10,"column":16,"nodeType":"777","messageId":"778","endLine":10,"endColumn":25},{"ruleId":"775","severity":1,"message":"790","line":10,"column":27,"nodeType":"777","messageId":"778","endLine":10,"endColumn":31},{"ruleId":"823","severity":1,"message":"824","line":139,"column":13,"nodeType":"825","endLine":139,"endColumn":62},{"ruleId":"775","severity":1,"message":"797","line":1,"column":17,"nodeType":"777","messageId":"778","endLine":1,"endColumn":26},{"ruleId":"775","severity":1,"message":"786","line":3,"column":10,"nodeType":"777","messageId":"778","endLine":3,"endColumn":24},{"ruleId":"775","severity":1,"message":"787","line":3,"column":26,"nodeType":"777","messageId":"778","endLine":3,"endColumn":39},{"ruleId":"775","severity":1,"message":"789","line":9,"column":16,"nodeType":"777","messageId":"778","endLine":9,"endColumn":25},{"ruleId":"775","severity":1,"message":"790","line":9,"column":27,"nodeType":"777","messageId":"778","endLine":9,"endColumn":31},{"ruleId":"775","severity":1,"message":"799","line":10,"column":7,"nodeType":"777","messageId":"778","endLine":10,"endColumn":15},{"ruleId":"793","severity":1,"message":"794","line":57,"column":25,"nodeType":"795","messageId":"796","endLine":57,"endColumn":27},{"ruleId":"823","severity":1,"message":"824","line":124,"column":13,"nodeType":"825","endLine":124,"endColumn":66},{"ruleId":"823","severity":1,"message":"824","line":16,"column":9,"nodeType":"825","endLine":24,"endColumn":11},{"ruleId":"793","severity":1,"message":"794","line":76,"column":25,"nodeType":"795","messageId":"796","endLine":76,"endColumn":27},{"ruleId":"775","severity":1,"message":"786","line":4,"column":10,"nodeType":"777","messageId":"778","endLine":4,"endColumn":24},{"ruleId":"775","severity":1,"message":"787","line":4,"column":26,"nodeType":"777","messageId":"778","endLine":4,"endColumn":39},{"ruleId":"775","severity":1,"message":"789","line":10,"column":16,"nodeType":"777","messageId":"778","endLine":10,"endColumn":25},{"ruleId":"775","severity":1,"message":"790","line":10,"column":27,"nodeType":"777","messageId":"778","endLine":10,"endColumn":31},{"ruleId":"823","severity":1,"message":"824","line":126,"column":13,"nodeType":"825","endLine":126,"endColumn":62},{"ruleId":"775","severity":1,"message":"797","line":1,"column":17,"nodeType":"777","messageId":"778","endLine":1,"endColumn":26},{"ruleId":"775","severity":1,"message":"786","line":3,"column":10,"nodeType":"777","messageId":"778","endLine":3,"endColumn":24},{"ruleId":"775","severity":1,"message":"787","line":3,"column":26,"nodeType":"777","messageId":"778","endLine":3,"endColumn":39},{"ruleId":"775","severity":1,"message":"789","line":9,"column":16,"nodeType":"777","messageId":"778","endLine":9,"endColumn":25},{"ruleId":"775","severity":1,"message":"790","line":9,"column":27,"nodeType":"777","messageId":"778","endLine":9,"endColumn":31},{"ruleId":"775","severity":1,"message":"799","line":10,"column":7,"nodeType":"777","messageId":"778","endLine":10,"endColumn":15},{"ruleId":"793","severity":1,"message":"794","line":62,"column":25,"nodeType":"795","messageId":"796","endLine":62,"endColumn":27},{"ruleId":"823","severity":1,"message":"824","line":128,"column":13,"nodeType":"825","endLine":128,"endColumn":66},{"ruleId":"823","severity":1,"message":"824","line":16,"column":9,"nodeType":"825","endLine":24,"endColumn":11},{"ruleId":"793","severity":1,"message":"794","line":88,"column":25,"nodeType":"795","messageId":"796","endLine":88,"endColumn":27},{"ruleId":"775","severity":1,"message":"786","line":4,"column":10,"nodeType":"777","messageId":"778","endLine":4,"endColumn":24},{"ruleId":"775","severity":1,"message":"787","line":4,"column":26,"nodeType":"777","messageId":"778","endLine":4,"endColumn":39},{"ruleId":"775","severity":1,"message":"842","line":8,"column":8,"nodeType":"777","messageId":"778","endLine":8,"endColumn":21},{"ruleId":"775","severity":1,"message":"789","line":11,"column":16,"nodeType":"777","messageId":"778","endLine":11,"endColumn":25},{"ruleId":"775","severity":1,"message":"790","line":11,"column":27,"nodeType":"777","messageId":"778","endLine":11,"endColumn":31},{"ruleId":"775","severity":1,"message":"843","line":76,"column":20,"nodeType":"777","messageId":"778","endLine":76,"endColumn":24},{"ruleId":"823","severity":1,"message":"824","line":144,"column":13,"nodeType":"825","endLine":144,"endColumn":86},{"ruleId":"775","severity":1,"message":"797","line":1,"column":17,"nodeType":"777","messageId":"778","endLine":1,"endColumn":26},{"ruleId":"775","severity":1,"message":"786","line":3,"column":10,"nodeType":"777","messageId":"778","endLine":3,"endColumn":24},{"ruleId":"775","severity":1,"message":"787","line":3,"column":26,"nodeType":"777","messageId":"778","endLine":3,"endColumn":39},{"ruleId":"775","severity":1,"message":"789","line":9,"column":16,"nodeType":"777","messageId":"778","endLine":9,"endColumn":25},{"ruleId":"775","severity":1,"message":"790","line":9,"column":27,"nodeType":"777","messageId":"778","endLine":9,"endColumn":31},{"ruleId":"775","severity":1,"message":"799","line":10,"column":7,"nodeType":"777","messageId":"778","endLine":10,"endColumn":15},{"ruleId":"793","severity":1,"message":"794","line":57,"column":25,"nodeType":"795","messageId":"796","endLine":57,"endColumn":27},{"ruleId":"823","severity":1,"message":"824","line":124,"column":13,"nodeType":"825","endLine":124,"endColumn":66},{"ruleId":"775","severity":1,"message":"802","line":4,"column":3,"nodeType":"777","messageId":"778","endLine":4,"endColumn":10},{"ruleId":"775","severity":1,"message":"783","line":6,"column":3,"nodeType":"777","messageId":"778","endLine":6,"endColumn":9},{"ruleId":"775","severity":1,"message":"808","line":7,"column":3,"nodeType":"777","messageId":"778","endLine":7,"endColumn":10},{"ruleId":"775","severity":1,"message":"809","line":8,"column":3,"nodeType":"777","messageId":"778","endLine":8,"endColumn":10},{"ruleId":"775","severity":1,"message":"810","line":13,"column":3,"nodeType":"777","messageId":"778","endLine":13,"endColumn":21},{"ruleId":"775","severity":1,"message":"844","line":14,"column":3,"nodeType":"777","messageId":"778","endLine":14,"endColumn":13},{"ruleId":"775","severity":1,"message":"803","line":17,"column":10,"nodeType":"777","messageId":"778","endLine":17,"endColumn":14},{"ruleId":"775","severity":1,"message":"845","line":20,"column":3,"nodeType":"777","messageId":"778","endLine":20,"endColumn":20},{"ruleId":"775","severity":1,"message":"846","line":21,"column":3,"nodeType":"777","messageId":"778","endLine":21,"endColumn":17},{"ruleId":"775","severity":1,"message":"792","line":24,"column":3,"nodeType":"777","messageId":"778","endLine":24,"endColumn":21},{"ruleId":"775","severity":1,"message":"847","line":25,"column":3,"nodeType":"777","messageId":"778","endLine":25,"endColumn":12},{"ruleId":"775","severity":1,"message":"848","line":28,"column":10,"nodeType":"777","messageId":"778","endLine":28,"endColumn":24},{"ruleId":"775","severity":1,"message":"849","line":32,"column":9,"nodeType":"777","messageId":"778","endLine":32,"endColumn":11},{"ruleId":"793","severity":1,"message":"794","line":70,"column":15,"nodeType":"795","messageId":"796","endLine":70,"endColumn":17},{"ruleId":"775","severity":1,"message":"850","line":81,"column":12,"nodeType":"777","messageId":"778","endLine":81,"endColumn":20},{"ruleId":"775","severity":1,"message":"851","line":85,"column":12,"nodeType":"777","messageId":"778","endLine":85,"endColumn":16},{"ruleId":"775","severity":1,"message":"802","line":2,"column":17,"nodeType":"777","messageId":"778","endLine":2,"endColumn":24},{"ruleId":"775","severity":1,"message":"783","line":2,"column":36,"nodeType":"777","messageId":"778","endLine":2,"endColumn":42},{"ruleId":"775","severity":1,"message":"808","line":2,"column":44,"nodeType":"777","messageId":"778","endLine":2,"endColumn":51},{"ruleId":"775","severity":1,"message":"810","line":4,"column":3,"nodeType":"777","messageId":"778","endLine":4,"endColumn":21},{"ruleId":"775","severity":1,"message":"852","line":5,"column":3,"nodeType":"777","messageId":"778","endLine":5,"endColumn":15},{"ruleId":"775","severity":1,"message":"853","line":6,"column":3,"nodeType":"777","messageId":"778","endLine":6,"endColumn":15},{"ruleId":"775","severity":1,"message":"854","line":7,"column":3,"nodeType":"777","messageId":"778","endLine":7,"endColumn":17},{"ruleId":"775","severity":1,"message":"855","line":8,"column":3,"nodeType":"777","messageId":"778","endLine":8,"endColumn":19},{"ruleId":"775","severity":1,"message":"834","line":9,"column":3,"nodeType":"777","messageId":"778","endLine":9,"endColumn":21},{"ruleId":"775","severity":1,"message":"803","line":11,"column":10,"nodeType":"777","messageId":"778","endLine":11,"endColumn":14},{"ruleId":"823","severity":1,"message":"824","line":23,"column":25,"nodeType":"825","endLine":23,"endColumn":128},{"ruleId":"793","severity":1,"message":"794","line":52,"column":18,"nodeType":"795","messageId":"796","endLine":52,"endColumn":20},{"ruleId":"793","severity":1,"message":"794","line":54,"column":25,"nodeType":"795","messageId":"796","endLine":54,"endColumn":27},{"ruleId":"775","severity":1,"message":"856","line":156,"column":9,"nodeType":"777","messageId":"778","endLine":156,"endColumn":25},{"ruleId":"793","severity":1,"message":"794","line":163,"column":25,"nodeType":"795","messageId":"796","endLine":163,"endColumn":27},{"ruleId":"775","severity":1,"message":"844","line":3,"column":30,"nodeType":"777","messageId":"778","endLine":3,"endColumn":40},{"ruleId":"823","severity":1,"message":"824","line":16,"column":9,"nodeType":"825","endLine":24,"endColumn":11},{"ruleId":"793","severity":1,"message":"794","line":88,"column":25,"nodeType":"795","messageId":"796","endLine":88,"endColumn":27},{"ruleId":"775","severity":1,"message":"786","line":4,"column":10,"nodeType":"777","messageId":"778","endLine":4,"endColumn":24},{"ruleId":"775","severity":1,"message":"787","line":4,"column":26,"nodeType":"777","messageId":"778","endLine":4,"endColumn":39},{"ruleId":"775","severity":1,"message":"842","line":8,"column":8,"nodeType":"777","messageId":"778","endLine":8,"endColumn":21},{"ruleId":"775","severity":1,"message":"789","line":11,"column":16,"nodeType":"777","messageId":"778","endLine":11,"endColumn":25},{"ruleId":"775","severity":1,"message":"790","line":11,"column":27,"nodeType":"777","messageId":"778","endLine":11,"endColumn":31},{"ruleId":"775","severity":1,"message":"843","line":76,"column":20,"nodeType":"777","messageId":"778","endLine":76,"endColumn":24},{"ruleId":"823","severity":1,"message":"824","line":144,"column":13,"nodeType":"825","endLine":144,"endColumn":86},{"ruleId":"775","severity":1,"message":"797","line":1,"column":17,"nodeType":"777","messageId":"778","endLine":1,"endColumn":26},{"ruleId":"775","severity":1,"message":"786","line":3,"column":10,"nodeType":"777","messageId":"778","endLine":3,"endColumn":24},{"ruleId":"775","severity":1,"message":"787","line":3,"column":26,"nodeType":"777","messageId":"778","endLine":3,"endColumn":39},{"ruleId":"775","severity":1,"message":"789","line":9,"column":16,"nodeType":"777","messageId":"778","endLine":9,"endColumn":25},{"ruleId":"775","severity":1,"message":"790","line":9,"column":27,"nodeType":"777","messageId":"778","endLine":9,"endColumn":31},{"ruleId":"775","severity":1,"message":"799","line":10,"column":7,"nodeType":"777","messageId":"778","endLine":10,"endColumn":15},{"ruleId":"793","severity":1,"message":"794","line":57,"column":25,"nodeType":"795","messageId":"796","endLine":57,"endColumn":27},{"ruleId":"823","severity":1,"message":"824","line":124,"column":13,"nodeType":"825","endLine":124,"endColumn":66},{"ruleId":"775","severity":1,"message":"802","line":3,"column":31,"nodeType":"777","messageId":"778","endLine":3,"endColumn":38},{"ruleId":"775","severity":1,"message":"814","line":13,"column":8,"nodeType":"777","messageId":"778","endLine":13,"endColumn":22},{"ruleId":"775","severity":1,"message":"815","line":26,"column":5,"nodeType":"777","messageId":"778","endLine":26,"endColumn":16},{"ruleId":"775","severity":1,"message":"816","line":30,"column":5,"nodeType":"777","messageId":"778","endLine":30,"endColumn":16},{"ruleId":"775","severity":1,"message":"817","line":32,"column":5,"nodeType":"777","messageId":"778","endLine":32,"endColumn":12},{"ruleId":"775","severity":1,"message":"818","line":35,"column":5,"nodeType":"777","messageId":"778","endLine":35,"endColumn":18},{"ruleId":"775","severity":1,"message":"819","line":36,"column":5,"nodeType":"777","messageId":"778","endLine":36,"endColumn":20},"no-native-reassign",["857"],"no-negated-in-lhs",["858"],"no-unused-vars","'env' is defined but never used.","Identifier","unusedVar","'applyMiddleware' is defined but never used.","'compose' is defined but never used.","'Icon' is defined but never used.","'Consititution' is assigned a value but never used.","'Button' is defined but never used.","'Redirect' is defined but never used.","'Upload' is defined but never used.","'UploadOutlined' is defined but never used.","'InboxOutlined' is defined but never used.","'ADD_CATEGORY' is defined but never used.","'Paragraph' is assigned a value but never used.","'Text' is assigned a value but never used.","'DELETE_CATEGORY' is defined but never used.","'GET_ALL_CATEGORIES' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Component' is defined but never used.","'EDIT_CATEGORY' is defined but never used.","'normFile' is assigned a value but never used.","'UnorderedListOutlined' is defined but never used.","'TOKEN_PAYLOAD_KEY' is assigned a value but never used.","'Divider' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["859"],"'Tooltip' is defined but never used.","'message' is defined but never used.","'PlusCircleOutlined' is defined but never used.","'OmitProps' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchData' and 'fetchwinnerData'. Either include them or remove the dependency array.",["860"],"'JwtAuthService' is defined but never used.","'otherSignIn' is assigned a value but never used.","'showLoading' is assigned a value but never used.","'loading' is assigned a value but never used.","'authenticated' is assigned a value but never used.","'showAuthMessage' is assigned a value but never used.",["861"],"'Input' is defined but never used.","'Typography' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'url' is assigned a value but never used.","'seturl' is assigned a value but never used.","'Select' is defined but never used.",["862"],"'setroundstatus' is assigned a value but never used.",["863"],"'EDIT_GAME' is defined but never used.","'Row' is defined but never used.","'PlayCircleOutlined' is defined but never used.","'Moment' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchData' and 'fetchprizeData'. Either include them or remove the dependency array.",["864"],"'FormattedDateTimeRange' is defined but never used.",["865"],"'file' is assigned a value but never used.","'setFile' is assigned a value but never used.","'SkeletonImage' is defined but never used.","'form' is assigned a value but never used.","'BankFilled' is defined but never used.","'GET_ALL_CHARITIES' is defined but never used.","'DELETE_CHARITY' is defined but never used.","'ALL_TYPES' is defined but never used.","'IMAGE_BASE_URL' is defined but never used.","'id' is assigned a value but never used.","'onChange' is defined but never used.","'onOk' is defined but never used.","'EditOutlined' is defined but never used.","'FormOutlined' is defined but never used.","'DeleteOutlined' is defined but never used.","'FundViewOutlined' is defined but never used.","'deleteTournament' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"866","fix":"867"},{"desc":"868","fix":"869"},{"desc":"866","fix":"870"},{"desc":"866","fix":"871"},{"desc":"866","fix":"872"},{"desc":"873","fix":"874"},{"desc":"866","fix":"875"},"Update the dependencies array to be: [fetchData]",{"range":"876","text":"877"},"Update the dependencies array to be: [fetchData, fetchwinnerData]",{"range":"878","text":"879"},{"range":"880","text":"877"},{"range":"881","text":"877"},{"range":"882","text":"877"},"Update the dependencies array to be: [fetchData, fetchprizeData]",{"range":"883","text":"884"},{"range":"885","text":"877"},[3319,3321],"[fetchData]",[2501,2503],"[fetchData, fetchwinnerData]",[2240,2242],[2244,2246],[5541,5543],[10210,10212],"[fetchData, fetchprizeData]",[1414,1416]]