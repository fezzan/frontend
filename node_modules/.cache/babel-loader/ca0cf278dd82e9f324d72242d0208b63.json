{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/talhafiaz/Projects/React/Controrg/src/views/app-views/level/add/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from \"react\";\nimport { Form, Input, Button, Upload, Typography, message, InputNumber } from \"antd\";\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport service from \"auth/FetchInterceptor\";\nimport { ADD_CATEGORY, ADD_LEVEL } from \"configs/Endpoints\";\nconst {\n  Title,\n  Paragraph,\n  Text\n} = Typography;\nconst layout = {\n  labelCol: {\n    span: 3\n  },\n  wrapperCol: {\n    span: 12\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nconst Demo = () => {\n  _s();\n\n  const history = useHistory();\n  const [loading, setloading] = useState(false);\n\n  const onFinish = values => {\n    setloading(true); //formData.append(\"picture\", file);\n    //  console.log(file);\n\n    service.post(ADD_LEVEL, values).then(res => {\n      if (res.id) {\n        // history.push(\"/app/level\");\n        history.goBack();\n        message.success(\"Successfully Done :) \");\n      } else {\n        message.error(\"Failed\");\n      }\n    }).catch(e => {\n      message.error(\"Unable to load  ! Please check your internet or Server \");\n    }).finally(() => {\n      setloading(false);\n    });\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, { ...layout,\n    name: \"AddLevel\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        children: \"Add Level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \" Title\",\n      name: \"title\",\n      rules: [{\n        required: true,\n        message: \"Please input a Level Title !\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"  Min XP\",\n      name: \"minxp\",\n      rules: [{\n        required: true,\n        message: \"Please enter minimum XP equired !\"\n      }, {\n        validator: (r, value) => value < 0 ? Promise.reject(\"value low\") : Promise.resolve(true),\n        message: \"Please Choose Valid Value!\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(InputNumber, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: loading,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Demo, \"grHJ9ZR2+cbeiGUEnOOdifhJSig=\", false, function () {\n  return [useHistory];\n});\n\n_c = Demo;\nexport class AddLevel extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Demo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 12\n    }, this);\n  }\n\n}\nexport default AddLevel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"sources":["/Users/talhafiaz/Projects/React/Controrg/src/views/app-views/level/add/index.js"],"names":["React","Component","useState","Form","Input","Button","Upload","Typography","message","InputNumber","UploadOutlined","InboxOutlined","useHistory","service","ADD_CATEGORY","ADD_LEVEL","Title","Paragraph","Text","layout","labelCol","span","wrapperCol","tailLayout","offset","Demo","history","loading","setloading","onFinish","values","post","then","res","id","goBack","success","error","catch","e","finally","onFinishFailed","errorInfo","console","log","remember","required","validator","r","value","Promise","reject","resolve","AddLevel","render"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport { Form, Input, Button, Upload, Typography, message ,InputNumber} from \"antd\";\n\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport service from \"auth/FetchInterceptor\";\nimport { ADD_CATEGORY, ADD_LEVEL } from \"configs/Endpoints\";\n\nconst { Title, Paragraph, Text } = Typography;\n\nconst layout = {\n  labelCol: {\n    span: 3,\n  },\n  wrapperCol: {\n    span: 12,\n  },\n};\n\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nconst Demo = () => {\n  const history = useHistory();\n\n  const [loading, setloading] = useState(false);\n\n  const onFinish = (values) => {\n    setloading(true);\n    //formData.append(\"picture\", file);\n    //  console.log(file);\n    service\n      .post(ADD_LEVEL, values)\n      .then((res) => {\n        if (res.id) {\n          // history.push(\"/app/level\");\n          history.goBack();\n          message.success(\"Successfully Done :) \");\n        } else {\n          message.error(\"Failed\");\n        }\n      })\n\n      .catch((e) => {\n        message.error(\n          \"Unable to load  ! Please check your internet or Server \"\n        );\n      })\n      .finally(() => {\n        setloading(false);\n      });\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Form\n      {...layout}\n      name=\"AddLevel\"\n      initialValues={{\n        remember: true,\n      }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <br></br>\n      <Typography>\n        <Title>Add Level</Title>\n      </Typography>\n      <br></br>\n      <br></br>\n\n      <Form.Item\n        label=\" Title\"\n        name=\"title\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input a Level Title !\",\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"  Min XP\"\n        name=\"minxp\"\n        rules={[\n          {\n            required: true,\n            message: \"Please enter minimum XP equired !\",\n          },\n          {\n            validator: (r, value) =>\n              value < 0? Promise.reject(\"value low\") : Promise.resolve(true),\n            message: \"Please Choose Valid Value!\",\n          },\n        ]}\n      >\n        <InputNumber />\n      </Form.Item>\n\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport class AddLevel extends Component {\n  render() {\n    return <Demo />;\n  }\n}\n\nexport default AddLevel;\n"]},"metadata":{},"sourceType":"module"}