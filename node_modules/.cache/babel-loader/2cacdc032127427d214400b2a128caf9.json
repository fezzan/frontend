{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/talhafiaz/Projects/React/XOSportsFrontend/src/views/app-views/tournament/edit/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Form, Input, Button, Upload, message, Typography, Select, DatePicker, InputNumber } from \"antd\";\nimport moment from \"moment\";\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport service from \"auth/FetchInterceptor\";\nimport { EDIT_TOURNAMENT, GET_ALL_CATEGORIES } from \"configs/Endpoints\";\nimport { IMAGE_BASE_URL } from \"configs/AppConfig\";\nconst {\n  Title,\n  Paragraph,\n  Text\n} = Typography;\n\nconst normFile = e => {\n  console.log(\"Upload event:\", e);\n\n  if (Array.isArray(e)) {\n    return e;\n  }\n\n  return e && e.fileList;\n};\n\nconst layout = {\n  labelCol: {\n    span: 3\n  },\n  wrapperCol: {\n    span: 12\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nconst Demo = props => {\n  _s();\n\n  const history = useHistory(); // category list and api call\n\n  const [categorytList, setCategoryList] = useState([]);\n\n  const fetchData = () => {\n    setloading(true);\n    service.get(GET_ALL_CATEGORIES).then(response => {\n      setloading(false);\n      console.log(response);\n      setCategoryList(response);\n      console.log(\"my props \" + props.location.dataProps.tournamentdetails.startsOn);\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []); // drop down things\n\n  const {\n    Option\n  } = Select;\n\n  function handleChange(value) {//  console.log(`selected ${value}`);\n  } // date picker methods\n\n\n  function onChange(value, dateString) {\n    console.log(\"Formatted Selected Time: \", value.toJSON());\n  }\n\n  function onOk(value) {\n    console.log(\"onOk: \", value);\n  }\n\n  const [file, setFile] = useState(\"\");\n  const [loading, setloading] = useState(false);\n  const [image, setImage] = useState(IMAGE_BASE_URL + props.location.dataProps.tournamentdetails.picture);\n\n  const onFinish = values => {\n    console.log(\"Success:\", values);\n    setloading(true);\n    console.log(values);\n    var formData = new FormData();\n    formData.append(\"name\", values.name);\n    formData.append(\"picture\", file);\n    formData.append(\"ticketReq\", values.ticketReq);\n    formData.append(\"category_id\", values.category_id);\n    console.log(file);\n    service.put(EDIT_TOURNAMENT + props.location.dataProps.tournamentdetails.id, formData).then(res => {\n      if (res.message == \"Tournament was updated successfully.\") {\n        // history.push(\"/app/tournament\");\n        history.goBack();\n        message.success(\"Successfully Done :) \");\n      } else {\n        message.error(\"Failed\");\n      }\n    }).catch(e => {\n      message.error(\"Unable to load  ! Please check your internet or Server \");\n    }).finally(() => {\n      setloading(false);\n    });\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, { ...layout,\n    name: \"EditTournament\",\n    initialValues: {\n      name: props.location.dataProps.tournamentdetails.name,\n      ticketReq: props.location.dataProps.tournamentdetails.ticketReq,\n      category_id: props.location.dataProps.tournamentdetails.category_id,\n      startsOn: moment(props.location.dataProps.tournamentdetails.startsOn)\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        children: \"Edit Tournament \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \" Category\",\n      name: \"category_id\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        defaultValue: props.location.dataProps.tournamentdetails.category_id,\n        style: {\n          width: 120\n        },\n        onChange: handleChange,\n        children: categorytList.map(category => /*#__PURE__*/_jsxDEV(Option, {\n          value: category.id,\n          children: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Name\",\n      name: \"name\",\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Starts At :\",\n      name: \"startsOn\",\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        showTime: true,\n        defaultValue: moment(props.location.dataProps.tournamentdetails.startsOn),\n        placeholder: \"Select Time\",\n        onChange: onChange,\n        onOk: onOk\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"  Tickets\",\n      name: \"ticketReq\",\n      rules: [{\n        validator: (r, value) => value < 1 ? Promise.reject(\"value low\") : Promise.resolve(true),\n        message: \"Atleast 1 or more tickets are required!\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(InputNumber, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \" Edit Picture\",\n      children: /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"picture\",\n        valuePropName: \"picture\",\n        noStyle: true,\n        children: /*#__PURE__*/_jsxDEV(Upload.Dragger, {\n          accept: \"image/*\",\n          beforeUpload: file => {\n            setFile(file);\n            let reader = new FileReader();\n\n            reader.onload = e => {\n              setImage(e.target.result);\n            };\n\n            reader.readAsDataURL(file); // Prevent upload\n\n            return false;\n          },\n          name: \"picture\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              height: 200,\n              width: 200\n            },\n            src: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 23\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 33\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"ant-upload-text\",\n            children: \"Upload new Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: loading,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Demo, \"VlCAWElQvuNx0l35BMiVFERLNws=\", false, function () {\n  return [useHistory];\n});\n\n_c = Demo;\nexport default Demo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"sources":["/Users/talhafiaz/Projects/React/XOSportsFrontend/src/views/app-views/tournament/edit/index.js"],"names":["React","Component","useState","useEffect","Form","Input","Button","Upload","message","Typography","Select","DatePicker","InputNumber","moment","UploadOutlined","InboxOutlined","useHistory","service","EDIT_TOURNAMENT","GET_ALL_CATEGORIES","IMAGE_BASE_URL","Title","Paragraph","Text","normFile","e","console","log","Array","isArray","fileList","layout","labelCol","span","wrapperCol","tailLayout","offset","Demo","props","history","categorytList","setCategoryList","fetchData","setloading","get","then","response","location","dataProps","tournamentdetails","startsOn","Option","handleChange","value","onChange","dateString","toJSON","onOk","file","setFile","loading","image","setImage","picture","onFinish","values","formData","FormData","append","name","ticketReq","category_id","put","id","res","goBack","success","error","catch","finally","onFinishFailed","errorInfo","width","map","category","validator","r","Promise","reject","resolve","reader","FileReader","onload","target","result","readAsDataURL","height"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport {\n  Form,\n  Input,\n  Button,\n  Upload,\n  message,\n  Typography,\n  Select,\n  DatePicker,\n  InputNumber,\n} from \"antd\";\nimport moment from \"moment\";\n\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport service from \"auth/FetchInterceptor\";\nimport { EDIT_TOURNAMENT, GET_ALL_CATEGORIES } from \"configs/Endpoints\";\nimport { IMAGE_BASE_URL } from \"configs/AppConfig\";\n\nconst { Title, Paragraph, Text } = Typography;\nconst normFile = (e) => {\n  console.log(\"Upload event:\", e);\n  if (Array.isArray(e)) {\n    return e;\n  }\n  return e && e.fileList;\n};\n\nconst layout = {\n  labelCol: {\n    span: 3,\n  },\n  wrapperCol: {\n    span: 12,\n  },\n};\n\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nconst Demo = (props) => {\n  const history = useHistory();\n\n  // category list and api call\n  const [categorytList, setCategoryList] = useState([]);\n\n  const fetchData = () => {\n    setloading(true);\n\n    service.get(GET_ALL_CATEGORIES).then((response) => {\n      setloading(false);\n      console.log(response);\n      setCategoryList(response);\n      console.log(\n        \"my props \" + props.location.dataProps.tournamentdetails.startsOn\n      );\n    });\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // drop down things\n  const { Option } = Select;\n  function handleChange(value) {\n    //  console.log(`selected ${value}`);\n  }\n\n  // date picker methods\n  function onChange(value, dateString) {\n    console.log(\"Formatted Selected Time: \", value.toJSON());\n  }\n\n  function onOk(value) {\n    console.log(\"onOk: \", value);\n  }\n\n  const [file, setFile] = useState(\"\");\n  const [loading, setloading] = useState(false);\n  const [image, setImage] = useState(\n    IMAGE_BASE_URL + props.location.dataProps.tournamentdetails.picture\n  );\n\n  const onFinish = (values) => {\n    console.log(\"Success:\", values);\n\n    setloading(true);\n    console.log(values);\n    var formData = new FormData();\n    formData.append(\"name\", values.name);\n    formData.append(\"picture\", file);\n    formData.append(\"ticketReq\", values.ticketReq);\n    formData.append(\"category_id\", values.category_id);\n\n    console.log(file);\n    \n    service\n      .put(\n        EDIT_TOURNAMENT + props.location.dataProps.tournamentdetails.id,\n        formData\n      )\n      .then((res) => {\n        if (res.message == \"Tournament was updated successfully.\") {\n          // history.push(\"/app/tournament\");\n          history.goBack();\n          message.success(\"Successfully Done :) \");\n        } else {\n          message.error(\"Failed\");\n        }\n      })\n\n      .catch((e) => {\n        message.error(\n          \"Unable to load  ! Please check your internet or Server \"\n        );\n      })\n      .finally(() => {\n        setloading(false);\n      });\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Form\n      {...layout}\n      name=\"EditTournament\"\n      initialValues={{\n        name: props.location.dataProps.tournamentdetails.name,\n        ticketReq: props.location.dataProps.tournamentdetails.ticketReq,\n        category_id: props.location.dataProps.tournamentdetails.category_id,\n        startsOn: moment(props.location.dataProps.tournamentdetails.startsOn),\n      }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <br></br>\n      <Typography>\n        <Title>Edit Tournament </Title>\n      </Typography>\n      <br></br>\n      <br></br>\n\n      <Form.Item label=\" Category\" name=\"category_id\">\n        <Select\n          defaultValue={props.location.dataProps.tournamentdetails.category_id}\n          style={{ width: 120 }}\n          onChange={handleChange}\n        >\n          {categorytList.map((category) => (\n            <Option value={category.id}>{category.name}</Option>\n          ))}\n        </Select>\n      </Form.Item>\n\n      <Form.Item label=\"Name\" name=\"name\">\n        <Input />\n      </Form.Item>\n\n      <Form.Item label=\"Starts At :\" name=\"startsOn\">\n        <DatePicker\n          showTime\n          defaultValue={moment(\n            props.location.dataProps.tournamentdetails.startsOn\n          )}\n          placeholder=\"Select Time\"\n          onChange={onChange}\n          onOk={onOk}\n        />\n      </Form.Item>\n\n      <Form.Item\n        label=\"  Tickets\"\n        name=\"ticketReq\"\n        rules={[\n          {\n            validator: (r, value) =>\n              value < 1 ? Promise.reject(\"value low\") : Promise.resolve(true),\n            message: \"Atleast 1 or more tickets are required!\",\n          },\n        ]}\n      >\n        <InputNumber />\n      </Form.Item>\n\n      <Form.Item label=\" Edit Picture\">\n        <Form.Item name=\"picture\" valuePropName=\"picture\" noStyle>\n        <Upload.Dragger\n                    accept=\"image/*\"\n\n            beforeUpload={(file) => {\n              setFile(file);\n              let reader = new FileReader();\n              reader.onload = (e) => {\n                setImage(e.target.result);\n              };\n              reader.readAsDataURL(file);\n\n              // Prevent upload\n              return false;\n            }}\n            name=\"picture\"\n          >\n            <img style={{ height: 200, width: 200 }} src={image}></img>\n            <br></br> <br></br> <br></br>{\" \"}\n            <p className=\"ant-upload-text\">\n           Upload new Image \n            </p>\n          </Upload.Dragger>\n        </Form.Item>\n      </Form.Item>\n\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default Demo;\n"]},"metadata":{},"sourceType":"module"}