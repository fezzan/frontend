{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/talhafiaz/Projects/React/XOSportsFrontend/src/components/layout-components/Logo.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\nimport { APP_NAME } from 'configs/AppConfig';\nimport { connect } from \"react-redux\";\nimport utils from 'utils';\nimport { Grid } from 'antd';\nconst {\n  useBreakpoint\n} = Grid;\n\nconst getLogoWidthGutter = (props, isMobile) => {\n  const {\n    navCollapsed,\n    navType\n  } = props;\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false;\n\n  if (isMobile && !props.mobileLogo) {\n    return 0;\n  }\n\n  if (isNavTop) {\n    return 'auto';\n  }\n\n  if (navCollapsed) {\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`;\n  } else {\n    return `${SIDE_NAV_WIDTH}px`;\n  }\n};\n\nconst getLogo = props => {\n  const {\n    navCollapsed,\n    logoType\n  } = props;\n\n  if (logoType === 'light') {\n    if (navCollapsed) {\n      return '/img/xologsmall.png';\n    }\n\n    return '/img/xologo.png';\n  }\n\n  if (navCollapsed) {\n    return '/img/xologsmall.png';\n  }\n\n  return '/img/xologo.png';\n};\n\nconst getLogoDisplay = (isMobile, mobileLogo) => {\n  if (isMobile && !mobileLogo) {\n    return 'd-none';\n  } else {\n    return 'logo';\n  }\n};\n\nexport const Logo = props => {\n  _s();\n\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: getLogoDisplay(isMobile, props.mobileLogo),\n    style: {\n      width: `${getLogoWidthGutter(props, isMobile)}`,\n      backgroundColor: \"rgb(17, 42, 72)\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        width: '100%',\n        height: '100%',\n        objectFit: 'contain'\n      },\n      src: getLogo(props),\n      alt: `${APP_NAME} logo`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Logo, \"wrTyyaVXVdJHveNiBVLXF/kEkkM=\", false, function () {\n  return [useBreakpoint];\n});\n\n_c = Logo;\n\nconst mapStateToProps = ({\n  theme\n}) => {\n  const {\n    navCollapsed,\n    navType\n  } = theme;\n  return {\n    navCollapsed,\n    navType\n  };\n};\n\nexport default connect(mapStateToProps)(Logo);\n\nvar _c;\n\n$RefreshReg$(_c, \"Logo\");","map":{"version":3,"sources":["/Users/talhafiaz/Projects/React/XOSportsFrontend/src/components/layout-components/Logo.js"],"names":["React","SIDE_NAV_WIDTH","SIDE_NAV_COLLAPSED_WIDTH","NAV_TYPE_TOP","APP_NAME","connect","utils","Grid","useBreakpoint","getLogoWidthGutter","props","isMobile","navCollapsed","navType","isNavTop","mobileLogo","getLogo","logoType","getLogoDisplay","Logo","getBreakPoint","includes","width","backgroundColor","height","objectFit","mapStateToProps","theme"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,wBAAzB,EAAmDC,YAAnD,QAAuE,yBAAvE;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,MAArB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAoBD,IAA1B;;AAEA,MAAME,kBAAkB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC9C,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA4BH,KAAlC;AACA,QAAMI,QAAQ,GAAGD,OAAO,KAAKV,YAAZ,GAA2B,IAA3B,GAAkC,KAAnD;;AACA,MAAGQ,QAAQ,IAAI,CAACD,KAAK,CAACK,UAAtB,EAAkC;AAChC,WAAO,CAAP;AACD;;AACD,MAAGD,QAAH,EAAa;AACX,WAAO,MAAP;AACD;;AACD,MAAGF,YAAH,EAAiB;AACf,WAAQ,GAAEV,wBAAyB,IAAnC;AACD,GAFD,MAEO;AACL,WAAQ,GAAED,cAAe,IAAzB;AACD;AACF,CAdD;;AAgBA,MAAMe,OAAO,GAAIN,KAAD,IAAW;AACzB,QAAM;AAAEE,IAAAA,YAAF;AAAgBK,IAAAA;AAAhB,MAA6BP,KAAnC;;AACA,MAAGO,QAAQ,KAAK,OAAhB,EAAyB;AACvB,QAAGL,YAAH,EAAiB;AACf,aAAQ,qBAAR;AAED;;AACD,WAAO,iBAAP;AACD;;AAED,MAAIA,YAAJ,EAAkB;AAChB,WAAO,qBAAP;AACD;;AACD,SAAO,iBAAP;AACD,CAdD;;AAgBA,MAAMM,cAAc,GAAG,CAACP,QAAD,EAAWI,UAAX,KAA0B;AAC/C,MAAGJ,QAAQ,IAAI,CAACI,UAAhB,EAA4B;AAC1B,WAAO,QAAP;AACD,GAFD,MAEO;AACL,WAAO,MAAP;AACD;AACF,CAND;;AAQA,OAAO,MAAMI,IAAI,GAAIT,KAAD,IAAW;AAAA;;AAC7B,QAAMC,QAAQ,GAAG,CAACL,KAAK,CAACc,aAAN,CAAoBZ,aAAa,EAAjC,EAAqCa,QAArC,CAA8C,IAA9C,CAAlB;AACA,sBACE;AACE,IAAA,SAAS,EAAEH,cAAc,CAACP,QAAD,EAAWD,KAAK,CAACK,UAAjB,CAD3B;AAEE,IAAA,KAAK,EAAE;AAACO,MAAAA,KAAK,EAAG,GAAEb,kBAAkB,CAACC,KAAD,EAAQC,QAAR,CAAkB,EAA/C;AAAiDY,MAAAA,eAAe,EAAC;AAAjE,KAFT;AAAA,2BAGE;AAAM,MAAA,KAAK,EAAE;AAACD,QAAAA,KAAK,EAAC,MAAP;AAAcE,QAAAA,MAAM,EAAC,MAArB;AAA4BC,QAAAA,SAAS,EAAC;AAAtC,OAAb;AAA+D,MAAA,GAAG,EAAET,OAAO,CAACN,KAAD,CAA3E;AAAoF,MAAA,GAAG,EAAG,GAAEN,QAAS;AAArG;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CATM;;GAAMe,I;UAC2BX,a;;;KAD3BW,I;;AAWb,MAAMO,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACrC,QAAM;AAAEf,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA6Bc,KAAnC;AACA,SAAO;AAAEf,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAP;AACD,CAHD;;AAKA,eAAeR,OAAO,CAACqB,eAAD,CAAP,CAAyBP,IAAzB,CAAf","sourcesContent":["import React from 'react'\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\nimport { APP_NAME } from 'configs/AppConfig';\nimport { connect } from \"react-redux\";\nimport utils from 'utils';\nimport { Grid } from 'antd';\n\nconst { useBreakpoint } = Grid;\n\nconst getLogoWidthGutter = (props, isMobile) => {\n  const { navCollapsed, navType } = props;\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\n  if(isMobile && !props.mobileLogo) {\n    return 0\n  }\n  if(isNavTop) {\n    return 'auto'\n  }\n  if(navCollapsed) {\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`\n  } else {\n    return `${SIDE_NAV_WIDTH}px`\n  }\n}\n\nconst getLogo = (props) => {\n  const { navCollapsed, logoType } = props;\n  if(logoType === 'light') {\n    if(navCollapsed) {\n      return  '/img/xologsmall.png'\n\n    }\n    return '/img/xologo.png'\n  }\n\n  if (navCollapsed) {\n    return '/img/xologsmall.png'\n  }\n  return '/img/xologo.png'\n}\n\nconst getLogoDisplay = (isMobile, mobileLogo) => {\n  if(isMobile && !mobileLogo) {\n    return 'd-none'\n  } else {\n    return 'logo'\n  }\n}\n\nexport const Logo = (props) => {\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\n  return (\n    <div\n      className={getLogoDisplay(isMobile, props.mobileLogo)} \n      style={{width: `${getLogoWidthGutter(props, isMobile)}`,backgroundColor:\"rgb(17, 42, 72)\"}}>\n      <img  style={{width:'100%',height:'100%',objectFit:'contain'}} src={getLogo(props)} alt={`${APP_NAME} logo`}/>\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ theme }) => {\n  const { navCollapsed, navType } =  theme;\n  return { navCollapsed, navType }\n};\n\nexport default connect(mapStateToProps)(Logo);\n"]},"metadata":{},"sourceType":"module"}