{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/talhafiaz/Projects/React/XOSportsFrontend/src/views/app-views/home/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Table, Divider, Skeleton, Button, Tooltip, message } from \"antd\";\nimport { PlusCircleOutlined, EditOutlined, FormOutlined, DeleteOutlined, FundViewOutlined, PlayCircleOutlined, PlayCircleFilled } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"moment\";\nimport service from \"auth/FetchInterceptor\";\nimport { DELETE_TOURNAMENT, GET_ALL_TOURNAMENT } from \"configs/Endpoints\";\nimport { IMAGE_BASE_URL } from \"configs/AppConfig\";\n\nconst Home = () => {\n  _s();\n\n  const columns = [{\n    title: \"Avatar\",\n    dataIndex: \"picture\",\n    key: \"picture\",\n    render: text => /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        objectFit: 'cover',\n        width: 50,\n        height: 50,\n        borderRadius: 100\n      },\n      src: `${IMAGE_BASE_URL + text}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }, this)\n  }, {\n    title: \"Tournament ID\",\n    dataIndex: \"id\",\n    key: \"id\"\n  }, {\n    title: \"Tournament Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n    render: text => /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/#\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }, this)\n  }, {\n    title: \"Start Time \",\n    dataIndex: \"startsOn\",\n    key: \"startsOn\",\n    render: text => /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/#\",\n      children: Moment(text).format(\"LLLL\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }, this)\n  }, {\n    title: \"Status\",\n    dataIndex: \"setActive\",\n    key: \"setActive\",\n    render: text => {\n      if (text == 1) {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/#\",\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 18\n        }, this);\n      } else if (text == 0) {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/#\",\n          children: \"Ended\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 18\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/#\",\n          children: \"Not Started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 18\n        }, this);\n      }\n    }\n  }, {\n    title: \"Required Tickets\",\n    dataIndex: \"ticketReq\",\n    key: \"ticketReq\",\n    render: text => /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/#\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }, this)\n  } // {\n  //   title: \"Action\",\n  //   key: \"action\",\n  //   render: (text, record) => {\n  //     return (\n  //       <span>\n  //         {record.setActive == 0 ? (\n  //           <>\n  //             <Link\n  //               to={{\n  //                 pathname: \"tournament\",\n  //                 dataProps: { tournamentdetails: record },\n  //               }}\n  //             >\n  //               <Button\n  //                 type=\"primary\"\n  //                 style={{ background: \"green\", borderColor: \"green\" }}\n  //                 icon={<FundViewOutlined style={{ fontSize: \"18px\" }} />}\n  //               >\n  //                 Results\n  //               </Button>\n  //             </Link>\n  //             <Divider type=\"vertical\" />\n  //           </>\n  //         ) : (\n  //           <>\n  //             <Link\n  //               to={{\n  //                 pathname: \"tournament/manage/\" + record.id,\n  //                 dataProps: { tournamentdetails: record },\n  //               }}\n  //             >\n  //               <Button\n  //                 type=\"primary\"\n  //                 icon={<EditOutlined style={{ fontSize: \"15px\" }} />}\n  //               >\n  //                 Manage\n  //               </Button>\n  //             </Link>\n  //             <Divider type=\"vertical\" />{\" \"}\n  //           </>\n  //         )}\n  //         {record.setActive == null ? (\n  //           <>\n  //             <Link\n  //               to={{\n  //                 pathname: \"tournament/edit/\" + record.id,\n  //                 dataProps: { tournamentdetails: record },\n  //               }}\n  //             >\n  //               <Button\n  //                 style={{ background: \"orange\", borderColor: \"orange\" }}\n  //                 type=\"primary\"\n  //                 icon={<FormOutlined style={{ fontSize: \"14px\" }} />}\n  //               >\n  //                 Edit\n  //               </Button>\n  //             </Link>\n  //             <Divider type=\"vertical\" />\n  //           </>\n  //         ) : (\n  //           <span></span>\n  //         )}\n  //         {record.setActive == null ? (\n  //           <Link\n  //             onClick={() => {\n  //               deleteTournament(record.id);\n  //             }}\n  //           >\n  //             <Button\n  //               type=\"danger\"\n  //               icon={<DeleteOutlined style={{ fontSize: \"15px\" }} />}\n  //             >\n  //               Delete\n  //             </Button>\n  //           </Link>\n  //         ) : (\n  //           <span></span>\n  //         )}\n  //       </span>\n  //     );\n  //   },\n  // },\n  ];\n  const [tournamentList, setTournamentList] = useState([]);\n  const [loading, setloading] = useState(false);\n\n  const deleteTournament = id => {\n    setloading(true);\n    service.delete(DELETE_TOURNAMENT + id).then(res => {\n      console.log(res);\n\n      if (res.message == \"Tournament was deleted successfully!\") {\n        message.success(\"Successfully Deleted :) \");\n      } else {\n        message.error(\"Failed to delete \");\n      } //alert(response);\n\n\n      fetchData();\n      setloading(false);\n    }).catch(e => {\n      setloading(false);\n      message.error(\"Unable to load  ! Please check your internet or Server \");\n    });\n  };\n\n  const fetchData = () => {\n    setloading(true);\n    service.get(GET_ALL_TOURNAMENT).then(res => {\n      setloading(false);\n      console.log(res);\n      setTournamentList(res.filter(R => R.setActive === 1));\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: 500,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Skeleton, {\n      active: true,\n      paragraph: {\n        rows: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(PlayCircleFilled, {\n        style: {\n          fontSize: 70,\n          color: \"#1a3353\"\n        },\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontFamily: \"fantasy\",\n          fontSize: 50\n        },\n        children: \" ACTIVE TOURNAMENTS \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: tournamentList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"1dxzjgZoUbErsqFcxxtjECeoq+g=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/talhafiaz/Projects/React/XOSportsFrontend/src/views/app-views/home/index.js"],"names":["React","useState","useEffect","Table","Divider","Skeleton","Button","Tooltip","message","PlusCircleOutlined","EditOutlined","FormOutlined","DeleteOutlined","FundViewOutlined","PlayCircleOutlined","PlayCircleFilled","Link","Moment","service","DELETE_TOURNAMENT","GET_ALL_TOURNAMENT","IMAGE_BASE_URL","Home","columns","title","dataIndex","key","render","text","objectFit","width","height","borderRadius","format","tournamentList","setTournamentList","loading","setloading","deleteTournament","id","delete","then","res","console","log","success","error","fetchData","catch","e","get","filter","R","setActive","minHeight","display","justifyContent","alignItems","rows","flexDirection","fontSize","color","fontFamily"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Table, Divider, Skeleton, Button, Tooltip, message } from \"antd\";\nimport {\n  PlusCircleOutlined,\n  EditOutlined,\n  FormOutlined,\n  DeleteOutlined,\n  FundViewOutlined,\n  PlayCircleOutlined,PlayCircleFilled  \n} from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"moment\";\nimport service from \"auth/FetchInterceptor\";\nimport { DELETE_TOURNAMENT, GET_ALL_TOURNAMENT } from \"configs/Endpoints\";\nimport { IMAGE_BASE_URL } from \"configs/AppConfig\";\n\nconst Home = () => {\n  const columns = [\n    {\n      title: \"Avatar\",\n      dataIndex: \"picture\",\n      key: \"picture\",\n      render: (text) => <img style={{objectFit:'cover', width:50, height:50,borderRadius:100 }}src={`${IMAGE_BASE_URL+text}`}/>,\n    },\n\n\n    {\n      title: \"Tournament ID\",\n      dataIndex: \"id\",\n      key: \"id\",\n    },\n\n    {\n      title: \"Tournament Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n      render: (text) => <a href=\"/#\">{text}</a>,\n    },\n\n    {\n      title: \"Start Time \",\n      dataIndex: \"startsOn\",\n      key: \"startsOn\",\n      render: (text) => <a href=\"/#\">{Moment(text).format(\"LLLL\")}</a>,\n    },\n\n    {\n      title: \"Status\",\n      dataIndex: \"setActive\",\n      key: \"setActive\",\n      render: (text) => {\n        if (text == 1) {\n          return <a href=\"/#\">Active</a>;\n        } else if (text == 0) {\n          return <a href=\"/#\">Ended</a>;\n        } else {\n          return <a href=\"/#\">Not Started</a>;\n        }\n      },\n    },\n    {\n      title: \"Required Tickets\",\n      dataIndex: \"ticketReq\",\n      key: \"ticketReq\",\n      render: (text) => <a href=\"/#\">{text}</a>,\n    },\n    // {\n    //   title: \"Action\",\n    //   key: \"action\",\n    //   render: (text, record) => {\n    //     return (\n    //       <span>\n    //         {record.setActive == 0 ? (\n    //           <>\n    //             <Link\n    //               to={{\n    //                 pathname: \"tournament\",\n    //                 dataProps: { tournamentdetails: record },\n    //               }}\n    //             >\n    //               <Button\n    //                 type=\"primary\"\n    //                 style={{ background: \"green\", borderColor: \"green\" }}\n    //                 icon={<FundViewOutlined style={{ fontSize: \"18px\" }} />}\n    //               >\n    //                 Results\n    //               </Button>\n    //             </Link>\n    //             <Divider type=\"vertical\" />\n    //           </>\n    //         ) : (\n    //           <>\n    //             <Link\n    //               to={{\n    //                 pathname: \"tournament/manage/\" + record.id,\n    //                 dataProps: { tournamentdetails: record },\n    //               }}\n    //             >\n    //               <Button\n    //                 type=\"primary\"\n    //                 icon={<EditOutlined style={{ fontSize: \"15px\" }} />}\n    //               >\n    //                 Manage\n    //               </Button>\n    //             </Link>\n    //             <Divider type=\"vertical\" />{\" \"}\n    //           </>\n    //         )}\n\n    //         {record.setActive == null ? (\n    //           <>\n    //             <Link\n    //               to={{\n    //                 pathname: \"tournament/edit/\" + record.id,\n    //                 dataProps: { tournamentdetails: record },\n    //               }}\n    //             >\n    //               <Button\n    //                 style={{ background: \"orange\", borderColor: \"orange\" }}\n    //                 type=\"primary\"\n    //                 icon={<FormOutlined style={{ fontSize: \"14px\" }} />}\n    //               >\n    //                 Edit\n    //               </Button>\n    //             </Link>\n    //             <Divider type=\"vertical\" />\n    //           </>\n    //         ) : (\n    //           <span></span>\n    //         )}\n\n    //         {record.setActive == null ? (\n    //           <Link\n    //             onClick={() => {\n    //               deleteTournament(record.id);\n    //             }}\n    //           >\n    //             <Button\n    //               type=\"danger\"\n    //               icon={<DeleteOutlined style={{ fontSize: \"15px\" }} />}\n    //             >\n    //               Delete\n    //             </Button>\n    //           </Link>\n    //         ) : (\n    //           <span></span>\n    //         )}\n    //       </span>\n    //     );\n    //   },\n    // },\n  ];\n  const [tournamentList, setTournamentList] = useState([]);\n  const [loading, setloading] = useState(false);\n\n  const deleteTournament = (id) => {\n    setloading(true);\n\n    service\n      .delete(DELETE_TOURNAMENT + id)\n      .then((res) => {\n        console.log(res);\n        if (res.message == \"Tournament was deleted successfully!\") {\n          message.success(\"Successfully Deleted :) \");\n        } else {\n          message.error(\"Failed to delete \");\n        }\n\n        //alert(response);\n        fetchData();\n        setloading(false);\n      })\n      .catch((e) => {\n        setloading(false);\n\n        message.error(\n          \"Unable to load  ! Please check your internet or Server \"\n        );\n      });\n  };\n  const fetchData = () => {\n    setloading(true);\n\n    service.get(GET_ALL_TOURNAMENT, )\n      .then((res) => {\n        setloading(false);\n        console.log(res);\n        setTournamentList(res.filter(R => R.setActive === 1));\n      });\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  if (loading)\n    return (\n      <div\n        style={{\n          minHeight: 500,\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Skeleton active paragraph={{ rows: 10 }} />\n      </div>\n    );\n  return (\n    <div>\n            <br></br> \n\n      <span\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n        }}\n      >\n        <PlayCircleFilled  style={{ fontSize: 70,color:\"#1a3353\" }}> </PlayCircleFilled >{\" \"}\n        <div>\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        </div>\n        <h1 style={{ fontFamily: \"fantasy\", fontSize: 50 }}> ACTIVE TOURNAMENTS </h1>\n      </span>\n      <br></br> \n      <br></br>\n\n      <br></br>\n      <Table columns={columns} dataSource={tournamentList} />\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}