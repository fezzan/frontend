{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/talhafiaz/Projects/React/XOSportsFrontend/src/components/layout-components/SideNav.js\";\nimport React from \"react\";\nimport { Layout } from 'antd';\nimport { connect } from 'react-redux';\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport MenuContent from './MenuContent';\nconst {\n  Sider\n} = Layout;\nexport const SideNav = ({\n  navCollapsed,\n  sideNavTheme,\n  routeInfo,\n  hideGroupTitle,\n  localization = true\n}) => {\n  const props = {\n    sideNavTheme,\n    routeInfo,\n    hideGroupTitle,\n    localization\n  };\n  return /*#__PURE__*/_jsxDEV(Sider, {\n    className: `side-nav ${sideNavTheme === SIDE_NAV_DARK ? 'side-nav-dark' : ''}`,\n    width: SIDE_NAV_WIDTH,\n    collapsed: navCollapsed,\n    children: /*#__PURE__*/_jsxDEV(Scrollbars, {\n      autoHide: true,\n      children: /*#__PURE__*/_jsxDEV(MenuContent, {\n        type: NAV_TYPE_SIDE,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = SideNav;\n\nconst mapStateToProps = ({\n  theme\n}) => {\n  const {\n    navCollapsed,\n    sideNavTheme\n  } = theme;\n  return {\n    navCollapsed,\n    sideNavTheme\n  };\n};\n\nexport default connect(mapStateToProps)(SideNav);\n\nvar _c;\n\n$RefreshReg$(_c, \"SideNav\");","map":{"version":3,"sources":["/Users/talhafiaz/Projects/React/XOSportsFrontend/src/components/layout-components/SideNav.js"],"names":["React","Layout","connect","SIDE_NAV_WIDTH","SIDE_NAV_DARK","NAV_TYPE_SIDE","Scrollbars","MenuContent","Sider","SideNav","navCollapsed","sideNavTheme","routeInfo","hideGroupTitle","localization","props","mapStateToProps","theme"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,aAAzB,EAAwCC,aAAxC,QAA6D,yBAA7D;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYP,MAAlB;AAEA,OAAO,MAAMQ,OAAO,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA,YAAf;AAA6BC,EAAAA,SAA7B;AAAwCC,EAAAA,cAAxC;AAAwDC,EAAAA,YAAY,GAAG;AAAvE,CAAD,KAAmF;AACxG,QAAMC,KAAK,GAAG;AAAEJ,IAAAA,YAAF;AAAgBC,IAAAA,SAAhB;AAA4BC,IAAAA,cAA5B;AAA4CC,IAAAA;AAA5C,GAAd;AACA,sBACE,QAAC,KAAD;AACE,IAAA,SAAS,EAAG,YAAWH,YAAY,KAAKP,aAAjB,GAAgC,eAAhC,GAAkD,EAAG,EAD9E;AAEE,IAAA,KAAK,EAAED,cAFT;AAGE,IAAA,SAAS,EAAEO,YAHb;AAAA,2BAKE,QAAC,UAAD;AAAY,MAAA,QAAQ,MAApB;AAAA,6BACE,QAAC,WAAD;AACE,QAAA,IAAI,EAAEL,aADR;AAAA,WAEMU;AAFN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAhBM;KAAMN,O;;AAkBb,MAAMO,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACrC,QAAM;AAAEP,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAkCM,KAAxC;AACA,SAAO;AAAEP,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAP;AACD,CAHD;;AAKA,eAAeT,OAAO,CAACc,eAAD,CAAP,CAAyBP,OAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { Layout } from 'antd';\nimport { connect } from 'react-redux';\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport MenuContent from './MenuContent'\n\nconst { Sider } = Layout;\n\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true }) => {\n  const props = { sideNavTheme, routeInfo , hideGroupTitle, localization}\n  return (\n    <Sider \n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \n      width={SIDE_NAV_WIDTH} \n      collapsed={navCollapsed}\n    >\n      <Scrollbars autoHide>\n        <MenuContent \n          type={NAV_TYPE_SIDE} \n          {...props}\n        />\n      </Scrollbars>\n    </Sider>\n  )\n}\n\nconst mapStateToProps = ({ theme }) => {\n  const { navCollapsed, sideNavTheme } =  theme;\n  return { navCollapsed, sideNavTheme }\n};\n\nexport default connect(mapStateToProps)(SideNav);\n"]},"metadata":{},"sourceType":"module"}