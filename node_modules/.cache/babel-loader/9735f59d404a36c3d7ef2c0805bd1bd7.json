{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/talhafiaz/Projects/React/XOSportsFrontend/src/views/app-views/tournament/add/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Form, Input, Button, Upload, Typography, message, Select, InputNumber, DatePicker } from \"antd\";\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormattedDateTimeRange } from \"react-intl\";\nimport service from \"auth/FetchInterceptor\";\nimport { ADD_TOURNAMENT, GET_ALL_CATEGORIES } from \"configs/Endpoints\";\nimport placeHolder from \"../../../../assets/svg/icon.jpg\";\nconst {\n  Title,\n  Paragraph,\n  Text\n} = Typography;\nconst layout = {\n  labelCol: {\n    span: 3\n  },\n  wrapperCol: {\n    span: 12\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nconst Demo = () => {\n  _s();\n\n  const history = useHistory();\n  const [file, setFile] = useState(\"\");\n  const [loading, setloading] = useState(false);\n  const [image, setImage] = useState(placeHolder);\n  const [categorytList, setCategoryList] = useState([]); // drop down things\n\n  const {\n    Option\n  } = Select;\n\n  function handleChange(value) {//  console.log(`selected ${value}`);\n  } // date picker methods\n\n\n  function onChange(value, dateString) {\n    console.log(\"Formatted Selected Time: \", value.toJSON());\n  }\n\n  function onOk(value) {\n    console.log(\"onOk: \", value);\n  } // get all method\n\n\n  const fetchData = () => {\n    setloading(true);\n    service.get(GET_ALL_CATEGORIES).then(response => {\n      setloading(false);\n      console.log(response);\n      setCategoryList(response);\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const onFinish = values => {\n    console.log(values);\n    setloading(true);\n    var formData = new FormData();\n    formData.append(\"name\", values.name);\n    formData.append(\"picture\", file);\n    formData.append(\"category_id\", values.category_id);\n    formData.append(\"ticketReq\", values.ticketReq);\n    formData.append(\"startsOn\", values.startsOn.toJSON());\n    console.log(file);\n    service.post(ADD_TOURNAMENT, formData).then(data => {\n      if (data.createdAt) {\n        // history.push(\"/app/tournament\");\n        history.goBack();\n        message.success(\"Successfully Done :) \");\n      } else {\n        message.error(\"Failed\");\n      }\n    }).catch(e => {\n      message.error(\"Unable to load  ! Please check your internet or Server \");\n    }).finally(() => {\n      setloading(false);\n    });\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, { ...layout,\n    name: \"AddTournament\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        children: \"Add Tournament\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \" Category\",\n      name: \"category_id\",\n      rules: [{\n        required: true,\n        message: \"Please select category !\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        defaultValue: \"Choose\",\n        style: {\n          width: 120\n        },\n        onChange: handleChange,\n        children: categorytList.map(category => /*#__PURE__*/_jsxDEV(Option, {\n          value: category.id,\n          children: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \" Name\",\n      name: \"name\",\n      rules: [{\n        required: true,\n        message: \"Please input a Tournament Name !\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Starts At :\",\n      name: \"startsOn\",\n      rules: [{\n        required: true,\n        message: \"Please input a Tournament Name !\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        showTime: true,\n        placeholder: \"Select Time\",\n        onChange: onChange,\n        onOk: onOk\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"  Tickets\",\n      name: \"ticketReq\",\n      rules: [{\n        required: true,\n        message: \"Please enter how many tickets are required !\"\n      }, {\n        validator: (r, value) => value < 1 ? Promise.reject(\"value low\") : Promise.resolve(true),\n        message: \"Atleast 1 or more tickets are required!\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(InputNumber, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \" Image\",\n      children: /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"picture\",\n        rules: [{\n          required: true,\n          message: \"Please input something about this charity !\"\n        }],\n        valuePropName: \"picture\",\n        noStyle: true,\n        children: /*#__PURE__*/_jsxDEV(Upload.Dragger, {\n          accept: \"image/*\",\n          beforeUpload: file => {\n            setFile(file);\n            let reader = new FileReader();\n\n            reader.onload = e => {\n              setImage(e.target.result);\n            };\n\n            reader.readAsDataURL(file); // Prevent upload\n\n            return false;\n          },\n          name: \"picture\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              height: 200,\n              width: 200\n            },\n            src: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 23\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 33\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"ant-upload-text\",\n            children: \"Click or drag file to this area to upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: loading,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Demo, \"7TdMmIP025bzsl6a2BsFdCtWing=\", false, function () {\n  return [useHistory];\n});\n\n_c = Demo;\nexport class AddTournament extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Demo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 12\n    }, this);\n  }\n\n}\nexport default AddTournament;\n\nvar _c;\n\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"sources":["/Users/talhafiaz/Projects/React/XOSportsFrontend/src/views/app-views/tournament/add/index.js"],"names":["React","Component","useState","useEffect","Form","Input","Button","Upload","Typography","message","Select","InputNumber","DatePicker","UploadOutlined","InboxOutlined","useHistory","FormattedDateTimeRange","service","ADD_TOURNAMENT","GET_ALL_CATEGORIES","placeHolder","Title","Paragraph","Text","layout","labelCol","span","wrapperCol","tailLayout","offset","Demo","history","file","setFile","loading","setloading","image","setImage","categorytList","setCategoryList","Option","handleChange","value","onChange","dateString","console","log","toJSON","onOk","fetchData","get","then","response","onFinish","values","formData","FormData","append","name","category_id","ticketReq","startsOn","post","data","createdAt","goBack","success","error","catch","e","finally","onFinishFailed","errorInfo","remember","required","width","map","category","id","validator","r","Promise","reject","resolve","reader","FileReader","onload","target","result","readAsDataURL","height","AddTournament","render"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport {\n  Form,\n  Input,\n  Button,\n  Upload,\n  Typography,\n  message,\n  Select,\n  InputNumber,\n  DatePicker,\n} from \"antd\";\n\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormattedDateTimeRange } from \"react-intl\";\nimport service from \"auth/FetchInterceptor\";\nimport { ADD_TOURNAMENT, GET_ALL_CATEGORIES } from \"configs/Endpoints\";\nimport placeHolder from \"../../../../assets/svg/icon.jpg\";\n\nconst { Title, Paragraph, Text } = Typography;\n\nconst layout = {\n  labelCol: {\n    span: 3,\n  },\n  wrapperCol: {\n    span: 12,\n  },\n};\n\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nconst Demo = () => {\n  const history = useHistory();\n\n  const [file, setFile] = useState(\"\");\n  const [loading, setloading] = useState(false);\n  const [image, setImage] = useState(\n    placeHolder\n  );\n\n  const [categorytList, setCategoryList] = useState([]);\n\n  // drop down things\n  const { Option } = Select;\n  function handleChange(value) {\n    //  console.log(`selected ${value}`);\n  }\n\n  // date picker methods\n  function onChange(value, dateString) {\n    console.log(\"Formatted Selected Time: \", value.toJSON());\n  }\n\n  function onOk(value) {\n    console.log(\"onOk: \", value);\n  }\n\n  // get all method\n  const fetchData = () => {\n    setloading(true);\n\n    service.get(GET_ALL_CATEGORIES).then((response) => {\n      setloading(false);\n      console.log(response);\n      setCategoryList(response);\n    });\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const onFinish = (values) => {\n    console.log(values);\n    setloading(true);\n    var formData = new FormData();\n    formData.append(\"name\", values.name);\n    formData.append(\"picture\", file);\n    formData.append(\"category_id\", values.category_id);\n    formData.append(\"ticketReq\", values.ticketReq);\n    formData.append(\"startsOn\", values.startsOn.toJSON());\n    console.log(file);\n    service\n      .post(ADD_TOURNAMENT, formData)\n      .then((data) => {\n        if (data.createdAt) {\n          // history.push(\"/app/tournament\");\n          history.goBack();\n          message.success(\"Successfully Done :) \");\n        } else {\n          message.error(\"Failed\");\n        }\n      })\n\n      .catch((e) => {\n        message.error(\n          \"Unable to load  ! Please check your internet or Server \"\n        );\n      })\n      .finally(() => {\n        setloading(false);\n      });\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Form\n      {...layout}\n      name=\"AddTournament\"\n      initialValues={{\n        remember: true,\n      }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <br></br>\n      <Typography>\n        <Title>Add Tournament</Title>\n      </Typography>\n      <br></br>\n      <br></br>\n\n      <Form.Item\n        label=\" Category\"\n        name=\"category_id\"\n        rules={[\n          {\n            required: true,\n            message: \"Please select category !\",\n          },\n        ]}\n      >\n        <Select          defaultValue=\"Choose\"\n          style={{ width: 120 }}\n          onChange={handleChange}\n        >\n          {categorytList.map((category) => (\n            <Option value={category.id}>{category.name}</Option>\n          ))}\n        </Select>\n      </Form.Item>\n\n      <Form.Item\n        label=\" Name\"\n        name=\"name\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input a Tournament Name !\",\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Starts At :\"\n        name=\"startsOn\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input a Tournament Name !\",\n          },\n        ]}\n      >\n        <DatePicker\n          showTime\n          placeholder=\"Select Time\"\n          onChange={onChange}\n          onOk={onOk}\n        />\n      </Form.Item>\n\n      <Form.Item\n        label=\"  Tickets\"\n        name=\"ticketReq\"\n        rules={[\n          {\n            required: true,\n            message: \"Please enter how many tickets are required !\",\n          },\n          {\n            validator: (r, value) =>\n              value < 1 ? Promise.reject(\"value low\") : Promise.resolve(true),\n            message: \"Atleast 1 or more tickets are required!\",\n          },\n        ]}\n      >\n        <InputNumber />\n      </Form.Item>\n\n      <Form.Item label=\" Image\">\n        <Form.Item\n          name=\"picture\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input something about this charity !\",\n            },\n          ]}\n          valuePropName=\"picture\"\n          noStyle\n        >\n          <Upload.Dragger\n                      accept=\"image/*\"\n\n            beforeUpload={(file) => {\n              setFile(file);\n              let reader = new FileReader();\n              reader.onload = (e) => {\n                setImage(e.target.result);\n              };\n              reader.readAsDataURL(file);\n\n              // Prevent upload\n              return false;\n            }}\n            name=\"picture\"\n          >\n            <img style={{ height: 200, width: 200 }} src={image}></img>\n            <br></br> <br></br> <br></br>{\" \"}\n            <p className=\"ant-upload-text\">\n              Click or drag file to this area to upload\n            </p>\n          </Upload.Dragger>\n        </Form.Item>\n      </Form.Item>\n\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport class AddTournament extends Component {\n  render() {\n    return <Demo />;\n  }\n}\n\nexport default AddTournament;\n"]},"metadata":{},"sourceType":"module"}