{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/talhafiaz/Projects/React/Controrg/src/views/app-views/round/edit/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from \"react\";\nimport { Form, Input, Button, Upload, message, Typography, InputNumber, Divider } from \"antd\";\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport service from \"auth/FetchInterceptor\";\nimport { EDIT_ROUND } from \"configs/Endpoints\";\nconst {\n  Title,\n  Paragraph,\n  Text\n} = Typography;\nconst layout = {\n  labelCol: {\n    span: 3\n  },\n  wrapperCol: {\n    span: 12\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nconst Demo = props => {\n  _s();\n\n  const history = useHistory();\n  const [loading, setloading] = useState(false);\n\n  const onFinish = values => {\n    console.log(\"Success:\", values);\n    setloading(true);\n    service.put(EDIT_ROUND + props.location.dataProps.rounddetails.id, {\n      tournament_id: props.match.params.id,\n      criteria: values.criteria\n    }).then(data => {\n      console.log(data.message);\n\n      if (data.message == \"Round was updated successfully.\") {\n        // history.push(\"/app/tournament/manage/\" + props.match.params.id);\n        history.goBack();\n        message.success(\"Successfully Done :) \");\n      } else {\n        message.error(\"Failed\");\n      }\n    }).catch(e => {\n      message.error(\"Unable to load  ! Please check your internet or Server \");\n    }).finally(() => {\n      setloading(false);\n    });\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, { ...layout,\n    name: \"EditRound\",\n    initialValues: {\n      criteria: props.location.dataProps.rounddetails.criteria\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        children: \"Edit Round \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"  Criteria\",\n      name: \"criteria\",\n      children: /*#__PURE__*/_jsxDEV(InputNumber, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: loading,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Demo, \"grHJ9ZR2+cbeiGUEnOOdifhJSig=\", false, function () {\n  return [useHistory];\n});\n\n_c = Demo;\nexport default Demo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"sources":["/Users/talhafiaz/Projects/React/Controrg/src/views/app-views/round/edit/index.js"],"names":["React","Component","useState","Form","Input","Button","Upload","message","Typography","InputNumber","Divider","UploadOutlined","InboxOutlined","useHistory","service","EDIT_ROUND","Title","Paragraph","Text","layout","labelCol","span","wrapperCol","tailLayout","offset","Demo","props","history","loading","setloading","onFinish","values","console","log","put","location","dataProps","rounddetails","id","tournament_id","match","params","criteria","then","data","goBack","success","error","catch","e","finally","onFinishFailed","errorInfo"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport {\n  Form,\n  Input,\n  Button,\n  Upload,\n  message,\n  Typography,\n  InputNumber,\n  Divider,\n} from \"antd\";\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport service from \"auth/FetchInterceptor\";\nimport { EDIT_ROUND } from \"configs/Endpoints\";\n\nconst { Title, Paragraph, Text } = Typography;\n\nconst layout = {\n  labelCol: {\n    span: 3,\n  },\n  wrapperCol: {\n    span: 12,\n  },\n};\n\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nconst Demo = (props) => {\n  const history = useHistory();\n\n  const [loading, setloading] = useState(false);\n\n  const onFinish = (values) => {\n    console.log(\"Success:\", values);\n\n    setloading(true);\n    service\n      .put(EDIT_ROUND + props.location.dataProps.rounddetails.id, {\n        tournament_id: props.match.params.id,\n        criteria: values.criteria,\n      })\n\n      .then((data) => {\n        console.log(data.message);\n        if (data.message == \"Round was updated successfully.\") {\n          // history.push(\"/app/tournament/manage/\" + props.match.params.id);\n          history.goBack();\n          message.success(\"Successfully Done :) \");\n        } else {\n          message.error(\"Failed\");\n        }\n      })\n\n      .catch((e) => {\n        message.error(\n          \"Unable to load  ! Please check your internet or Server \"\n        );\n      })\n      .finally(() => {\n        setloading(false);\n      });\n  };\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Form\n      {...layout}\n      name=\"EditRound\"\n      initialValues={{\n        criteria: props.location.dataProps.rounddetails.criteria,\n      }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <br></br>\n      <Typography>\n        <Title>Edit Round </Title>\n      </Typography>\n      <br></br>\n      <br></br>\n\n      <Form.Item label=\"  Criteria\" name=\"criteria\">\n        <InputNumber />\n      </Form.Item>\n\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default Demo;\n"]},"metadata":{},"sourceType":"module"}