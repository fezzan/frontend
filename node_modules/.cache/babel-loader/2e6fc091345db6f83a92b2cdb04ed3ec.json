{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/talhafiaz/Projects/React/XOSportsFrontend/src/views/app-views/tournament/manage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Table, Divider, Skeleton, Button, Tooltip, message } from \"antd\";\nimport { PlusCircleOutlined, EditOutlined, FormOutlined, DeleteOutlined, PlayCircleOutlined, SendOutlined, TrophyOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"moment\";\nimport service from \"auth/FetchInterceptor\";\nimport { ACTIVATE_TOURNAMENT, GET_TOURNAMENT_BY_ID, GET_ROUND_BY_ID, DELETE_ROUND, GET_ALL_PRIZES, DELETE_PRIZE, END_TOURNAMENT } from \"../../../../configs/Endpoints\";\n\nconst Round = props => {\n  _s();\n\n  const columns = [{\n    title: \"Round ID\",\n    dataIndex: \"id\",\n    key: \"id\"\n  }, {\n    title: \"Round Number\",\n    dataIndex: \"roundnumber\",\n    key: \"roundnumber\",\n    render: text => /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/#\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }, this)\n  }, {\n    title: \"Status\",\n    dataIndex: \"setActive\",\n    key: \"setActive\",\n    render: text => {\n      if (text == 1) {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/#\",\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 18\n        }, this);\n      } else if (text == 0) {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/#\",\n          children: \"Ended\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 18\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/#\",\n          children: \"Not Started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 18\n        }, this);\n      }\n    }\n  }, {\n    title: \"Criteria\",\n    dataIndex: \"criteria\",\n    key: \"criteria\",\n    render: text => /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/#\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }, this)\n  }, {\n    title: \"\",\n    key: \"action\",\n    render: (text, record) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-end\",\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: record.setActive == null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: {\n                pathname: \"/app/game/\" + record.id,\n                dataProps: {\n                  tournamentid: props.match.params.id\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                icon: /*#__PURE__*/_jsxDEV(EditOutlined, {\n                  style: {\n                    fontSize: \"15px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 29\n                }, this),\n                children: \"Manage Round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              type: \"vertical\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: {\n                pathname: `/app/round/edit/${props.match.params.id}`,\n                dataProps: {\n                  rounddetails: record\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  background: \"orange\",\n                  borderColor: \"orange\"\n                },\n                type: \"primary\",\n                icon: /*#__PURE__*/_jsxDEV(FormOutlined, {\n                  style: {\n                    fontSize: \"14px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 29\n                }, this),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              type: \"vertical\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              onClick: () => {\n                deleteRound(record.id);\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"danger\",\n                icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n                  style: {\n                    fontSize: \"15px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 29\n                }, this),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : record.setActive == 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Round has been played\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: {\n                pathname: `/app/round/setroundanswers/roundid/${record.id}`,\n                dataProps: {\n                  rounddetails: record,\n                  tournamentid: props.match.params.id\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  background: \"green\",\n                  borderColor: \"green\"\n                },\n                type: \"primary\",\n                icon: /*#__PURE__*/_jsxDEV(SendOutlined, {\n                  style: {\n                    fontSize: \"14px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 29\n                }, this),\n                children: \"Answer Questions and End Round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this);\n    }\n  }]; // prizes columns\n\n  const prizescolumns = [{\n    title: \"Prize ID\",\n    dataIndex: \"id\",\n    key: \"id\"\n  }, {\n    title: \"Prize\",\n    dataIndex: \"prize\",\n    key: \"prize\",\n    render: text => /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/#\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }, this)\n  }, {\n    title: \"Rank\",\n    dataIndex: \"rank\",\n    key: \"rank\",\n    render: text => /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/#\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }, this)\n  }, {\n    title: \"XP\",\n    dataIndex: \"xp\",\n    key: \"xp\",\n    render: text => /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/#\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }, this)\n  }, {\n    title: \"\",\n    key: \"action\",\n    render: (text, record) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-end\",\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [record.setActive == null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: {\n                pathname: `/app/prize/edit/${props.match.params.id}`,\n                dataProps: {\n                  prizedetails: record\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  background: \"orange\",\n                  borderColor: \"orange\"\n                },\n                type: \"primary\",\n                icon: /*#__PURE__*/_jsxDEV(FormOutlined, {\n                  style: {\n                    fontSize: \"14px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 29\n                }, this),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              type: \"vertical\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this), record.setActive == null ? /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => {\n              deletePrize(record.id);\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n                style: {\n                  fontSize: \"15px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 27\n              }, this),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n  const [roundList, setRoundList] = useState([]);\n  const [loading, setloading] = useState(false);\n  const [tournamentstatus, settournamentstatus] = useState();\n  const [prizeList, setprizeList] = useState([]);\n\n  const StartTournament = () => {\n    setloading(true);\n    service.put(ACTIVATE_TOURNAMENT + props.match.params.id).then(response => {\n      console.log(response);\n\n      if (response.success) {\n        message.success(\"Successfully Started :) \");\n        loadTournament();\n      } else {\n        message.error(\"Failed to Start \");\n      }\n\n      setloading(false);\n    }).catch(e => {\n      setloading(false);\n      message.error(\"Unable to load  ! Please check your internet or Server \");\n    });\n  };\n\n  const EndTournament = () => {\n    setloading(true);\n    service.put(END_TOURNAMENT + props.match.params.id).then(response => {\n      console.log(response);\n\n      if (response.message == \"Tournament has Ended\") {\n        message.success(\"Successfully Ended :) \");\n        loadTournament();\n      } else {\n        message.error(\"Failed to end \");\n      }\n\n      setloading(false);\n    }).catch(e => {\n      setloading(false);\n      message.error(\"Unable to load  ! Please check your internet or Server \");\n    });\n  };\n\n  const deleteRound = id => {\n    setloading(true);\n    service.delete(DELETE_ROUND + id).then(response => {\n      console.log(response);\n\n      if (response.message == \"Round was deleted successfully!\") {\n        message.success(\"Successfully Deleted :) \");\n      } else {\n        message.error(\"Failed to delete \");\n      } //alert(response);\n\n\n      fetchData();\n      setloading(false);\n    }).catch(e => {\n      setloading(false);\n      message.error(\"Unable to load  ! Please check your internet or Server \");\n    });\n  };\n\n  const deletePrize = id => {\n    setloading(true);\n    service.delete(DELETE_PRIZE + id).then(response => {\n      console.log(response);\n\n      if (response.message == \"Prize was deleted successfully!\") {\n        message.success(\"Successfully Deleted :) \");\n      } else {\n        message.error(\"Failed to delete \");\n      } //alert(response);\n\n\n      fetchprizeData();\n      setloading(false);\n    }).catch(e => {\n      setloading(false);\n      message.error(\"Unable to load  ! Please check your internet or Server \");\n    });\n  };\n\n  const loadTournament = () => {\n    service.get(GET_TOURNAMENT_BY_ID + props.match.params.id).then(response => {\n      // console.log(response[0].setActive);\n      settournamentstatus(response[0].setActive);\n    });\n  };\n\n  const fetchprizeData = () => {\n    setloading(true);\n    service.get(GET_ALL_PRIZES + props.match.params.id).then(response => {\n      setloading(false);\n      console.log(response);\n      setprizeList(response);\n    });\n  };\n\n  const fetchData = () => {\n    setloading(true);\n    loadTournament();\n    service.get(GET_ROUND_BY_ID + props.match.params.id).then(response => {\n      setloading(false); //   console.log(response);\n\n      setRoundList(response);\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n    fetchprizeData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: 500,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Skeleton, {\n      active: true,\n      paragraph: {\n        rows: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 387,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: [tournamentstatus == null ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Start Tournament\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            icon: /*#__PURE__*/_jsxDEV(PlayCircleOutlined, {\n              style: {\n                fontSize: \"18px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 23\n            }, this),\n            onClick: StartTournament,\n            children: \"Start Tournament\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }, this) : tournamentstatus == 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Start Tournament\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            icon: /*#__PURE__*/_jsxDEV(SendOutlined, {\n              style: {\n                fontSize: \"18px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 23\n            }, this),\n            onClick: EndTournament,\n            children: \"Finish Tournament\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: `/app/tournament/leaderboard/tournamentid/` + props.match.params.id,\n            dataProps: {\n              tournamentid: props.match.params.id\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              background: \"black\",\n              borderColor: \"yellow\",\n              color: \"gold\"\n            },\n            type: \"primary\",\n            icon: /*#__PURE__*/_jsxDEV(TrophyOutlined, {\n              style: {\n                fontSize: \"20px\",\n                color: \"gold\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 17\n            }, this),\n            children: [\"Leaderboard\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      children: \"Rounds Configration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        paddingHorizontal: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Add Round\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/app/round/add/${props.match.params.id}`,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            icon: /*#__PURE__*/_jsxDEV(PlusCircleOutlined, {\n              style: {\n                fontSize: \"18px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 21\n            }, this),\n            children: \"Add Round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: roundList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      children: \"Prize Configration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        paddingHorizontal: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Add Round\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/app/prize/add/${props.match.params.id}`,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            icon: /*#__PURE__*/_jsxDEV(PlusCircleOutlined, {\n              style: {\n                fontSize: \"18px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 21\n            }, this),\n            children: \"Add Prize\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: prizescolumns,\n      dataSource: prizeList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 399,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Round, \"97mtHStCL4/4OLknb2ROK1e6NS4=\");\n\n_c = Round;\nexport default Round;\n\nvar _c;\n\n$RefreshReg$(_c, \"Round\");","map":{"version":3,"sources":["/Users/talhafiaz/Projects/React/XOSportsFrontend/src/views/app-views/tournament/manage/index.js"],"names":["React","useState","useEffect","Table","Divider","Skeleton","Button","Tooltip","message","PlusCircleOutlined","EditOutlined","FormOutlined","DeleteOutlined","PlayCircleOutlined","SendOutlined","TrophyOutlined","Link","Moment","service","ACTIVATE_TOURNAMENT","GET_TOURNAMENT_BY_ID","GET_ROUND_BY_ID","DELETE_ROUND","GET_ALL_PRIZES","DELETE_PRIZE","END_TOURNAMENT","Round","props","columns","title","dataIndex","key","render","text","record","display","flexDirection","justifyContent","width","setActive","pathname","id","dataProps","tournamentid","match","params","fontSize","rounddetails","background","borderColor","deleteRound","prizescolumns","prizedetails","deletePrize","roundList","setRoundList","loading","setloading","tournamentstatus","settournamentstatus","prizeList","setprizeList","StartTournament","put","then","response","console","log","success","loadTournament","error","catch","e","EndTournament","delete","fetchData","fetchprizeData","get","minHeight","alignItems","rows","color","paddingHorizontal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Table, Divider, Skeleton, Button, Tooltip, message } from \"antd\";\nimport {\n  PlusCircleOutlined,\n  EditOutlined,\n  FormOutlined,\n  DeleteOutlined,\n  PlayCircleOutlined,\n  SendOutlined,\n  TrophyOutlined,\n} from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"moment\";\nimport service from \"auth/FetchInterceptor\";\nimport {\n  ACTIVATE_TOURNAMENT,\n  GET_TOURNAMENT_BY_ID,\n  GET_ROUND_BY_ID,\n  DELETE_ROUND,\n  GET_ALL_PRIZES,\n  DELETE_PRIZE,\n  END_TOURNAMENT,\n} from \"../../../../configs/Endpoints\";\n\nconst Round = (props) => {\n  const columns = [\n    {\n      title: \"Round ID\",\n      dataIndex: \"id\",\n      key: \"id\",\n    },\n\n    {\n      title: \"Round Number\",\n      dataIndex: \"roundnumber\",\n      key: \"roundnumber\",\n      render: (text) => <a href=\"/#\">{text}</a>,\n    },\n\n    {\n      title: \"Status\",\n      dataIndex: \"setActive\",\n      key: \"setActive\",\n      render: (text) => {\n        if (text == 1) {\n          return <a href=\"/#\">Active</a>;\n        } else if (text == 0) {\n          return <a href=\"/#\">Ended</a>;\n        } else {\n          return <a href=\"/#\">Not Started</a>;\n        }\n      },\n    },\n    {\n      title: \"Criteria\",\n      dataIndex: \"criteria\",\n      key: \"criteria\",\n      render: (text) => <a href=\"/#\">{text}</a>,\n    },\n    {\n      title: \"\",\n      key: \"action\",\n      render: (text, record) => {\n        return (\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"flex-end\",\n              width: \"100%\",\n            }}\n          >\n            <span>\n              {record.setActive == null ? (\n                <>\n                  <Link\n                    to={{\n                      pathname: \"/app/game/\" + record.id,\n                      dataProps: {\n                        tournamentid: props.match.params.id,\n                      },\n                    }}\n                  >\n                    <Button\n                      type=\"primary\"\n                      icon={<EditOutlined style={{ fontSize: \"15px\" }} />}\n                    >\n                      Manage Round\n                    </Button>\n                  </Link>\n                  <Divider type=\"vertical\" />\n                  <Link\n                    to={{\n                      pathname: `/app/round/edit/${props.match.params.id}`,\n                      dataProps: { rounddetails: record },\n                    }}\n                  >\n                    <Button\n                      style={{ background: \"orange\", borderColor: \"orange\" }}\n                      type=\"primary\"\n                      icon={<FormOutlined style={{ fontSize: \"14px\" }} />}\n                    >\n                      Edit\n                    </Button>\n                  </Link>\n                  <Divider type=\"vertical\" />\n\n                  <Link\n                    onClick={() => {\n                      deleteRound(record.id);\n                    }}\n                  >\n                    <Button\n                      type=\"danger\"\n                      icon={<DeleteOutlined style={{ fontSize: \"15px\" }} />}\n                    >\n                      Delete\n                    </Button>\n                  </Link>\n                </>\n              ) : record.setActive == 0 ? (\n                <>\n                  <p>Round has been played</p>\n                </>\n              ) : (\n                <span>\n                  <Link\n                    to={{\n                      pathname: `/app/round/setroundanswers/roundid/${record.id}`,\n                      dataProps: {\n                        rounddetails: record,\n                        tournamentid: props.match.params.id,\n                      },\n                    }}\n                  >\n                    <Button\n                      style={{ background: \"green\", borderColor: \"green\" }}\n                      type=\"primary\"\n                      icon={<SendOutlined style={{ fontSize: \"14px\" }} />}\n                    >\n                      Answer Questions and End Round\n                    </Button>\n                  </Link>\n                </span>\n              )}\n            </span>\n          </div>\n        );\n      },\n    },\n  ];\n\n  // prizes columns\n\n  const prizescolumns = [\n    {\n      title: \"Prize ID\",\n      dataIndex: \"id\",\n      key: \"id\",\n    },\n\n    {\n      title: \"Prize\",\n      dataIndex: \"prize\",\n      key: \"prize\",\n      render: (text) => <a href=\"/#\">{text}</a>,\n    },\n    {\n      title: \"Rank\",\n      dataIndex: \"rank\",\n      key: \"rank\",\n      render: (text) => <a href=\"/#\">{text}</a>,\n    },\n    {\n      title: \"XP\",\n      dataIndex: \"xp\",\n      key: \"xp\",\n      render: (text) => <a href=\"/#\">{text}</a>,\n    },\n    {\n      title: \"\",\n      key: \"action\",\n      render: (text, record) => {\n        return (\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"flex-end\",\n              width: \"100%\",\n            }}\n          >\n            <span>\n              {record.setActive == null ? (\n                <>\n                  <Link\n                    to={{\n                      pathname: `/app/prize/edit/${props.match.params.id}`,\n                      dataProps: { prizedetails: record },\n                    }}\n                  >\n                    <Button\n                      style={{ background: \"orange\", borderColor: \"orange\" }}\n                      type=\"primary\"\n                      icon={<FormOutlined style={{ fontSize: \"14px\" }} />}\n                    >\n                      Edit\n                    </Button>\n                  </Link>\n                  <Divider type=\"vertical\" />\n                </>\n              ) : (\n                <span></span>\n              )}\n\n              {record.setActive == null ? (\n                <Link\n                  onClick={() => {\n                    deletePrize(record.id);\n                  }}\n                >\n                  <Button\n                    type=\"danger\"\n                    icon={<DeleteOutlined style={{ fontSize: \"15px\" }} />}\n                  >\n                    Delete\n                  </Button>\n                </Link>\n              ) : (\n                <span></span>\n              )}\n            </span>\n          </div>\n        );\n      },\n    },\n  ];\n\n  const [roundList, setRoundList] = useState([]);\n  const [loading, setloading] = useState(false);\n  const [tournamentstatus, settournamentstatus] = useState();\n  const [prizeList, setprizeList] = useState([]);\n\n  const StartTournament = () => {\n    setloading(true);\n\n    service\n      .put(ACTIVATE_TOURNAMENT + props.match.params.id)\n      .then((response) => {\n        console.log(response);\n        if (response.success) {\n          message.success(\"Successfully Started :) \");\n\n          loadTournament();\n        } else {\n          message.error(\"Failed to Start \");\n        }\n\n        setloading(false);\n      })\n      .catch((e) => {\n        setloading(false);\n\n        message.error(\n          \"Unable to load  ! Please check your internet or Server \"\n        );\n      });\n  };\n\n  const EndTournament = () => {\n    setloading(true);\n\n    service\n      .put(END_TOURNAMENT + props.match.params.id)\n      .then((response) => {\n        console.log(response);\n        if (response.message == \"Tournament has Ended\") {\n          message.success(\"Successfully Ended :) \");\n\n          loadTournament();\n        } else {\n          message.error(\"Failed to end \");\n        }\n\n        setloading(false);\n      })\n      .catch((e) => {\n        setloading(false);\n\n        message.error(\n          \"Unable to load  ! Please check your internet or Server \"\n        );\n      });\n  };\n\n  const deleteRound = (id) => {\n    setloading(true);\n\n    service\n      .delete(DELETE_ROUND + id)\n      .then((response) => {\n        console.log(response);\n        if (response.message == \"Round was deleted successfully!\") {\n          message.success(\"Successfully Deleted :) \");\n        } else {\n          message.error(\"Failed to delete \");\n        }\n\n        //alert(response);\n        fetchData();\n        setloading(false);\n      })\n      .catch((e) => {\n        setloading(false);\n\n        message.error(\n          \"Unable to load  ! Please check your internet or Server \"\n        );\n      });\n  };\n\n  const deletePrize = (id) => {\n    setloading(true);\n\n    service\n      .delete(DELETE_PRIZE + id)\n      .then((response) => {\n        console.log(response);\n        if (response.message == \"Prize was deleted successfully!\") {\n          message.success(\"Successfully Deleted :) \");\n        } else {\n          message.error(\"Failed to delete \");\n        }\n\n        //alert(response);\n        fetchprizeData();\n        setloading(false);\n      })\n      .catch((e) => {\n        setloading(false);\n\n        message.error(\n          \"Unable to load  ! Please check your internet or Server \"\n        );\n      });\n  };\n  const loadTournament = () => {\n    service\n      .get(GET_TOURNAMENT_BY_ID + props.match.params.id)\n\n      .then((response) => {\n        // console.log(response[0].setActive);\n        settournamentstatus(response[0].setActive);\n      });\n  };\n\n  const fetchprizeData = () => {\n    setloading(true);\n\n    service.get(GET_ALL_PRIZES + props.match.params.id).then((response) => {\n      setloading(false);\n      console.log(response);\n      setprizeList(response);\n    });\n  };\n  const fetchData = () => {\n    setloading(true);\n\n    loadTournament();\n\n    service\n      .get(GET_ROUND_BY_ID + props.match.params.id)\n\n      .then((response) => {\n        setloading(false);\n        //   console.log(response);\n        setRoundList(response);\n      });\n  };\n\n  useEffect(() => {\n    fetchData();\n    fetchprizeData();\n  }, []);\n  if (loading)\n    return (\n      <div\n        style={{\n          minHeight: 500,\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Skeleton active paragraph={{ rows: 10 }} />\n      </div>\n    );\n  return (\n    <div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        {tournamentstatus == null ? (\n          <div>\n            <Tooltip title=\"Start Tournament\">\n              <Button\n                type=\"primary\"\n                icon={<PlayCircleOutlined style={{ fontSize: \"18px\" }} />}\n                onClick={StartTournament}\n              >\n                Start Tournament\n              </Button>\n            </Tooltip>\n          </div>\n        ) : tournamentstatus == 1 ? (\n          <div>\n            <Tooltip title=\"Start Tournament\">\n              <Button\n                type=\"primary\"\n                icon={<SendOutlined style={{ fontSize: \"18px\" }} />}\n                onClick={EndTournament}\n              >\n                Finish Tournament\n              </Button>\n            </Tooltip>\n          </div>\n        ) : (\n          <div></div>\n        )}\n        <br></br>\n        <div>\n          <Link\n            to={{\n              pathname:\n                `/app/tournament/leaderboard/tournamentid/` +\n                props.match.params.id,\n              dataProps: {\n                tournamentid: props.match.params.id,\n              },\n            }}\n          >\n            <Button\n              style={{\n                background: \"black\",\n                borderColor: \"yellow\",\n                color: \"gold\",\n              }}\n              type=\"primary\"\n              icon={\n                <TrophyOutlined style={{ fontSize: \"20px\", color: \"gold\" }} />\n              }\n            >\n              Leaderboard{\" \"}\n            </Button>\n          </Link>\n        </div>\n      </div>\n\n      <Divider />\n      <Divider>Rounds Configration</Divider>\n      <Divider />\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          paddingHorizontal: 20,\n        }}\n      >\n        <Tooltip title=\"Add Round\">\n          <Link to={`/app/round/add/${props.match.params.id}`}>\n            <Button\n              type=\"primary\"\n              icon={<PlusCircleOutlined style={{ fontSize: \"18px\" }} />}\n            >\n              Add Round\n            </Button>\n          </Link>\n        </Tooltip>\n      </div>\n\n      <br></br>\n\n      <br></br>\n\n      <Table columns={columns} dataSource={roundList} />\n\n      <Divider />\n      <Divider>Prize Configration</Divider>\n      <Divider />\n\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          paddingHorizontal: 20,\n        }}\n      >\n        <Tooltip title=\"Add Round\">\n          <Link to={`/app/prize/add/${props.match.params.id}`}>\n            <Button\n              type=\"primary\"\n              icon={<PlusCircleOutlined style={{ fontSize: \"18px\" }} />}\n            >\n              Add Prize\n            </Button>\n          </Link>\n        </Tooltip>\n      </div>\n\n      <br></br>\n\n      <br></br>\n\n      <Table columns={prizescolumns} dataSource={prizeList} />\n    </div>\n  );\n};\n\nexport default Round;\n"]},"metadata":{},"sourceType":"module"}