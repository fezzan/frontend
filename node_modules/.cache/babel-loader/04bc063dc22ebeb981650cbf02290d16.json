{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/talhafiaz/Projects/React/Controrg/src/views/app-views/question/add/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Form, Input, Button, Upload, Typography, message, Select } from \"antd\";\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport service from \"auth/FetchInterceptor\";\nimport { ADD_QUESTION, GET_ALL_SPONSOR } from \"configs/Endpoints\";\nconst {\n  Title,\n  Paragraph,\n  Text\n} = Typography;\nconst layout = {\n  labelCol: {\n    span: 3\n  },\n  wrapperCol: {\n    span: 12\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nconst Demo = props => {\n  _s();\n\n  const history = useHistory();\n  const [categorytList, setCategoryList] = useState([]);\n  const [loading, setloading] = useState(false); // drop down things\n\n  const {\n    Option\n  } = Select;\n\n  function handleChange(value) {//  console.log(`selected ${value}`);\n  } // get all method\n\n\n  const fetchData = () => {\n    setloading(true);\n    service.get(GET_ALL_SPONSOR).then(response => {\n      setloading(false);\n      console.log(response);\n      setCategoryList(response);\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const onFinish = values => {\n    setloading(true); //formData.append(\"picture\", file);\n    //  console.log(file);\n\n    service.post(ADD_QUESTION, {\n      game_id: props.match.params.id,\n      text: values.text,\n      sponsor_id: values.sponsor_id\n    }).then(data => {\n      if (data.id) {\n        // history.push(\"/app/questions/gameid/\" + props.match.params.id);\n        history.goBack();\n        message.success(\"Successfully Done :) \");\n      } else {\n        message.error(data.message);\n      }\n    }).catch(e => {\n      message.error(\"Unable to load  ! Please check your internet or Server \");\n    }).finally(() => {\n      setloading(false);\n    });\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, { ...layout,\n    name: \"AddQuestion\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        children: \"Add Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \" Sponser\",\n      name: \"sponsor_id\",\n      rules: [{\n        required: true,\n        message: \"Please select Sponser !\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        defaultValue: \"Choose\",\n        style: {\n          width: 120\n        },\n        onChange: handleChange,\n        children: categorytList.map(category => /*#__PURE__*/_jsxDEV(Option, {\n          value: category.id,\n          children: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \" Text\",\n      name: \"text\",\n      rules: [{\n        required: true,\n        message: \"Please input a Question text !\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: loading,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Demo, \"EhTc45hnFH/pDx7nfxKccrRmUqk=\", false, function () {\n  return [useHistory];\n});\n\n_c = Demo;\nexport class AddQuestion extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Demo, { ...this.props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 12\n    }, this);\n  }\n\n}\nexport default AddQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"sources":["/Users/talhafiaz/Projects/React/Controrg/src/views/app-views/question/add/index.js"],"names":["React","Component","useState","useEffect","Form","Input","Button","Upload","Typography","message","Select","UploadOutlined","InboxOutlined","useHistory","service","ADD_QUESTION","GET_ALL_SPONSOR","Title","Paragraph","Text","layout","labelCol","span","wrapperCol","tailLayout","offset","Demo","props","history","categorytList","setCategoryList","loading","setloading","Option","handleChange","value","fetchData","get","then","response","console","log","onFinish","values","post","game_id","match","params","id","text","sponsor_id","data","goBack","success","error","catch","e","finally","onFinishFailed","errorInfo","remember","required","width","map","category","name","AddQuestion","render"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { Form, Input, Button, Upload, Typography, message, Select } from \"antd\";\n\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport service from \"auth/FetchInterceptor\";\nimport { ADD_QUESTION, GET_ALL_SPONSOR } from \"configs/Endpoints\";\n\nconst { Title, Paragraph, Text } = Typography;\n\nconst layout = {\n  labelCol: {\n    span: 3,\n  },\n  wrapperCol: {\n    span: 12,\n  },\n};\n\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nconst Demo = (props) => {\n  const history = useHistory();\n  const [categorytList, setCategoryList] = useState([]);\n\n  const [loading, setloading] = useState(false);\n\n  // drop down things\n  const { Option } = Select;\n  function handleChange(value) {\n    //  console.log(`selected ${value}`);\n  }\n\n  // get all method\n  const fetchData = () => {\n    setloading(true);\n\n    service.get(GET_ALL_SPONSOR).then((response) => {\n      setloading(false);\n      console.log(response);\n      setCategoryList(response);\n    });\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const onFinish = (values) => {\n    setloading(true);\n    //formData.append(\"picture\", file);\n    //  console.log(file);\n    service\n      .post(ADD_QUESTION, {\n        game_id: props.match.params.id,\n        text: values.text,\n        sponsor_id: values.sponsor_id,\n      })\n\n      .then((data) => {\n        if (data.id) {\n          // history.push(\"/app/questions/gameid/\" + props.match.params.id);\n          history.goBack();\n          message.success(\"Successfully Done :) \");\n        } else {\n          message.error(data.message);\n        }\n      })\n\n      .catch((e) => {\n        message.error(\n          \"Unable to load  ! Please check your internet or Server \"\n        );\n      })\n      .finally(() => {\n        setloading(false);\n      });\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Form\n      {...layout}\n      name=\"AddQuestion\"\n      initialValues={{\n        remember: true,\n      }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <br></br>\n      <Typography>\n        <Title>Add Question</Title>\n      </Typography>\n      <br></br>\n      <br></br>\n\n      <Form.Item\n        label=\" Sponser\"\n        name=\"sponsor_id\"\n        rules={[\n          {\n            required: true,\n            message: \"Please select Sponser !\",\n          },\n        ]}\n      >\n        <Select\n          defaultValue=\"Choose\"\n          style={{ width: 120 }}\n          onChange={handleChange}\n        >\n          {categorytList.map((category) => (\n            <Option value={category.id}>{category.name}</Option>\n          ))}\n        </Select>\n      </Form.Item>\n\n      <Form.Item\n        label=\" Text\"\n        name=\"text\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input a Question text !\",\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport class AddQuestion extends Component {\n  render() {\n    return <Demo {...this.props} />;\n  }\n}\n\nexport default AddQuestion;\n"]},"metadata":{},"sourceType":"module"}