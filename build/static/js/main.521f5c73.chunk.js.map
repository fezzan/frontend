{"version":3,"sources":["components/shared-components/Flex/index.js","constants/ThemeConstant.js","redux/reducers/Auth.js","redux/constants/Theme.js","redux/reducers/Theme.js","redux/reducers/index.js","redux/store/index.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","utils/index.js","redux/actions/Theme.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/shared-components/Loading/index.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/shared-components/ColorPicker/index.js","components/layout-components/NavLanguage.js","components/layout-components/ThemeConfigurator.js","components/layout-components/NavPanel.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","views/app-views/index.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/entries/en_US.js","lang/entries/zh_CN.js","lang/entries/fr_FR.js","lang/index.js","lang/entries/ja_JP.js","views/index.js","App.js","serviceWorker.js","index.js","redux/constants/Auth.js","configs/AppConfig.js"],"names":["Flex","props","children","className","alignItems","justifyContent","mobileFlex","flexDirection","defaultProps","SIDE_NAV_WIDTH","SIDE_NAV_COLLAPSED_WIDTH","SIDE_NAV_LIGHT","SIDE_NAV_DARK","NAV_TYPE_SIDE","NAV_TYPE_TOP","initState","loading","message","showMessage","redirect","token","localStorage","getItem","AUTH_TOKEN","auth","state","action","type","AUTHENTICATED","SHOW_AUTH_MESSAGE","HIDE_AUTH_MESSAGE","SIGNOUT_SUCCESS","SIGNUP_SUCCESS","SHOW_LOADING","SIGNIN_WITH_GOOGLE_AUTHENTICATED","SIGNIN_WITH_FACEBOOK_AUTHENTICATED","TOGGLE_COLLAPSED_NAV","CHANGE_LOCALE","SIDE_NAV_STYLE_CHANGE","NAV_TYPE_CHANGE","TOP_NAV_COLOR_CHANGE","HEADER_NAV_COLOR_CHANGE","TOGGLE_MOBILE_NAV","SWITCH_THEME","initTheme","THEME_CONFIG","theme","navCollapsed","sideNavTheme","locale","navType","topNavColor","headerNavColor","mobileNav","currentTheme","reducers","combineReducers","Theme","Auth","preloadedState","store","createStore","injectIntl","withRef","Icon","this","React","createElement","Component","dashBoardNavTree","key","path","APP_PREFIX_PATH","title","icon","DashboardOutlined","breadcrumb","submenu","BankOutlined","DollarCircleOutlined","ProfileOutlined","UnorderedListOutlined","DribbbleOutlined","UserOutlined","InteractionOutlined","CarryOutOutlined","OrderedListOutlined","navigationConfig","Utils","name","initials","match","shift","pop","toUpperCase","navTree","route","p","hasOwnProperty","getRouteInfo","hex","cutHex","h","charAt","substring","parseInt","hexToG","hexToB","color","percent","R","G","B","RR","toString","length","GG","BB","rgba","trim","str","replace","inParts","indexOf","split","r","g","b","a","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","number","positive","negative","toLowerCase","list","value","data","filter","item","input","searchText","screens","breakpoints","push","toggleCollapsedNav","onMobileNavToggle","SubMenu","Menu","useBreakpoint","Grid","setLocale","isLocaleOn","localeKey","id","setDefaultOpen","keyList","keyString","arr","index","elm","SideNavContent","routeInfo","hideGroupTitle","localization","isMobile","utils","getBreakPoint","includes","closeMobileNav","mode","style","height","borderRight","defaultSelectedKeys","defaultOpenKeys","map","menu","ItemGroup","subMenuFirst","subMenuSecond","Item","onClick","to","TopNavContent","backgroundColor","popupClassName","connect","Sider","Layout","width","collapsed","autoHide","getColorContrast","LoadingOutlined","fontSize","spin","Loading","align","cover","indicator","getLogoWidthGutter","isNavTop","mobileLogo","getLogo","logoType","getLogoDisplay","objectFit","src","alt","APP_NAME","onClose","placement","closable","visible","bodyStyle","padding","ArrowLeftOutlined","ColorPicker","colorChange","useState","setVisible","pickerColor","setPickerColor","boxColor","setBoxColor","useEffect","onPickerDropdown","onChange","rgb","SelectedLanguage","language","lang","langId","getLanguageDetail","langName","maxWidth","DownOutlined","onLocaleChange","configDisplay","languageOption","CheckOutlined","overlay","trigger","href","e","preventDefault","GlobalOutlined","colorOptions","ListOption","selector","disabled","vertical","mapDispatchToProps","onNavTypeChange","onNavStyleChange","onTopNavColorChange","onHeaderNavColorChange","onSwitchTheme","configState","isCollapse","useThemeSwitcher","switcher","themes","rgbaToHex","Group","size","target","Button","checked","isChecked","changedTheme","text","JSON","stringify","onCopy","success","CopyOutlined","block","NavPanel","showDrawer","setState","SettingOutlined","optionList","getOptionList","navigationTree","optionTree","navItem","getCategoryIcon","category","AppstoreOutlined","AntDesignOutlined","FileTextOutlined","SearchInput","active","close","setValue","options","setOptions","inputRef","useRef","current","focus","ref","dropdownClassName","onSelect","onSearch","label","filterOption","inputValue","option","placeholder","prefix","SearchOutlined","CloseOutlined","Header","searchActive","setSearchActive","onSearchClose","navMode","MenuUnfoldOutlined","MenuFoldOutlined","breadcrumbData","assignBreadcrumb","obj","BreadcrumbRoute","withRouter","pathSnippets","location","pathname","buildBreadcrumb","_","url","slice","AppBreadcrumb","PageHeader","display","Footer","Date","getFullYear","AppViews","fallback","component","lazy","exact","memo","Content","AppLayout","currentRouteInfo","isNavSide","status","paddingLeft","AUTH_PREFIX_PATH","from","AuthLayout","AuthViews","EnLang","antd","antdEnUS","messages","enMsg","ZhLang","antdZhCn","zhMsg","FrLang","antdFrFR","frMsg","AppLocale","en","enLang","zh","zhLang","fr","frLang","ja","antdJaJP","jaMsg","currentAppLocale","dark","process","light","App","themeMap","defaultTheme","insertionPoint","Views","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","SIGNIN","SIGNOUT","SIGNUP","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_FACEBOOK","API_BASE_URL","BACKENDPORT","IMAGE_BASE_URL"],"mappings":"8GAGMA,G,KAAO,SAAAC,GAAU,IACdC,EAA+ED,EAA/EC,SAAUC,EAAqEF,EAArEE,UAAWC,EAA0DH,EAA1DG,WAAYC,EAA8CJ,EAA9CI,eAAgBC,EAA8BL,EAA9BK,WAAYC,EAAkBN,EAAlBM,cAErE,OACC,qBAAKJ,UAAS,UAFiBG,EAAa,SAAW,YAEzC,YAA4BH,EAA5B,YAAyCI,EAAe,QAAUA,EAAgB,GAAlF,YAAwFH,EAAY,eAAiBA,EAAY,GAAjI,YAAuIC,EAAgB,mBAAqBA,EAAgB,IAA1M,SACEH,MAaJF,EAAKQ,aAAe,CACnBF,YAAY,EACZC,cAAe,MACfJ,UAAW,IAIGH,O,gUC5Bf,4MAAO,IACMS,EAAiB,IACjBC,EAA2B,GAC3BC,EAAiB,iBACjBC,EAAgB,gBAChBC,EAAgB,OAChBC,EAAe,O,s5tBCMtBC,EAAY,CAChBC,SAAS,EACTC,QAAS,GACTC,aAAa,EACbC,SAAU,GACVC,MAAOC,aAAaC,QAAQC,MAiEfC,EA9DF,WAAgC,IAA/BC,EAA8B,uDAAtBV,EAAWW,EAAW,uCAC3C,OAAQA,EAAOC,MACd,KAAKC,IACJ,OAAO,2BACHH,GADJ,IAECT,SAAS,EACTG,SAAU,IACVC,MAAOM,EAAON,QAEhB,KAAKS,IACJ,OAAO,2BACHJ,GADJ,IAECR,QAASS,EAAOT,QAChBC,aAAa,EACbF,SAAS,IAEX,KAAKc,IACJ,OAAO,2BACHL,GADJ,IAECR,QAAS,GACTC,aAAa,IAEf,KAAKa,IACJ,OAAO,2BACHN,GADJ,IAECL,MAAO,KACPD,SAAU,IACVH,SAAS,IAGX,KAAKgB,IACJ,OAAO,2BACFP,GADL,IAEET,SAAS,EACTI,MAAOM,EAAON,QAGjB,KAAKa,IACJ,OAAO,2BACHR,GADJ,IAECT,SAAS,IAGX,KAAKkB,IAOL,KAAKC,IACJ,OAAO,2BACHV,GADJ,IAECT,SAAS,EACTI,MAAOM,EAAON,QAGhB,QACC,OAAOK,IC9EGW,EAAuB,uBACvBC,EAAgB,gBAChBC,EAAwB,wBACxBC,EAAkB,kBAClBC,EAAuB,uBACvBC,EAA0B,0BAC1BC,EAAoB,oBACpBC,EAAe,e,OCKtBC,EAAS,eACVC,KAkDUC,EA/CD,WAAgC,IAA/BrB,EAA8B,uDAAtBmB,EAAWlB,EAAW,uCAC3C,OAAQA,EAAOC,MACb,KAAKS,EACH,OAAO,2BACFX,GADL,IAEEsB,aAAcrB,EAAOqB,eAEzB,KAAKT,EACH,OAAO,2BACFb,GADL,IAEEuB,aAActB,EAAOsB,eAEzB,KAAKX,EACH,OAAO,2BACFZ,GADL,IAEEwB,OAAQvB,EAAOuB,SAEnB,KAAKV,EACH,OAAO,2BACFd,GADL,IAEEyB,QAASxB,EAAOwB,UAEpB,KAAKV,EACH,OAAO,2BACFf,GADL,IAEE0B,YAAazB,EAAOyB,cAExB,KAAKV,EACH,OAAO,2BACFhB,GADL,IAEE2B,eAAgB1B,EAAO0B,iBAE3B,KAAKV,EACH,OAAO,2BACFjB,GADL,IAEE4B,UAAW3B,EAAO2B,YAEtB,KAAKV,EACH,OAAO,2BACFlB,GADL,IAEE6B,aAAc5B,EAAO4B,eAEzB,QACE,OAAO7B,IClDE8B,EALEC,YAAgB,CAC7BV,MAAOW,EACPjC,KAAMkC,ICIV,IANwBC,EAQTC,EAPEC,YAAYN,EAAUI,G,8ECDxBG,eADK,SAAA7D,GAAK,OAAI,cAAC,IAAD,eAAsBA,MACZ,CACrC8D,SAAS,I,gCCMIC,EATf,uKACW,IAAD,EACqBC,KAAKhE,MAA1B0B,EADA,EACAA,KAAMxB,EADN,EACMA,UACd,OACC,mCAAG+D,IAAMC,cAAcxC,EAAM,CAAExB,UAAWA,UAJ7C,GAA0BiE,a,0FCIpBC,EAAmB,CACvB,CACEC,IAAK,OACLC,KAAK,GAAD,OAAKC,IAAL,SACJC,MAAO,OACPC,KAAMC,IACNC,YAAY,EACZC,QAAS,IAGX,CACEP,IAAK,UACLC,KAAK,GAAD,OAAKC,IAAL,YACJC,MAAO,UACPC,KAAMI,IACNF,YAAY,EACZC,QAAS,IAGX,CACEP,IAAK,UACLC,KAAK,GAAD,OAAKC,IAAL,YACJC,MAAO,UACPC,KAAMK,IACNH,YAAY,EACZC,QAAS,IAGX,CACEP,IAAK,OACLC,KAAK,GAAD,OAAKC,IAAL,SACJC,MAAO,OACPC,KAAMM,IACNJ,YAAY,EACZC,QAAS,IAGX,CACEP,IAAK,WACLC,KAAK,GAAD,OAAKC,IAAL,aACJC,MAAO,WACPC,KAAMO,IACNL,YAAY,EACZC,QAAS,IAGX,CACEP,IAAK,aACLC,KAAK,GAAD,OAAKC,IAAL,eACJC,MAAO,aACPC,KAAMQ,IACNN,YAAY,EACZC,QAAS,IAKX,CACEP,IAAK,OACLC,KAAK,GAAD,OAAKC,IAAL,SACJC,MAAO,QACPC,KAAMS,IACNP,YAAY,EACZC,QAAS,IAGX,CACEP,IAAK,WACLC,KAAK,GAAD,OAAKC,IAAL,aACJC,MAAO,WACPC,KAAMU,IACNR,YAAY,EACZC,QAAS,IAGX,CACEP,IAAK,QACLC,KAAK,GAAD,OAAKC,IAAL,kBACJC,MAAO,QACPC,KAAMW,IACNT,YAAY,EACZC,QAAS,IAIX,CACEP,IAAK,SACLC,KAAK,GAAD,OAAKC,IAAL,WACJC,MAAO,SACPC,KAAMY,IACNV,YAAY,EACZC,QAAS,KAWEU,GAFO,UAAOlB,GC6GdmB,G,4GAhNQC,GACrB,IAAIC,EAAWD,EAAKE,MAAM,UAAY,GACtC,QAASD,EAASE,SAAW,KAAOF,EAASG,OAAS,KAAKC,gB,mCASxCC,EAASxB,GAC5B,GAAIwB,EAAQxB,OAASA,EACnB,OAAOwB,EAET,IAAIC,EACJ,IAAK,IAAIC,KAAKF,EACZ,GAAIA,EAAQG,eAAeD,IAA4B,kBAAfF,EAAQE,KAChDD,EAAQ/B,KAAKkC,aAAaJ,EAAQE,GAAI1B,IAErC,OAAOyB,EAIV,OAAOA,I,uCAQgBI,GACvB,IAAIA,EACH,MAAO,OASR,SAASC,EAAOC,GAAI,MAAwB,MAAhBA,EAAEC,OAAO,GAAcD,EAAEE,UAAU,EAAE,GAAGF,EAEpE,OAD6B,IAJFG,SAAUJ,EAHjBD,GAG4BI,UAAU,EAAE,GAAG,IAIjB,IAH9C,SAAgBF,GAAI,OAAOG,SAAUJ,EAAOC,GAAIE,UAAU,EAAE,GAAG,IAHhDE,CAAON,GAMwC,IAF9D,SAAgBE,GAAI,OAAOG,SAAUJ,EAAOC,GAAIE,UAAU,EAAE,GAAG,IAHjDG,CAAOP,IAKiD,IARpD,IAUV,OAEA,U,iCAUSQ,EAAOC,GACxB,IAAIC,EAAIL,SAASG,EAAMJ,UAAU,EAAE,GAAG,IAClCO,EAAIN,SAASG,EAAMJ,UAAU,EAAE,GAAG,IAClCQ,EAAIP,SAASG,EAAMJ,UAAU,EAAE,GAAG,IACtCM,EAAIL,SAASK,GAAK,IAAMD,GAAW,KAInCE,GAHAA,EAAIN,SAASM,GAAK,IAAMF,GAAW,MAG5B,IAAKE,EAAE,IACdC,GAHAA,EAAIP,SAASO,GAAK,IAAMH,GAAW,MAG5B,IAAKG,EAAE,IACd,IAAMC,EAAiC,KAHvCH,EAAKA,EAAE,IAAKA,EAAE,KAGCI,SAAS,IAAIC,OAAhB,WAAoCL,EAAEI,SAAS,KAAQJ,EAAEI,SAAS,IACxEE,EAAiC,IAA1BL,EAAEG,SAAS,IAAIC,OAAhB,WAAoCJ,EAAEG,SAAS,KAAQH,EAAEG,SAAS,IACxEG,EAAiC,IAA1BL,EAAEE,SAAS,IAAIC,OAAhB,WAAoCH,EAAEE,SAAS,KAAQF,EAAEE,SAAS,IAC9E,MAAM,IAAN,OAAWD,GAAX,OAAgBG,GAAhB,OAAqBC,K,gCAQLC,GAChB,IAAMC,EAAO,SAAAC,GAAG,OAAKA,EAAIC,QAAQ,cAAc,KACzCC,EAAUJ,EAAKd,UAAUc,EAAKK,QAAQ,MAAMC,MAAM,KACvDC,EAAIpB,SAASc,EAAKG,EAAQ,GAAGlB,UAAU,IAAK,IAC5CsB,EAAIrB,SAASc,EAAKG,EAAQ,IAAK,IAC/BK,EAAItB,SAASc,EAAKG,EAAQ,IAAK,IAC/BM,EAAIC,WAAWV,EAAKG,EAAQ,GAAGlB,UAAU,EAAGkB,EAAQ,GAAGP,OAAS,KAAKe,QAAQ,GACvEC,EAAW,CACjBN,EAAEX,SAAS,IACXY,EAAEZ,SAAS,IACXa,EAAEb,SAAS,IACXkB,KAAKC,MAAU,IAAJL,GAASd,SAAS,IAAIV,UAAU,EAAG,IAQ/C,OALA2B,EAASG,SAAQ,SAAUC,EAAMC,GACZ,IAAhBD,EAAKpB,SACRgB,EAASK,GAAK,IAAMD,MAGhB,IAAN,OAAYJ,EAASM,KAAK,O,iCAUTC,EAAQC,EAAUC,GACnC,OAAIF,EAAS,EACLC,EAEJD,EAAS,EACLE,EAED,O,sCAUeZ,EAAGD,EAAGzD,GAC5B,MAAqB,kBAAX0D,EAAE1D,IAAuC,kBAAXyD,EAAEzD,GAClC0D,EAAE1D,GAAOyD,EAAEzD,GAGE,kBAAX0D,EAAE1D,IAAuC,kBAAXyD,EAAEzD,IACzC0D,EAAIA,EAAE1D,GAAKuE,gBACXd,EAAIA,EAAEzD,GAAKuE,gBACK,EAAId,EAAIC,EAAI,EAAI,OAHjC,I,kCAekBc,EAAMxE,EAAKyE,GAC7B,IAAIC,EAAOF,EAIX,OAHGA,IACFE,EAAOF,EAAKG,QAAO,SAAAC,GAAI,OAAIA,EAAK5E,KAASyE,MAEnCC,I,qCAUcF,EAAMxE,EAAKyE,GAChC,IAAIC,EAAOF,EAIX,OAHGA,IACFE,EAAOF,EAAKG,QAAO,SAAAC,GAAI,OAAIA,EAAK5E,KAASyE,MAEnCC,I,qCAScF,EAAMK,GAY3B,OADAL,EAAOA,EAAKG,QAAO,SAAAF,GAAK,OAVL,SAACG,GACnB,IAAK,IAAI5E,KAAO4E,EACf,GAAiB,MAAbA,EAAK5E,KAG2E,IAAhF4E,EAAK5E,GAAK4C,WAAWpB,cAAc6B,QAAQwB,EAAMjC,WAAWpB,eAC/D,OAAO,EAIkBsD,CAAWL,Q,oCASnBM,GACpB,IAAIC,EAAc,GAClB,IAAK,IAAMhF,KAAO+E,EAAS,CAC1B,GAAIA,EAAQnD,eAAe5B,GACV+E,EAAQ/E,IAEvBgF,EAAYC,KAAKjF,GAIpB,OAAOgF,M,KCxMF,SAASE,GAAmBzG,GACjC,MAAO,CACLpB,KAAMS,EACNW,gBAuCG,SAAS0G,GAAkBpG,GAChC,MAAO,CACL1B,KAAMe,EACNW,a,IC7CIqG,GAAYC,IAAZD,QACAE,GAAkBC,IAAlBD,cAEFE,GAAY,SAACC,EAAYC,GAAb,OAChBD,EAAa,cAAC,EAAD,CAAaE,GAAID,IAAgBA,EAAU9C,YAEpDgD,GAAiB,SAAC5F,GACtB,IAAI6F,EAAU,GACVC,EAAY,GAChB,GAAI9F,EAEF,IADA,IAAM+F,EAAM/F,EAAIsD,MAAM,KACb0C,EAAQ,EAAGA,EAAQD,EAAIlD,OAAQmD,IAAS,CAC/C,IAAMC,EAAMF,EAAIC,GACDF,EAAL,IAAVE,EAA2BC,EAAiB,UAAMH,EAAN,YAAmBG,GAC/DJ,EAAQZ,KAAKa,GAGjB,OAAOD,GAGHK,GAAiB,SAACvK,GAAW,IAC1B+C,EAA6E/C,EAA7E+C,aAAcyH,EAA+DxK,EAA/DwK,UAAWC,EAAoDzK,EAApDyK,eAAgBC,EAAoC1K,EAApC0K,aAAclB,EAAsBxJ,EAAtBwJ,kBACzDmB,GAAYC,GAAMC,cAAclB,MAAiBmB,SAAS,MAC1DC,EAAiB,WAClBJ,GACHnB,GAAkB,IAGnB,OACE,cAAC,IAAD,CACE3G,MAAOE,IAAiBrC,IAAiB,QAAU,OACnDsK,KAAK,SACLC,MAAO,CAAEC,OAAQ,OAAQC,YAAa,GACtCC,oBAAqB,QAACZ,QAAD,IAACA,OAAD,EAACA,EAAWnG,KACjCgH,gBAAiBpB,GAAc,OAACO,QAAD,IAACA,OAAD,EAACA,EAAWnG,KAC3CnE,UAAWuK,EAAiB,mBAAqB,GANnD,SAQGnF,GAAiBgG,KAAI,SAACC,GAAD,OACpBA,EAAK3G,QAAQsC,OAAS,EACpB,cAAC,IAAKsE,UAAN,CAEEhH,MAAOqF,GAAUa,EAAca,EAAK/G,OAFtC,SAIG+G,EAAK3G,QAAQ0G,KAAI,SAACG,GAAD,OAChBA,EAAa7G,QAAQsC,OAAS,EAC5B,cAACuC,GAAD,CACEhF,KACEgH,EAAahH,KACX,cAAC,EAAD,CAAM/C,KAAI,OAAE+J,QAAF,IAAEA,OAAF,EAAEA,EAAchH,OACxB,KAGND,MAAOqF,GAAUa,EAAce,EAAajH,OAP9C,SASGiH,EAAa7G,QAAQ0G,KAAI,SAACI,GAAD,OACxB,eAAC,IAAKC,KAAN,WACGD,EAAcjH,KACb,cAAC,EAAD,CAAM/C,KAAI,OAAEgK,QAAF,IAAEA,OAAF,EAAEA,EAAejH,OACzB,KACJ,+BACGoF,GAAUa,EAAcgB,EAAclH,SAEzC,cAAC,IAAD,CAAMoH,QAAS,kBAAMb,KAAkBc,GAAIH,EAAcpH,SAP3CoH,EAAcrH,SAJ3BoH,EAAapH,KAgBpB,eAAC,IAAKsH,KAAN,WACGF,EAAahH,KAAO,cAAC,EAAD,CAAM/C,KAAM+J,EAAahH,OAAW,KACzD,+BAAOoF,GAAUa,EAAce,EAAajH,SAC5C,cAAC,IAAD,CAAMoH,QAAS,kBAAMb,KAAkBc,GAAIJ,EAAanH,SAH1CmH,EAAapH,SA3B5BkH,EAAKlH,KAoCZ,eAAC,IAAKsH,KAAN,WACGJ,EAAK9G,KAAO,cAAC,EAAD,CAAM/C,KAAI,OAAE6J,QAAF,IAAEA,OAAF,EAAEA,EAAM9G,OAAW,KAC1C,+BAAOoF,GAAUa,EAAD,OAAea,QAAf,IAAeA,OAAf,EAAeA,EAAM/G,SACpC+G,EAAKjH,KAAO,cAAC,IAAD,CAAMsH,QAAS,kBAAMb,KAAkBc,GAAIN,EAAKjH,OAAW,OAH1DiH,EAAKlH,WAWzByH,GAAgB,SAAC9L,GAAW,IACxBkD,EAA8BlD,EAA9BkD,YAAawH,EAAiB1K,EAAjB0K,aACrB,OACE,cAAC,IAAD,CAAMM,KAAK,aAAaC,MAAO,CAAEc,gBAAiB7I,GAAlD,SACGoC,GAAiBgG,KAAI,SAACC,GAAD,OACpBA,EAAK3G,QAAQsC,OAAS,EACpB,cAACuC,GAAD,CAEEuC,eAAe,eACfxH,MACE,iCACG+G,EAAK9G,KAAO,cAAC,EAAD,CAAM/C,KAAI,OAAE6J,QAAF,IAAEA,OAAF,EAAEA,EAAM9G,OAAW,KAC1C,+BAAOoF,GAAUa,EAAca,EAAK/G,YAN1C,SAUG+G,EAAK3G,QAAQ0G,KAAI,SAACG,GAAD,OAChBA,EAAa7G,QAAQsC,OAAS,EAC5B,cAACuC,GAAD,CAEEhF,KACEgH,EAAahH,KACX,cAAC,EAAD,CAAM/C,KAAI,OAAE+J,QAAF,IAAEA,OAAF,EAAEA,EAAchH,OACxB,KAEND,MAAOqF,GAAUa,EAAce,EAAajH,OAP9C,SASGiH,EAAa7G,QAAQ0G,KAAI,SAACI,GAAD,OACxB,eAAC,IAAKC,KAAN,WACE,+BACG9B,GAAUa,EAAcgB,EAAclH,SAEzC,cAAC,IAAD,CAAMqH,GAAIH,EAAcpH,SAJVoH,EAAcrH,SAT3BoH,EAAapH,KAkBpB,eAAC,IAAKsH,KAAN,WACGF,EAAahH,KACZ,cAAC,EAAD,CAAM/C,KAAI,OAAE+J,QAAF,IAAEA,OAAF,EAAEA,EAAchH,OACxB,KACJ,+BAAOoF,GAAUa,EAAce,EAAajH,SAC5C,cAAC,IAAD,CAAMqH,GAAIJ,EAAanH,SALTmH,EAAapH,SA9B5BkH,EAAKlH,KAyCZ,eAAC,IAAKsH,KAAN,WACGJ,EAAK9G,KAAO,cAAC,EAAD,CAAM/C,KAAI,OAAE6J,QAAF,IAAEA,OAAF,EAAEA,EAAM9G,OAAW,KAC1C,+BAAOoF,GAAUa,EAAD,OAAea,QAAf,IAAeA,OAAf,EAAeA,EAAM/G,SACpC+G,EAAKjH,KAAO,cAAC,IAAD,CAAMuH,GAAIN,EAAKjH,OAAW,OAHzBiH,EAAKlH,WAwBhB4H,gBALS,SAAC,GAAe,IAAbpJ,EAAY,EAAZA,MAEzB,MAAO,CAAEE,aAD6BF,EAA9BE,aACeG,YADeL,EAAhBK,eAIgB,CAAEsG,sBAA3ByC,EAbK,SAACjM,GACnB,OAAOA,EAAM0B,OAASd,IACpB,cAAC,GAAD,eAAoBZ,IAEpB,cAAC,GAAD,eAAmBA,OC1JfkM,GAAUC,IAAVD,MAyBOD,gBALS,SAAC,GAAe,IAAbpJ,EAAY,EAAZA,MAEzB,MAAO,CAAEC,aAD+BD,EAAhCC,aACeC,aADiBF,EAAlBE,gBAITkJ,EAvBQ,SAAC,GAAmF,IAAlFnJ,EAAiF,EAAjFA,aAAcC,EAAmE,EAAnEA,aAAcyH,EAAqD,EAArDA,UAAWC,EAA0C,EAA1CA,eAA0C,IAA1BC,aACxE1K,EAAQ,CAAE+C,eAAcyH,YAAYC,iBAAgBC,kBAD8C,UAExG,OACE,cAACwB,GAAD,CACEhM,UAAS,mBAAc6C,IAAiBpC,IAAe,gBAAkB,IACzEyL,MAAO5L,IACP6L,UAAWvJ,EAHb,SAKE,cAAC,aAAD,CAAYwJ,UAAQ,EAApB,SACE,cAAC,GAAD,aACE5K,KAAMd,KACFZ,WCKCiM,gBALS,SAAC,GAEvB,MAAO,CAAE/I,YAF4B,EAAZL,MACjBK,eAIK+I,EAnBO,SAAC,GAAwC,IAAvC/I,EAAsC,EAAtCA,YAAsC,IAAzBwH,aAC9B1K,EAAQ,CAAEkD,cAAawH,kBADgC,UAE7D,OACC,qBAAKxK,UAAS,kBAAa0K,GAAM2B,iBAAiBrJ,IAAgB+H,MAAO,CAACc,gBAAiB7I,GAA3F,SACC,qBAAKhD,UAAU,kBAAf,SACC,cAAC,GAAD,aACCwB,KAAMb,KACFb,W,mBCRH+D,GAAO,cAACyI,GAAA,EAAD,CAAiBvB,MAAO,CAAEwB,SAAU,IAAMC,MAAI,IAErDC,GAAU,SAAC3M,GAAW,IACnB4M,EAAiB5M,EAAjB4M,MAAOC,EAAU7M,EAAV6M,MACf,OACC,qBAAK3M,UAAS,uBAAkB0M,EAAlB,kBAAiCC,GAA/C,SACC,cAAC,KAAD,CAAMC,UAAW/I,QAUpB4I,GAAQpM,aAAe,CACtBqM,MAAO,SACPC,MAAO,UAGOF,U,UCnBPhD,GAAkBC,IAAlBD,cAEFoD,GAAqB,SAAC/M,EAAO2K,GAAc,IACvC7H,EAA0B9C,EAA1B8C,aACFkK,EAD4BhN,EAAZiD,UACOpC,IAC7B,OAAG8J,IAAa3K,EAAMiN,WACb,EAEND,EACM,OAGD,GAAN,OADClK,EACSrC,IAEAD,IAFV,OAME0M,GAAU,SAAClN,GAAW,IAClB8C,EAA2B9C,EAA3B8C,aAA2B9C,EAAbmN,SACtB,OACKrK,EACO,sBAGH,mBASLsK,GAAiB,SAACzC,EAAUsC,GAChC,OAAGtC,IAAasC,EACP,SAEA,QAoBIhB,gBALS,SAAC,GAAe,IAAbpJ,EAAY,EAAZA,MAEzB,MAAO,CAAEC,aAD0BD,EAA3BC,aACeG,QADYJ,EAAbI,WAITgJ,EAhBK,SAACjM,GACnB,IAAM2K,GAAYC,GAAMC,cAAclB,MAAiBmB,SAAS,MAChE,OACE,qBACE5K,UAAWkN,GAAezC,EAAU3K,EAAMiN,YAC1ChC,MAAO,CAACmB,MAAM,GAAD,OAAKW,GAAmB/M,EAAO2K,IAAYoB,gBAAgB,mBAF1E,SAGE,qBAAMd,MAAO,CAACmB,MAAM,OAAOlB,OAAO,OAAOmC,UAAU,WAAYC,IAAKJ,GAAQlN,GAAQuN,IAAG,UAAKC,IAAL,gB,oBCA9EvB,gBALS,SAAC,GAAe,IAAbpJ,EAAY,EAAZA,MAEzB,MAAO,CAAEC,aADyCD,EAA1CC,aACeC,aAD2BF,EAA5BE,aACeK,UADaP,EAAdO,aAIE,CAAEoG,sBAA3ByC,EA5CU,SAAC,GAOnB,IANLlJ,EAMI,EANJA,aACAK,EAKI,EALJA,UACAoG,EAII,EAJJA,kBACAgB,EAGI,EAHJA,UACAC,EAEI,EAFJA,eAEI,IADJC,aAEM1K,EAAQ,CAAE+C,eAAcyH,YAAWC,iBAAgBC,kBADrD,UAGE+C,EAAU,WACdjE,GAAkB,IAGpB,OACE,cAAC,KAAD,CACEkE,UAAU,OACVC,UAAU,EACVF,QAASA,EACTG,QAASxK,EACTyK,UAAW,CAAEC,QAAS,GALxB,SAOE,eAAC/N,GAAA,EAAD,CAAMO,cAAc,SAASJ,UAAU,QAAvC,UACE,eAACH,GAAA,EAAD,CAAMK,eAAe,UAAUD,WAAW,SAA1C,UACE,cAAC,GAAD,CAAM8M,YAAY,IAClB,qBAAK/M,UAAU,YAAY0L,QAAS,kBAAM6B,KAA1C,SACE,cAACM,GAAA,EAAD,SAGJ,qBAAK7N,UAAU,kBAAf,SACE,cAAC,aAAD,CAAYoM,UAAQ,EAApB,SACE,cAAC,GAAD,aAAa5K,KAAMd,KAAmBZ,gB,kGCUnCgO,GAhDK,SAAAhO,GAAU,IAErBiO,EAA0BjO,EAA1BiO,YAFoB,EAEMjO,EAAb2G,aAFO,MAED,GAFC,IAIEuH,oBAAS,GAJX,oBAIrBN,EAJqB,KAIZO,EAJY,OAKUD,mBAASvH,GALnB,oBAKrByH,EALqB,KAKRC,EALQ,OAMIH,mBAASvH,GANb,oBAMrB2H,EANqB,KAMXC,EANW,KAQ5BC,qBAAU,WACTD,EAAY5H,GACZ0H,EAAe1H,KACb,CAACA,IAEJ,IAAM8H,EAAmB,WACxBN,GAAYP,IAWb,OACC,sBAAK1N,UAAU,eAAf,UACC,qBAAKA,UAAU,wBAAf,SACC,qBAAKA,UAAU,QAAQ+K,MAAO,CAACc,gBAAiBuC,GAAsB,WAAY1C,QAAS6C,MAG3Fb,GACC,qCACC,qBAAK1N,UAAU,wBAAwB0L,QAAS6C,IAChD,cAAC,KAAD,CAAc9H,MAAOyH,EAAaM,SAjBjB,SAAC5F,GAAW,IAC1B6F,EAAO7F,EAAP6F,IACDtH,EAAI,cAAUsH,EAAI/G,EAAd,aAAoB+G,EAAI9G,EAAxB,aAA8B8G,EAAI7G,EAAlC,aAAwC6G,EAAI5G,EAA5C,KACVwG,EAAYlH,GACZgH,EAAeM,GACfV,EAAYnF,a,uECdd,IAAM8F,GAAmB,SAAC,GAAgB,IACnCC,EANP,SAA4B7L,GAE3B,OADa8L,GAAK9F,QAAO,SAAAsB,GAAG,OAAKA,EAAIyE,SAAW/L,KACpC,GAIKgM,CADuB,EAAbhM,QAEpBiM,EAAkBJ,EAAlBI,SAAUxK,EAAQoK,EAARpK,KACjB,OACC,sBAAKvE,UAAU,4BAAf,UACC,qBAAK+K,MAAO,CAACiE,SAAU,QAAS5B,IAAG,qBAAgB7I,EAAhB,QAA4B8I,IAAK0B,IACpE,uBAAM/O,UAAU,4BAAhB,UAA6C+O,EAA7C,IAAuD,cAACE,GAAA,EAAD,CAAcjP,UAAU,wBAwDnE+L,gBALS,SAAC,GAEvB,MAAO,CAAEjJ,OAF4B,EAAZH,MACjBG,UAI8B,CAACoM,eRjDlC,SAAwBpM,GAC7B,MAAO,CACLtB,KAAMU,EACNY,YQ8CWiJ,EAnDY,SAAC,GAA+C,IAA7CjJ,EAA4C,EAA5CA,OAAQqM,EAAoC,EAApCA,cAAeD,EAAqB,EAArBA,eAC9CE,EACL,cAAC,IAAD,UAEER,GAAKxD,KAAI,SAAChB,EAAK/B,GAAO,OACrB,cAAC,IAAKoD,KAAN,CAECzL,UAAW8C,IAAWsH,EAAIyE,OAAQ,gCAAiC,GACnEnD,QAAS,kBAAMwD,EAAe9E,EAAIyE,SAHnC,SAKC,uBAAM7O,UAAU,oDAAhB,UACC,gCACC,qBAAK+K,MAAO,CAACiE,SAAU,QAAS5B,IAAG,qBAAgBhD,EAAI7F,KAApB,QAAgC8I,IAAKjD,EAAI2E,WAC5E,sBAAM/O,UAAU,0BAAhB,SAA2CoK,EAAI2E,cAE/CjM,IAAWsH,EAAIyE,OAAQ,cAACQ,GAAA,EAAD,CAAerP,UAAU,iBAAoB,SATjEqI,QAgBV,OACC,cAAC,KAAD,CAAUmF,UAAU,cAAc8B,QAASF,EAAgBG,QAAS,CAAC,SAArE,SAEEJ,EAEC,mBAAGK,KAAK,KAAKxP,UAAU,YAAY0L,QAAS,SAAA+D,GAAC,OAAIA,EAAEC,kBAAnD,SACC,cAAC,GAAD,CAAkB5M,OAAQA,MAK3B,cAAC,IAAD,CAAMgI,KAAK,aAAX,SACC,cAAC,IAAKW,KAAN,UACC,mBAAG+D,KAAK,KAAK9D,QAAS,SAAA+D,GAAC,OAAIA,EAAEC,kBAA7B,SACC,cAACC,GAAA,EAAD,CAAgB3P,UAAU,6B,SCnC5B4P,GAAe,CACpB,UACA,UACA,UACA,UACA,WAGKC,GAAa,SAAC,GAAD,IAAEvK,EAAF,EAAEA,KAAMwK,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAAUC,EAA5B,EAA4BA,SAA5B,OAClB,sBAAKhQ,UAAS,eAAUgQ,EAAU,GAAK,qDAAvC,UACC,qBAAKhQ,UAAS,UAAK+P,EAAW,cAAgB,GAAhC,YAAsCC,EAAU,OAAS,IAAvE,SAA8E1K,IAC9E,8BAAMwK,QAyJFG,GAAqB,CAC1B5G,sBACA6G,gBT9JM,SAAyBnN,GAC9B,MAAO,CACLvB,KAAMY,EACNW,YS4JHoN,iBT7KM,SAA0BtN,GAC/B,MAAO,CACLrB,KAAMW,EACNU,iBS2KHuN,oBTzJM,SAA6BpN,GAClC,MAAO,CACLxB,KAAMa,EACNW,gBSuJHqN,uBTnJM,SAAgCpN,GACrC,MAAO,CACLzB,KAAMc,EACNW,mBSiJHqN,cTtIM,SAAuBnN,GAC5B,MAAO,CACL3B,KAAMgB,EACNW,kBSsIW4I,gBAdS,SAAC,GAAe,IAAbpJ,EAAY,EAAZA,MAEzB,MAAO,CAAEI,QAD2FJ,EAA5FI,QACUF,aADkFF,EAAnFE,aACeD,aADoED,EAArEC,aACeI,YADsDL,EAAvDK,YACcC,eADyCN,EAA1CM,eACiBH,OADyBH,EAA1BG,OACSK,aADiBR,EAAlBQ,gBAa5C8M,GAAzBlE,EA9JkB,SAAC,GAc3B,IAoCsBwE,EAjD5BxN,EAaK,EAbLA,QACAF,EAYK,EAZLA,aACAD,EAWK,EAXLA,aACAI,EAUK,EAVLA,YACAC,EASK,EATLA,eACAH,EAQK,EARLA,OACAK,EAOK,EAPLA,aACAkG,EAMK,EANLA,mBACA6G,EAKK,EALLA,gBACAC,EAIK,EAJLA,iBACAC,EAGK,EAHLA,oBACAC,EAEK,EAFLA,uBACAC,EACK,EADLA,cAEMxD,EAAW/J,IAAYpC,IACvB6P,EAAa5N,EAFd,EAIwB6N,8BAArBC,EAJH,EAIGA,SAAUC,EAJb,EAIaA,OAkClB,OACC,qCACC,sBAAK3Q,UAAU,OAAf,UACC,oBAAIA,UAAU,wBAAd,wBAEC8M,EACA,cAAC,GAAD,CACCxH,KAAK,iBACL0K,UAAQ,EACRF,SACC,cAAC,GAAD,CAAarJ,MAAOzD,EAAa+K,YAnCZ,SAACnF,GAC3ByH,EAAuB,IADc,IAE7B5B,EAAQ7F,EAAR6F,IACFtH,EAAI,eAAWsH,EAAI/G,EAAf,aAAqB+G,EAAI9G,EAAzB,aAA+B8G,EAAI7G,EAAnC,aAAyC6G,EAAI5G,EAA7C,KACJ5B,EAAMyE,GAAMkG,UAAUzJ,GAC5BiJ,EAAoBnK,QAkCjB,cAAC,GAAD,CACCX,KAAK,oBACL0K,UAAQ,EACRF,SACC,cAAC,GAAD,CAAarJ,MAAOxD,EAAgB8K,YApCZ,SAACnF,GAAW,IACjC6F,EAAQ7F,EAAR6F,IACFtH,EAAI,eAAWsH,EAAI/G,EAAf,aAAqB+G,EAAI9G,EAAzB,aAA+B8G,EAAI7G,EAAnC,aAAyC6G,EAAI5G,EAA7C,KACJ5B,EAAMyE,GAAMkG,UAAUzJ,GAC5BkJ,EAAuBpK,QAqCrB,cAAC,GAAD,CACCX,KAAK,mBACLwK,SACC,eAAC,KAAMe,MAAP,CACCC,KAAK,QACLtC,SAAU,SAAAiB,GAAC,OAvCO7G,EAuCY6G,EAAEsB,OAAOnI,MAtC5CyH,EAAuB,IACpBzH,IAAUjI,MACZyP,EAAoBR,GAAa,IACjCvG,GAAmB,SAEpB6G,EAAgBtH,GANM,IAACA,GAwClBA,MAAO7F,EAHR,UAKC,cAAC,KAAMiO,OAAP,CAAcpI,MAAOlI,IAArB,kBACA,cAAC,KAAMsQ,OAAP,CAAcpI,MAAOjI,IAArB,sBAIH,cAAC,GAAD,CACC2E,KAAK,kBACLwK,SACC,eAAC,KAAMe,MAAP,CACCd,SAAUjD,EACVgE,KAAK,QACLtC,SAAU,SAAAiB,GAAC,OAAIU,EAAiBV,EAAEsB,OAAOnI,QACzCA,MAAO/F,EAJR,UAMC,cAAC,KAAMmO,OAAP,CAAcpI,MAAOpI,IAArB,mBACA,cAAC,KAAMwQ,OAAP,CAAcpI,MAAOnI,IAArB,qBAGFsP,SAAUjD,IAEX,cAAC,GAAD,CACCxH,KAAK,qBACLwK,SACC,cAAC,KAAD,CACCC,SAAUjD,EACVmE,QAAST,EACThC,SAAU,kBAAMnF,GAAoBzG,MAGtCmN,SAAUjD,IAEX,cAAC,GAAD,CACCxH,KAAK,cACLwK,SACC,cAAC,KAAD,CAAQmB,QAA0B,SAAjB9N,EAAyBqL,SAjG3B,SAAC0C,GACpBb,EAAuB,IACvB,IAAMc,EAAeD,EAAY,OAAS,QAC1CZ,EAAca,GACZT,EAAS,CAAE/N,MAAOgO,EAAOQ,aAiG1B,sBAAKnR,UAAU,OAAf,UACC,oBAAIA,UAAU,wBAAd,oBACA,cAAC,GAAD,CACCsF,KAAK,YACLwK,SACC,cAAC,GAAD,CAAaX,eAAa,SAI7B,8BACC,cAAC,KAAD,CACCiC,MAlFwBb,EAkFC,CAAExN,UAASF,eAAcD,eAAcI,cAAaC,iBAAgBH,SAAQK,gBAlF7DkO,KAAKC,UAAUf,EAAa,KAAM,IAmF1EgB,OAAQ,kBAAMzQ,KAAQ0Q,QAAQ,qFAF/B,SAIC,cAAC,KAAD,CAAQjN,KAAM,cAACkN,GAAA,EAAD,IAAmBC,OAAK,EAAtC,SACC,4DCzKOC,GAAb,4MACCrQ,MAAQ,CAAEoM,SAAS,GADpB,EAGEkE,WAAa,WACX,EAAKC,SAAS,CACZnE,SAAS,KALf,EASEH,QAAU,WACR,EAAKsE,SAAS,CACZnE,SAAS,KAXf,uDAgBE,OACI,qCACE,cAAC,IAAD,CAAM5C,KAAK,aAAX,SACE,cAAC,IAAKW,KAAN,CAAWC,QAAS5H,KAAK8N,WAAzB,SACE,cAACE,GAAA,EAAD,CAAiB9R,UAAU,sBAG/B,cAAC,KAAD,CACEsE,MAAM,eACNkJ,UAAU,QACVtB,MAAO,IACPqB,QAASzJ,KAAKyJ,QACdG,QAAS5J,KAAKxC,MAAMoM,QALtB,SAOE,cAAC,GAAD,aA9BV,GAA8BzJ,aA0Cf8H,gBALS,SAAC,GAEvB,MAAO,CAAEjJ,OAF4B,EAAZH,MACjBG,UAIKiJ,CAAyB4F,I,+ECtBxC,IAAMI,GAbN,SAASC,EAAeC,EAAgBC,GACvCA,EAAaA,GAA0B,GADY,qBAE5BD,GAF4B,IAEnD,2BAAwC,CAAC,IAA7BE,EAA4B,QACT,IAA3BA,EAAQzN,QAAQsC,QAClBkL,EAAW9I,KAAK+I,GAEdA,EAAQzN,QAAQsC,OAAS,GAC3BgL,EAAcG,EAAQzN,QAASwN,IAPkB,8BAUnD,OAAOA,EAGWF,CAAc5M,IAE3BgN,GAAkB,SAAAC,GACvB,OAAQA,GACP,IAAK,aACJ,OAAO,cAAC7N,EAAA,EAAD,CAAmBxE,UAAU,iBACrC,IAAK,OACJ,OAAO,cAACsS,GAAA,EAAD,CAAkBtS,UAAU,gBACpC,IAAK,aACJ,OAAO,cAACuS,GAAA,EAAD,CAAmBvS,UAAU,iBACrC,IAAK,QACJ,OAAO,cAACwS,GAAA,EAAD,CAAkBxS,UAAU,iBACpC,QACC,OAAO,OAqEKyS,GA7CK,SAAA3S,GAAU,IACrB4S,EAAkC5S,EAAlC4S,OAAQC,EAA0B7S,EAA1B6S,MAAOlI,EAAmB3K,EAAnB2K,SAAUK,EAAShL,EAATgL,KADL,EAEFkD,mBAAS,IAFP,oBAErBpF,EAFqB,KAEdgK,EAFc,OAGE5E,mBAAS,IAHX,oBAGrB6E,EAHqB,KAGZC,EAHY,KAItBC,EAAWC,iBAAO,MAuBxB,OAJGN,GAHFK,EAASE,QAAQC,QAQjB,cAAC,KAAD,CACCC,IAAKJ,EACL/S,UAAS,2BAAsByK,EAAU,YAAc,GAA9C,YAA6D,UAATK,EAAmB,QAAU,IAC1FsI,kBAAkB,sBAClBP,QAASA,EACTQ,SA3Be,WAChBT,EAAS,IACTE,EAAW,IACRH,GACFA,KAwBAW,SApBe,SAAArK,GAChB2J,EAAS3J,GACT6J,EAAY7J,EApCa8I,GAAW3G,KAAI,SAACrC,GAC1C,IAAMsJ,EAAWtJ,EAAK5E,IAAIsD,MAAM,KAAK,GACrC,MAAO,CACNmB,MAAOG,EAAK3E,KACZmP,MACC,cAAC,IAAD,CAAM5H,GAAI5C,EAAK3E,KAAf,SACC,sBAAKpE,UAAU,mBAAf,UACC,qBAAKA,UAAU,OAAf,SACEoS,GAAgBC,KAElB,gCACC,qBAAKrS,UAAU,uBAAf,SAAsC,cAAC,EAAD,CAAa8J,GAAIf,EAAKzE,UAC5D,sBAAKtE,UAAU,0BAAf,UAA0CqS,EAA1C,mBAwBqB,KAmBxBzJ,MAAOA,EACP4K,aAAc,SAACC,EAAYC,GAAb,OACqD,IAAlEA,EAAO9K,MAAMjD,cAAc6B,QAAQiM,EAAW9N,gBAThD,SAYC,cAAC,KAAD,CAAOgO,YAAY,YAAaC,OAAQ,cAACC,GAAA,EAAD,CAAgB7T,UAAU,cC1EtD+L,gBALS,SAAC,GAEvB,MAAO,CAAE9I,eAF4B,EAAZN,MACjBM,kBAI8B,GAAzB8I,EArBU,SAACjM,GAAW,IAC5B4S,EAAkC5S,EAAlC4S,OAAQC,EAA0B7S,EAA1B6S,MAAO1P,EAAmBnD,EAAnBmD,eACjB6H,EAAOJ,GAAM2B,iBAAiBpJ,GAEpC,OACC,sBAAKjD,UAAS,qBAAgB0S,EAAS,oBAAsB,GAA/C,YAAqD5H,GAAQC,MAAO,CAACc,gBAAiB5I,GAApG,UACC,qBAAKjD,UAAU,kCAAf,SACC,cAAC,GAAD,CAAa2S,MAAOA,EAAOD,OAAQA,MAEpC,qBAAK1S,UAAU,YAAY0L,QAASiH,EAApC,SACC,cAACmB,GAAA,EAAD,YCLIC,GAAW9H,IAAX8H,OA4EOhI,gBALS,SAAC,GAAe,IAAbpJ,EAAY,EAAZA,MAEzB,MAAO,CAAEC,aADmED,EAApEC,aACeG,QADqDJ,EAAtDI,QACUE,eAD4CN,EAA7CM,eACiBC,UAD4BP,EAA7BO,UACYC,aADiBR,EAAlBQ,gBAIpB,CAACkG,sBAAoBC,sBAA9CyC,EA1EU,SAAAjM,GAAU,IACzB8C,EAAoH9C,EAApH8C,aAAcM,EAAsGpD,EAAtGoD,UAAWH,EAA2FjD,EAA3FiD,QAASE,EAAkFnD,EAAlFmD,eAAgBoG,EAAkEvJ,EAAlEuJ,mBAAoBC,EAA8CxJ,EAA9CwJ,kBAAmBmB,EAA2B3K,EAA3B2K,SAAUtH,EAAiBrD,EAAjBqD,aAD3E,EAEQ6K,oBAAS,GAFjB,oBAEzBgG,EAFyB,KAEXC,EAFW,KAI1BC,EAAgB,WACpBD,GAAgB,IAWZnH,EAAW/J,IAAYpC,IAOvBwT,EALAlR,EAGGyH,GAAM2B,iBAAiBpJ,GAFrByH,GAAM2B,iBAAkC,SAAjBlJ,EAA0B,SAAW,WAsBvE,OANAmL,qBAAU,WACJ7D,GACFyJ,OAKF,cAACH,GAAD,CAAQ/T,UAAS,qBAAgBmU,GAAWpJ,MAAO,CAACc,gBAAiB5I,GAArE,SACE,sBAAKjD,UAAS,6BAAwB8M,EAAW,iBAAmB,IAApE,UACE,cAAC,GAAD,CAAMG,SAAUkH,IAChB,sBAAKnU,UAAU,MAAM+K,MAAO,CAACmB,MAAM,eAAD,OApBnCY,GAAYrC,EACN,MAGD,GAAN,OADC7H,EACSrC,IAEAD,IAFV,MAgBoC,MAAlC,UACE,qBAAKN,UAAU,WAAf,SACE,oBAAIA,UAAU,6CAAd,SAEI8M,IAAarC,EACb,KAEA,oBAAIzK,UAAU,yCAAyC0L,QAAS,WA3CxEjB,EAGFnB,GAAmBpG,GAFnBmG,GAAoBzG,IA0CV,SACGA,GAAgB6H,EAAW,cAAC2J,GAAA,EAAD,CAAoBpU,UAAU,aAAgB,cAACqU,GAAA,EAAD,CAAkBrU,UAAU,mBAK9G,qBAAKA,UAAU,YAAf,SACC,cAAC,GAAD,MAED,cAAC,GAAD,CAAW0S,OAAQsB,EAAcrB,MAAOuB,e,UCtE9CI,GAAiB,CACpB,OAAS,cAAC,EAAD,CAAaxK,GAAG,UAG1B1E,GAAiB+C,SAAQ,SAACiC,EAAK/B,GAC9B,IAAMkM,EAAmB,SAACC,GAAD,OAASF,GAAeE,EAAIpQ,MAAQ,cAAC,EAAD,CAAa0F,GAAI0K,EAAIlQ,SAClFiQ,EAAiBnK,GACbA,EAAI1F,SACP0F,EAAI1F,QAAQyD,SAAS,SAAAiC,GACpBmK,EAAiBnK,GACdA,EAAI1F,SACN0F,EAAI1F,QAAQyD,SAAS,SAAAiC,GACpBmK,EAAiBnK,YAOtB,IAAMqK,GAAkBC,aAAW,SAAA5U,GAAU,IAEtC6U,EADe7U,EAAb8U,SACsBC,SAASpN,MAAM,KAAKqB,QAAO,SAAAT,GAAC,OAAIA,KACxDyM,EAAkBH,EAAavJ,KAAI,SAAC2J,EAAG5K,GAC1C,IAAM6K,EAAG,WAAOL,EAAaM,MAAM,EAAG9K,EAAQ,GAAG7B,KAAK,MACtD,OACE,cAAC,KAAWmD,KAAZ,UACE,cAAC,IAAD,CAAME,GAAIqJ,EAAV,SAAgBV,GAAeU,MADXA,MAM1B,OACA,cAAC,KAAD,UACEF,OAaWI,GARf,uKAEE,OACC,cAACT,GAAD,QAHH,GAAmCxQ,aC1BpBkR,GAdW,SAAC,GAAwB,IAAtB7Q,EAAqB,EAArBA,MAC5B,OADiD,EAAd8Q,QAGjC,sBAAKpV,UAAU,kBAAf,UACC,oBAAIA,UAAU,iCAAd,SACC,cAAC,EAAD,CAAa8J,GAAIxF,GAAe,WAEjC,cAAC,GAAD,OAGA,MCXW,SAAS+Q,KACvB,OACC,wBAAQrV,UAAU,SAAlB,SACC,gEAA6B,IAAIsV,MAAOC,eAAxC,IAAyD,sBAAMvV,UAAU,uBAAhB,mBAA2CsN,OAApG,6BCDI,IAAMkI,GAAW,WACtB,OACE,cAAC,WAAD,CAAUC,SAAU,cAAC,GAAD,CAAS9I,MAAM,YAAnC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEvI,KAAI,UAAKC,IAAL,SACJqR,UAAWC,gBAAK,kBAAM,wEAGxB,cAAC,IAAD,CACEC,OAAK,EACLxR,KAAI,UAAKC,KACTqR,UAAWC,gBAAK,kBAAM,wEAGxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,UACJqR,UAAWC,gBAAK,kBAAM,wEAexB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,aACJqR,UAAWC,gBAAK,kBAAM,+EAKxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,qBACJqR,UAAWC,gBAAK,kBAAM,+EAExB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,gBACJqR,UAAWC,gBAAK,kBAAM,8EAExB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,YACJqR,UAAWC,gBAAK,kBAAM,iEAIxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,qBACJqR,UAAWC,gBAAK,kBAAM,+EAGxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,gBACJqR,UAAWC,gBAAK,kBAAM,+EAExB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,YACJqR,UAAWC,gBAAK,kBAAM,iEAKxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,cACJqR,UAAWC,gBAAK,kBAAM,+EAGxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,aACJqR,UAAWC,gBAAK,kBAAM,+EAGxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,SACJqR,UAAWC,gBAAK,kBAAM,iEAKxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,kBACJqR,UAAWC,gBAAK,kBAAM,wEAGxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,iBACJqR,UAAWC,gBAAK,kBAAM,wEAGxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,aACJqR,UAAWC,gBAAK,kBAAM,iEAIxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,0BACJqR,UAAWC,gBAAK,kBAAM,wEAGxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,oBACJqR,UAAWC,gBAAK,kBAAM,+EAGxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,mBACJqR,UAAWC,gBAAK,kBAAM,+EAExB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,4CACJqR,UAAWC,gBAAK,kBAAM,iEAExB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,eACJqR,UAAWC,gBAAK,kBAAM,wEAKxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,mBACJqR,UAAWC,gBAAK,kBAAM,+EAGxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,kBACJqR,UAAWC,gBAAK,kBAAM,+EAGxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,sCACJqR,UAAWC,gBAAK,kBAAM,iEAKxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,mBACJqR,UAAWC,gBAAK,kBAAM,+EAGxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,kBACJqR,UAAWC,gBAAK,kBAAM,+EAKxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,iBACJqR,UAAWC,gBAAK,kBAAM,+EAGxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,kBACJqR,UAAWC,gBAAK,kBAAM,+EAGxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,aACJqR,UAAWC,gBAAK,kBAAM,iEAGxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,kBACJqR,UAAWC,gBAAK,kBAAM,+EAKxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,2BACJqR,UAAWC,gBAAK,kBAAM,wEAGxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,4BACJqR,UAAWC,gBAAK,kBAAM,wEAGxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,yBACJqR,UAAWC,gBAAK,kBAAM,iEAKxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,uBACJqR,UAAWC,gBAAK,kBAAM,wEAGxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,wBACJqR,UAAWC,gBAAK,kBAAM,wEAGxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,qBACJqR,UAAWC,gBAAK,kBAAM,iEAKxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,qBACJqR,UAAWC,gBAAK,kBAAM,+EAExB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,gBACJqR,UAAWC,gBAAK,kBAAM,8EAExB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,SACJqR,UAAWC,gBAAK,kBAAM,+EAKxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,2BACJqR,UAAWC,gBAAK,kBAAM,wEAExB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,kBACJqR,UAAWC,gBAAK,kBAAM,iEAGxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,aACJqR,UAAWC,gBAAK,kBAAM,wEAKxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,mBACJqR,UAAWC,gBAAK,kBAAM,+EAExB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,WACJqR,UAAWC,gBAAK,kBAAM,iEAGxB,cAAC,IAAD,CACEvR,KAAI,UAAKC,IAAL,cACJqR,UAAWC,gBAAK,kBAAM,qFASjB5R,OAAM8R,KAAKL,ICpPlBM,GAAY7J,IAAZ6J,QACArM,GAAkBC,IAAlBD,cAEKsM,GAAY,SAAC,GAAyC,IAAvCnT,EAAsC,EAAtCA,aAAcG,EAAwB,EAAxBA,QAAS6R,EAAe,EAAfA,SAC3CoB,EAAmBtL,GAAM1E,aAAaZ,GAAkBwP,EAASC,UAEjEpK,GADUC,GAAMC,cAAclB,MACVmB,SAAS,MAC7BqL,EAAYlT,IAAYrC,IACxBoM,EAAW/J,IAAYpC,IAU7B,MAAe,YAFI8P,8BAAXyF,OAGC,cAAC,GAAD,CAASvJ,MAAM,SAItB,eAAC,IAAD,WACE,cAAC,GAAD,CAAWlC,SAAUA,IACnBqC,IAAarC,EAAY,cAAC,GAAD,CAAQH,UAAW0L,IAAsB,KACpE,eAAC,IAAD,CAAQhW,UAAU,gBAAlB,UACIiW,IAAcxL,EAAY,cAAC,GAAD,CAASH,UAAW0L,IAAsB,KACtE,eAAC,IAAD,CAAQhW,UAAU,aAAa+K,MAAO,CAACoL,YAlBxCrJ,GAAYrC,EACN,EAEF7H,EAAerC,IAA2BD,KAe7C,UACE,sBAAKN,UAAS,sBAAiB8M,EAAW,iBAAmB,IAA7D,UACE,cAAC,GAAD,CAAYsI,QAAO,OAAEY,QAAF,IAAEA,OAAF,EAAEA,EAAkBvR,WAAYH,MAAK,OAAE0R,QAAF,IAAEA,OAAF,EAAEA,EAAkB1R,QAC5E,cAACwR,GAAD,UACE,cAAC,GAAD,SAGJ,cAACT,GAAD,UAGH5K,GAAY,cAAC,GAAD,QAUJsB,gBALS,SAAC,GAAe,IAAbpJ,EAAY,EAAZA,MAEzB,MAAO,CAAEC,aADkCD,EAAnCC,aACeG,QADoBJ,EAArBI,QACUD,OADWH,EAAZG,UAIlBiJ,CAAyBhI,IAAM8R,KAAKE,KCjDpCP,GAlBS,WACtB,OACE,cAAC,WAAD,CAAUC,SAAU,cAAC,GAAD,CAAS9I,MAAM,SAAnC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOvI,KAAI,UAAKgS,IAAL,UAA+BV,UAAWC,gBAAK,kBAAM,+EAChE,cAAC,IAAD,CAAOvR,KAAI,UAAKgS,IAAL,YAAiCV,UAAWC,gBAAK,kBAAM,+EAClE,cAAC,IAAD,CAAOvR,KAAI,UAAKgS,IAAL,YAAiCV,UAAWC,gBAAK,kBAAM,wEAClE,cAAC,IAAD,CAAOvR,KAAI,UAAKgS,IAAL,eAAoCV,UAAWC,gBAAK,kBAAM,+EACrE,cAAC,IAAD,CAAOvR,KAAI,UAAKgS,IAAL,eAAoCV,UAAWC,gBAAK,kBAAM,wEACrE,cAAC,IAAD,CAAOvR,KAAI,UAAKgS,IAAL,oBAAyCV,UAAWC,gBAAK,kBAAM,iEAC1E,cAAC,IAAD,CAAOvR,KAAI,UAAKgS,IAAL,YAAiCV,UAAWC,gBAAK,kBAAM,oCAClE,cAAC,IAAD,CAAOvR,KAAI,UAAKgS,IAAL,YAAiCV,UAAWC,gBAAK,kBAAM,oCAClE,cAAC,IAAD,CAAUU,KAAI,UAAKD,KAAoBzK,GAAE,UAAKyK,IAAL,kBCFlCE,GAXW,WACzB,OACC,qBAAKtW,UAAU,iBAAf,SACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAOoE,KAAK,GAAGsR,UAAWa,U,oBCEfC,GAPA,CACbC,KAAMC,KACN5T,OAAQ,QACR6T,SAAS,eACJC,K,oBCGQC,GAPA,CACbJ,KAAMK,KACNhU,OAAQ,KACR6T,SAAS,eACJI,K,oBCGQC,GAPA,CACbP,KAAMQ,KACNnU,OAAQ,QACR6T,SAAS,eACJO,K,oBCKQC,GAPG,CACdC,GAAIC,GACJC,GAAIC,GACJC,GAAIC,GACJC,GCNW,CACbjB,KAAMkB,KACN7U,OAAQ,QACR6T,SAAS,eACJiB,M,mBCiCQlD,eAAW3I,aANF,SAAC,GAAqB,IAAnBpJ,EAAkB,EAAlBA,MAAOtB,EAAW,EAAXA,KAGhC,MAAO,CAAEyB,OAFWH,EAAZG,OAES7B,MADCI,EAAVJ,SAIgB8K,EA9BL,SAACjM,GAAW,IACvBgD,EAAqBhD,EAArBgD,OAAQ8R,EAAa9U,EAAb8U,SACViD,EAAmBV,GAAUrU,GACnC,OACE,cAAC,KAAD,CACEA,OAAQ+U,EAAiB/U,OACzB6T,SAAUkB,EAAiBlB,SAF7B,SAGE,cAAC,KAAD,CAAgB7T,OAAQ+U,EAAiBpB,KAAzC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOb,OAAK,EAACxR,KAAK,IAAlB,SACE,cAAC,IAAD,CAAUuH,GAAItH,QAEhB,cAAC,IAAD,CAAOD,KAAMgS,IAAb,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOhS,KAAMC,IAAb,SACE,cAAC,GAAD,CAAWuQ,SAAUA,iBCjB3BjE,GAAS,CACbmH,KAAK,GAAD,OAAKC,GAAL,uBACJC,MAAM,GAAD,OAAKD,GAAL,yBAmBQE,OAhBf,WACE,OACE,qBAAKjY,UAAU,MAAf,SACE,cAAC,IAAD,CAAUyD,MAAOA,EAAjB,SACE,cAAC,yBAAD,CAAuByU,SAAUvH,GAAQwH,aAAczV,IAAaS,aAAciV,eAAe,yBAAjG,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOhU,KAAK,IAAIsR,UAAW2C,gBCTrBC,QACW,cAA7BC,OAAO3D,SAAS4D,UAEe,UAA7BD,OAAO3D,SAAS4D,UAEhBD,OAAO3D,SAAS4D,SAAShT,MACvB,2D,OCZNiT,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,gCEnInB,4dAAO,IAAMC,EAAS,SACT1X,EAAgB,gBAChB2X,EAAU,UACVxX,EAAkB,kBAClByX,EAAS,SACTxX,EAAiB,iBACjBH,EAAoB,oBACpBC,EAAoB,oBACpBG,EAAe,eACfV,EAAa,aACbkY,EAAqB,qBACrBvX,EAAmC,mCACnCwX,EAAuB,uBACvBvX,EAAqC,sC,uPCVrCsL,EAAW,YACXkM,EAAY,gCAA4BzB,mIAAY0B,aAAe,IAAvD,KACZC,EAAiBF,EAAe,UAChCnV,EAAkB,OAClB+R,EAAmB,QAEnB1T,EAAe,CAC3BE,cAAc,EACdC,aAAcrC,IACdsC,OAAQ,KACRC,QAASrC,IACTsC,YAAa,UACbC,eAAgB,GAChBC,WAAW,EACXC,aAAc,W","file":"static/js/main.521f5c73.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 250;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\n","import {\r\n\tAUTH_TOKEN,\r\n\tAUTHENTICATED,\r\n\tSHOW_AUTH_MESSAGE,\r\n\tHIDE_AUTH_MESSAGE,\r\n\tSIGNOUT_SUCCESS,\r\n\tSIGNUP_SUCCESS,\r\n\tSHOW_LOADING,\r\n\tSIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nconst initState = {\r\n  loading: false,\r\n  message: '',\r\n  showMessage: false,\r\n  redirect: '',\r\n  token: localStorage.getItem(AUTH_TOKEN),\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase AUTHENTICATED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\tcase SHOW_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\tshowMessage: true,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase HIDE_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: '',\r\n\t\t\t\tshowMessage: false,\r\n\t\t\t}\r\n\t\tcase SIGNOUT_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNUP_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t  ...state,\r\n\t\t\t  loading: false,\r\n\t\t\t  token: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SHOW_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_GOOGLE_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_FACEBOOK_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default auth","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\r\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\r\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\r\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\r\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV';\r\nexport const SWITCH_THEME = 'SWITCH_THEME';","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME\r\n} from '../constants/Theme';\r\nimport { THEME_CONFIG } from 'configs/AppConfig'\r\n\r\nconst initTheme = {\r\n  ...THEME_CONFIG\r\n};\r\n\r\nconst theme = (state = initTheme, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.sideNavTheme\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.locale\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.navType\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.topNavColor\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.headerNavColor\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.mobileNav\r\n      };\r\n    case SWITCH_THEME:\r\n      return {\r\n        ...state,\r\n        currentTheme: action.currentTheme\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default theme","import { combineReducers } from 'redux';\r\nimport Auth from './Auth';\r\nimport Theme from './Theme';\r\n\r\nconst reducers = combineReducers({\r\n    theme: Theme,\r\n    auth: Auth\r\n});\r\n\r\nexport default reducers;","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\n\r\n\r\nfunction configureStore(preloadedState) {\r\n   const store = createStore(reducers, preloadedState);\r\n\r\n  return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import {CarryOutOutlined , OrderedListOutlined ,DashboardOutlined, BankOutlined,DollarCircleOutlined,ProfileOutlined,DribbbleOutlined,UnorderedListOutlined,UserOutlined,InteractionOutlined       } from \"@ant-design/icons\";\r\nimport { APP_PREFIX_PATH } from \"configs/AppConfig\";\r\nimport Icon from '@ant-design/icons';\r\nconst Consititution = () => (\r\n  <svg id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m431.279 10c0-5.523-4.478-10-10-10h-298.673c-23.093 0-41.882 18.788-41.882 41.882v360.265c0 .039-.003.077-.003.116v36.312c0 22.494 18.301 40.794 40.795 40.794h13.979v22.631c0 4.088 2.488 7.764 6.283 9.284 3.797 1.52 8.133.576 10.954-2.383l23.873-25.039 23.873 25.039c1.925 2.019 4.556 3.1 7.239 3.1 1.249 0 2.51-.234 3.715-.717 3.795-1.52 6.283-5.196 6.283-9.284v-22.631h203.563c5.522 0 10-4.477 10-10v-459.369zm-308.673 10h288.673v340.388h-288.682c-8.011 0-15.502 2.265-21.872 6.183v-324.689c-.001-12.066 9.816-21.882 21.881-21.882zm75.11 457.021-13.873-14.55c-1.887-1.979-4.503-3.099-7.237-3.099s-5.351 1.12-7.237 3.099l-13.873 14.55v-38.539h42.221v30.887 7.652zm20-17.652v-20.887h4.348c5.522 0 10-4.477 10-10s-4.478-10-10-10h-89.916c-5.522 0-10 4.477-10 10s4.478 10 10 10h3.344v20.887h-13.975c-11.467 0-20.795-9.328-20.795-20.794v-36.235c0-.02.003-.038.003-.058 0-12.066 9.816-21.882 21.882-21.882h288.673v19.864h-86.853c-5.522 0-10 4.477-10 10s4.478 10 10 10h86.853v39.104h-193.564z\"/><path d=\"m351.602 267.012h-177.216c-5.522 0-10 4.477-10 10s4.478 10 10 10h177.217c5.522 0 10-4.477 10-10s-4.478-10-10.001-10z\"/><path d=\"m351.602 310.025h-177.216c-5.522 0-10 4.477-10 10s4.478 10 10 10h177.217c5.522 0 10-4.477 10-10s-4.478-10-10.001-10z\"/><path d=\"m288.314 406.44c-1.64-3.938-5.71-6.463-9.971-6.145-4.128.308-7.696 3.205-8.862 7.17-2.481 8.438 6.875 15.79 14.521 11.496 4.339-2.437 6.225-7.929 4.312-12.521z\"/><path d=\"m146.639 154.816 67.229 40.342c1.611.967 3.385 1.427 5.136 1.427 3.396 0 6.71-1.731 8.584-4.856 2.842-4.736 1.307-10.878-3.429-13.72l-1.197-.718 6.544-10.905 78.615 47.173c-2.717 4.608-1.333 10.575 3.209 13.487 1.671 1.072 3.54 1.583 5.388 1.583 3.294 0 6.519-1.625 8.428-4.604l.116-.181 7.796 4.678c4.805 2.883 10.101 4.255 15.334 4.254 10.163 0 20.087-5.176 25.688-14.507 4.108-6.848 5.305-14.886 3.368-22.634s-6.774-14.278-13.622-18.387l-6.481-3.889c1.577-4.303.029-9.273-3.99-11.85-4.192-2.688-9.623-1.843-12.838 1.752l-80.242-48.149 6.055-10.091 1.197.718c1.611.967 3.385 1.427 5.136 1.427 3.396 0 6.71-1.731 8.585-4.856 2.841-4.736 1.306-10.878-3.43-13.72l-67.23-40.342c-4.736-2.842-10.879-1.306-13.721 3.429-2.841 4.736-1.306 10.878 3.43 13.72l1.574.944-43.366 72.269-1.573-.944c-4.736-2.842-10.879-1.306-13.72 3.429-2.844 4.737-1.309 10.88 3.427 13.721zm103.361-22.544 79.595 47.761-10.69 16.672-79.091-47.458zm106.929 75.706c-2.81 4.681-8.903 6.202-13.581 3.395l-7.286-4.372 10.69-16.672 6.781 4.069c2.268 1.36 3.869 3.522 4.51 6.087s.245 5.226-1.114 7.493zm-137.911-131.345 30.161 18.098-43.367 72.269-.862-.517-29.299-17.581z\"/></svg>\r\n);\r\nconst dashBoardNavTree = [\r\n  {\r\n    key: \"home\",\r\n    path: `${APP_PREFIX_PATH}/home`,\r\n    title: \"home\",\r\n    icon: DashboardOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n\r\n  {\r\n    key: \"charity\",\r\n    path: `${APP_PREFIX_PATH}/charity`,\r\n    title: \"Charity\",\r\n    icon: BankOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n\r\n  {\r\n    key: \"sponsor\",\r\n    path: `${APP_PREFIX_PATH}/sponsor`,\r\n    title: \"Sponsor\",\r\n    icon: DollarCircleOutlined ,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n\r\n  {\r\n    key: \"feed\",\r\n    path: `${APP_PREFIX_PATH}/feed`,\r\n    title: \"Feed\",\r\n    icon: ProfileOutlined  ,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n\r\n  {\r\n    key: \"category\",\r\n    path: `${APP_PREFIX_PATH}/category`,\r\n    title: \"Category\",\r\n    icon: UnorderedListOutlined   ,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n\r\n  {\r\n    key: \"tournament\",\r\n    path: `${APP_PREFIX_PATH}/tournament`,\r\n    title: \"Tournament\",\r\n    icon: DribbbleOutlined   ,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n\r\n\r\n  \r\n  {\r\n    key: \"user\",\r\n    path: `${APP_PREFIX_PATH}/user`,\r\n    title: \"Users\",\r\n    icon: UserOutlined    ,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n\r\n  {\r\n    key: \"activity\",\r\n    path: `${APP_PREFIX_PATH}/activity`,\r\n    title: \"Acitvity\",\r\n    icon: InteractionOutlined    ,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n\r\n  {\r\n    key: \"rules\",\r\n    path: `${APP_PREFIX_PATH}/defined_rules`,\r\n    title: \"Rules\",\r\n    icon: CarryOutOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n\r\n\r\n  {\r\n    key: \"levels\",\r\n    path: `${APP_PREFIX_PATH}/levels`,\r\n    title: \"Levels\",\r\n    icon: OrderedListOutlined ,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n\r\n\r\n\r\n\r\n\r\n];\r\n\r\nconst navigationConfig = [...dashBoardNavTree];\r\n\r\nexport default navigationConfig;\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  return navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t  if( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  CHANGE_LOCALE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME\r\n} from '../constants/Theme';\r\n\r\nexport function toggleCollapsedNav(navCollapsed) {\r\n  return {\r\n    type: TOGGLE_COLLAPSED_NAV,\r\n    navCollapsed\r\n  };\r\n}\r\n\r\nexport function onNavStyleChange(sideNavTheme) {\r\n  return {\r\n    type: SIDE_NAV_STYLE_CHANGE,\r\n    sideNavTheme\r\n  };\r\n}\r\n\r\nexport function onLocaleChange(locale) {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    locale\r\n  };\r\n}\r\n\r\nexport function onNavTypeChange(navType) {\r\n  return {\r\n    type: NAV_TYPE_CHANGE,\r\n    navType\r\n  };\r\n}\r\n\r\nexport function onTopNavColorChange(topNavColor) {\r\n  return {\r\n    type: TOP_NAV_COLOR_CHANGE,\r\n    topNavColor\r\n  };\r\n}\r\n\r\nexport function onHeaderNavColorChange(headerNavColor) {\r\n  return {\r\n    type: HEADER_NAV_COLOR_CHANGE,\r\n    headerNavColor\r\n  };\r\n}\r\n\r\nexport function onMobileNavToggle(mobileNav) {\r\n  return {\r\n    type: TOGGLE_MOBILE_NAV,\r\n    mobileNav\r\n  };\r\n}\r\n\r\nexport function onSwitchTheme(currentTheme) {\r\n  return {\r\n    type: SWITCH_THEME,\r\n    currentTheme\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n\tconst { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tonMobileNavToggle(false)\r\n\t\t}\r\n\t}\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n    >\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle, localization}\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor, localization = true}) => {\r\n\tconst props = { topNavColor, localization }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover}`}>\r\n\t\t\t<Spin indicator={Icon} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { connect } from \"react-redux\";\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const { navCollapsed, navType } = props;\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  if(isMobile && !props.mobileLogo) {\r\n    return 0\r\n  }\r\n  if(isNavTop) {\r\n    return 'auto'\r\n  }\r\n  if(navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`\r\n  }\r\n}\r\n\r\nconst getLogo = (props) => {\r\n  const { navCollapsed, logoType } = props;\r\n  if(logoType === 'light') {\r\n    if(navCollapsed) {\r\n      return  '/img/xologsmall.png'\r\n\r\n    }\r\n    return '/img/xologo.png'\r\n  }\r\n\r\n  if (navCollapsed) {\r\n    return '/img/xologsmall.png'\r\n  }\r\n  return '/img/xologo.png'\r\n}\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if(isMobile && !mobileLogo) {\r\n    return 'd-none'\r\n  } else {\r\n    return 'logo'\r\n  }\r\n}\r\n\r\nexport const Logo = (props) => {\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n  return (\r\n    <div\r\n      className={getLogoDisplay(isMobile, props.mobileLogo)} \r\n      style={{width: `${getLogoWidthGutter(props, isMobile)}`,backgroundColor:\"rgb(17, 42, 72)\"}}>\r\n      <img  style={{width:'100%',height:'100%',objectFit:'contain'}} src={getLogo(props)} alt={`${APP_NAME} logo`}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType } =  theme;\r\n  return { navCollapsed, navType }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Logo);\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          <Logo mobileLogo={true} />\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst ColorPicker = props => {\r\n\r\n\tconst { colorChange, color='' } = props\r\n\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [pickerColor, setPickerColor] = useState(color)\r\n\tconst [boxColor, setBoxColor] = useState(color)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBoxColor(color);\r\n\t\tsetPickerColor(color)\r\n\t}, [color]);\r\n\r\n\tconst onPickerDropdown = () => {\r\n\t\tsetVisible(!visible)\r\n\t}\r\n\r\n\tconst onColorChange = (value) => {\r\n\t\tconst {rgb} = value\r\n\t\tconst rgba = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tsetBoxColor(rgba)\r\n\t\tsetPickerColor(rgb)\r\n\t\tcolorChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"color-picker\">\r\n\t\t\t<div className=\"color-picker-dropdown\">\r\n\t\t\t\t<div className=\"color\" style={{backgroundColor: boxColor ? boxColor : '#ffffff'}} onClick={onPickerDropdown} />\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"color-picker-backdrop\" onClick={onPickerDropdown}/>\r\n\t\t\t\t\t\t<SketchPicker color={pickerColor} onChange={onColorChange}/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nColorPicker.propTypes = {\r\n\tcolor: PropTypes.string,\r\n\tcolorChange: PropTypes.func\r\n}\r\n\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\r\nimport { CheckOutlined, GlobalOutlined, DownOutlined  } from '@ant-design/icons';\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport lang from \"assets/data/language.data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { onLocaleChange } from 'redux/actions/Theme'\r\n\r\nfunction getLanguageDetail (locale) {\r\n\tconst data = lang.filter(elm => (elm.langId === locale))\r\n\treturn data[0]\r\n}\r\n\r\nconst SelectedLanguage = ({ locale }) => {\r\n\tconst language = getLanguageDetail(locale)\r\n\tconst {langName, icon} = language\r\n\treturn (\r\n\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${icon}.png`} alt={langName}/>\r\n\t\t\t<span className=\"font-weight-semibold ml-2\">{langName} <DownOutlined className=\"font-size-xs\"/></span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const NavLanguage = ({ locale, configDisplay, onLocaleChange }) => {\r\n\tconst languageOption = (\r\n\t\t<Menu>\r\n\t\t\t{\r\n\t\t\t\tlang.map((elm, i) => {return (\r\n\t\t\t\t\t<Menu.Item \r\n\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\tclassName={locale === elm.langId? 'ant-dropdown-menu-item-active': ''} \r\n\t\t\t\t\t\tonClick={() => onLocaleChange(elm.langId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span className=\"d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${elm.icon}.png`} alt={elm.langName}/>\r\n\t\t\t\t\t\t\t\t<span className=\"font-weight-normal ml-2\">{elm.langName}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{locale === elm.langId? <CheckOutlined className=\"text-success\" /> : null}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t)})\r\n\t\t\t}\r\n\t\t</Menu>\r\n\t)\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" overlay={languageOption} trigger={[\"click\"]}>\r\n\t\t\t{\r\n\t\t\t\tconfigDisplay ?\r\n\t\t\t\t(\r\n\t\t\t\t\t<a href=\"#/\" className=\"text-gray\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t<SelectedLanguage locale={locale}/>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)\r\n\t\t\t\t:\r\n\t\t\t\t(\r\n\t\t\t\t\t<Menu mode=\"horizontal\">\r\n\t\t\t\t\t\t<Menu.Item>\r\n\t\t\t\t\t\t\t<a href=\"#/\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t\t\t<GlobalOutlined className=\"nav-icon mr-0\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t</Menu>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps, {onLocaleChange})(NavLanguage);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Radio, Switch, Button, message } from 'antd';\r\nimport { \r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n} from 'redux/actions/Theme';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport ColorPicker from 'components/shared-components/ColorPicker';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport NavLanguage from './NavLanguage';\r\nimport { \r\n\tSIDE_NAV_LIGHT,\r\n\tNAV_TYPE_SIDE,\r\n\tNAV_TYPE_TOP,\r\n\tSIDE_NAV_DARK\r\n} from 'constants/ThemeConstant';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport utils from 'utils/index';\r\n\r\nconst colorOptions = [\r\n\t'#3e82f7',\r\n\t'#24a772',\r\n\t'#de4436',\r\n\t'#924aca',\r\n\t'#193550'\r\n]\r\n\r\nconst ListOption = ({name, selector, disabled, vertical}) => (\r\n\t<div className={`my-4 ${vertical? '' : 'd-flex align-items-center justify-content-between'}`}>\r\n\t\t<div className={`${disabled ? 'opacity-0-3' : ''} ${vertical? 'mb-3' : ''}`}>{name}</div>\r\n\t\t<div>{selector}</div>\r\n\t</div>\r\n)\r\n\r\nexport const ThemeConfigurator = ({ \r\n\tnavType, \r\n\tsideNavTheme, \r\n\tnavCollapsed,\r\n\ttopNavColor,\r\n\theaderNavColor,\r\n\tlocale,\r\n\tcurrentTheme,\r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange, \r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n}) => {\r\n\tconst isNavTop = navType === NAV_TYPE_TOP? true : false\r\n\tconst isCollapse = navCollapsed \r\n\r\n\tconst { switcher, themes } = useThemeSwitcher();\r\n\r\n\tconst toggleTheme = (isChecked) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst changedTheme = isChecked ? 'dark' : 'light'\r\n\t\tonSwitchTheme(changedTheme)\r\n    switcher({ theme: themes[changedTheme] });\r\n  };\r\n\r\n\tconst ontopNavColorClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonTopNavColorChange(hex)\r\n\t}\r\n\tconst onHeaderNavColorClick = (value) => {\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonHeaderNavColorChange(hex)\r\n\t}\r\n\r\n\tconst onNavTypeClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tif(value === NAV_TYPE_TOP) {\r\n\t\t\tonTopNavColorChange(colorOptions[0])\r\n\t\t\ttoggleCollapsedNav(false)\r\n\t\t}\r\n\t\tonNavTypeChange(value)\r\n\t}\r\n\r\n\tconst genCopySettingJson = (configState) => JSON.stringify(configState, null, 2);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Navigation</h4>\r\n\t\t\t\t{\r\n\t\t\t\t\tisNavTop ?\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Top Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={topNavColor} colorChange={ontopNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Header Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={headerNavColor} colorChange={onHeaderNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Navigation Type:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group \r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavTypeClick(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={navType}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_SIDE}>Side</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_TOP}>Top</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Color:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavStyleChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={sideNavTheme}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_LIGHT}>Light</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_DARK}>Dark</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Collapse:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch \r\n\t\t\t\t\t\t\tdisabled={isNavTop} \r\n\t\t\t\t\t\t\tchecked={isCollapse} \r\n\t\t\t\t\t\t\tonChange={() => toggleCollapsedNav(!navCollapsed)} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Dark Theme:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch checked={currentTheme === 'dark'} onChange={toggleTheme} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Locale</h4>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Language:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<NavLanguage configDisplay/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<CopyToClipboard\r\n\t\t\t\t\ttext={genCopySettingJson({ navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme})}\r\n\t\t\t\t\tonCopy={() => message.success('Copy Success, please paste it to src/configs/AppConfig.js THEME_CONFIG variable.') }\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button icon={<CopyOutlined /> } block>\r\n\t\t\t\t\t\t<span>Copy Setting</span>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CopyToClipboard>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme } =  theme;\r\n  return { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\ttoggleCollapsedNav,\r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeConfigurator)\r\n","import React, { Component } from 'react';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport { Drawer, Menu } from 'antd';\r\nimport ThemeConfigurator from './ThemeConfigurator';\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class NavPanel extends Component {\r\n\tstate = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\t};\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n      <>\r\n        <Menu mode=\"horizontal\">\r\n          <Menu.Item onClick={this.showDrawer}>\r\n            <SettingOutlined className=\"nav-icon mr-0\" />\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Drawer\r\n          title=\"Theme Config\"\r\n          placement=\"right\"\r\n          width={350}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n        >\r\n          <ThemeConfigurator/>\r\n        </Drawer>\r\n      </>\r\n    );\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavPanel);","import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tdropdownClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tCloseOutlined,\r\n} from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport SearchInput from './SearchInput';\r\n\r\nexport const NavSearch = (props) => {\r\n\tconst { active, close, headerNavColor } = props\r\n\tconst mode = utils.getColorContrast(headerNavColor)\r\n\r\n\treturn (\r\n\t\t<div className={`nav-search ${active ? 'nav-search-active' : ''} ${mode}`} style={{backgroundColor: headerNavColor}}>\r\n\t\t\t<div className=\"d-flex align-items-center w-100\">\r\n\t\t\t\t<SearchInput close={close} active={active}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"nav-close\" onClick={close}>\r\n\t\t\t\t<CloseOutlined />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } =  theme;\r\n  return { headerNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavPanel from './NavPanel';\r\nimport NavSearch  from './NavSearch';\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport {\r\n  Button,\r\n} from \"antd\";\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n  const { navCollapsed, mobileNav, navType, headerNavColor, toggleCollapsedNav, onMobileNavToggle, isMobile, currentTheme } = props;\r\n  const [searchActive, setSearchActive] = useState(false)\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false)\r\n  }\r\n\r\n  const onToggle = () => {\r\n    if(!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed)\r\n    } else {\r\n      onMobileNavToggle(!mobileNav)\r\n    }\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = ()=> {\r\n    if(!headerNavColor) {\r\n      return utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff' )\r\n    }\r\n    return utils.getColorContrast(headerNavColor)\r\n  }\r\n  const navMode = mode()\r\n  const getNavWidth = () => {\r\n    if(isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if(navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isMobile) {\r\n      onSearchClose()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Header className={`app-header ${navMode}`} style={{backgroundColor: headerNavColor}}>\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={navMode}/>\r\n        <div className=\"nav\" style={{width: `calc(100% - ${getNavWidth()})`}}>\r\n          <div className=\"nav-left\">\r\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">          \r\n              {\r\n                isNavTop && !isMobile ?\r\n                null\r\n                :\r\n                <li className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => {onToggle()}}>\r\n                  {navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n           <NavPanel />\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose}/>\r\n          \r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav, currentTheme } =  theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav, currentTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps, {toggleCollapsedNav, onMobileNavToggle})(HeaderNav);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = withRouter(props => {\r\n\tconst { location } = props;\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return (\r\n      <Breadcrumb.Item key={url}>\r\n        <Link to={url}>{breadcrumbData[url]}</Link>\r\n      </Breadcrumb.Item>\r\n    );\r\n\t});\r\n  \r\n  return (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n  );\r\n});\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from \"components/shared-components/Loading\";\r\nimport { APP_PREFIX_PATH } from \"configs/AppConfig\";\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"content\" />}>\r\n      <Switch>\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/home`}\r\n          component={lazy(() => import(`./home`))}\r\n        />\r\n\r\n        <Route\r\n          exact\r\n          path={`${APP_PREFIX_PATH}`}\r\n          component={lazy(() => import(`./home`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/login`}\r\n          component={lazy(() => import(`../auth-views/components/LoginForm`))}\r\n        />\r\n\r\n        {/* <Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/home`} /> */}\r\n\r\n        {/* Acitivity Routes  */}\r\n\r\n        {/* <Route\r\n          path={`${APP_PREFIX_PATH}/charity/edit/:id`}\r\n          component={lazy(() => import(`./charity/edit`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/charity/add`}\r\n          component={lazy(() => import(`./charity/add`))}\r\n        /> */}\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/activity`}\r\n          component={lazy(() => import(`./activity`))}\r\n        />\r\n\r\n        {/* Charity Routes  */}\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/charity/edit/:id`}\r\n          component={lazy(() => import(`./charity/edit`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/charity/add`}\r\n          component={lazy(() => import(`./charity/add`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/charity`}\r\n          component={lazy(() => import(`./charity`))}\r\n        />\r\n        {/* Sponser Routes  */}\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/sponsor/edit/:id`}\r\n          component={lazy(() => import(`./sponsor/edit`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/sponsor/add`}\r\n          component={lazy(() => import(`./sponsor/add`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/sponsor`}\r\n          component={lazy(() => import(`./sponsor`))}\r\n        />\r\n\r\n        {/* Feed Routes  */}\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/feed/edit`}\r\n          component={lazy(() => import(`./feed/edit`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/feed/add`}\r\n          component={lazy(() => import(`./feed/add`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/feed`}\r\n          component={lazy(() => import(`./feed`))}\r\n        />\r\n\r\n        {/* Category Routes  */}\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/category/edit`}\r\n          component={lazy(() => import(`./category/edit`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/category/add`}\r\n          component={lazy(() => import(`./category/add`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/category`}\r\n          component={lazy(() => import(`./category`))}\r\n        />\r\n\r\n        {/* Tournament Routes  */}\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/tournament/manage/:id`}\r\n          component={lazy(() => import(`./tournament/manage`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/tournament/edit`}\r\n          component={lazy(() => import(`./tournament/edit`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/tournament/add`}\r\n          component={lazy(() => import(`./tournament/add`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/tournament/leaderboard/tournamentid/:id`}\r\n          component={lazy(() => import(`./tournament/manage/leaderboard`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/tournament`}\r\n          component={lazy(() => import(`./tournament`))}\r\n        />\r\n\r\n        {/* Round Routes  */}\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/round/edit/:id`}\r\n          component={lazy(() => import(`./round/edit`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/round/add/:id`}\r\n          component={lazy(() => import(`./round/add`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/round/setroundanswers/roundid/:id`}\r\n          component={lazy(() => import(`./tournament/manage/answerquestions`))}\r\n        />\r\n\r\n        {/* Prize Config Routes  */}\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/prize/edit/:id`}\r\n          component={lazy(() => import(`./prize/edit`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/prize/add/:id`}\r\n          component={lazy(() => import(`./prize/add`))}\r\n        />\r\n\r\n        {/* Game Routes  */}\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/game/add/:id`}\r\n          component={lazy(() => import(`./game/add`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/game/edit/:id`}\r\n          component={lazy(() => import(`./game/edit`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/game/:id`}\r\n          component={lazy(() => import(`./game`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/round/add/:id`}\r\n          component={lazy(() => import(`./round/add`))}\r\n        />\r\n\r\n        {/* Question Routes  */}\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/addquestion/gameid/:id`}\r\n          component={lazy(() => import(`./question/add`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/editquestion/gameid/:id`}\r\n          component={lazy(() => import(`./question/edit`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/questions/gameid/:id`}\r\n          component={lazy(() => import(`./question`))}\r\n        />\r\n\r\n        {/* Rules Routes  */}\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/addrule/gameid/:id`}\r\n          component={lazy(() => import(`./rule/add`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/editrule/gameid/:id`}\r\n          component={lazy(() => import(`./rule/edit`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/rules/gameid/:id`}\r\n          component={lazy(() => import(`./rule`))}\r\n        />\r\n\r\n        {/* Charity Routes  */}\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/charity/edit/:id`}\r\n          component={lazy(() => import(`./charity/edit`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/charity/add`}\r\n          component={lazy(() => import(`./charity/add`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/user`}\r\n          component={lazy(() => import(`./user`))}\r\n        />\r\n\r\n        {/* Defined Rules Routes  */}\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/defined_rules/edit/:id`}\r\n          component={lazy(() => import(`./defined_rules/edit`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/defined_rules`}\r\n          component={lazy(() => import(`./defined_rules`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/rule/add`}\r\n          component={lazy(() => import(`./defined_rules/add`))}\r\n        />\r\n\r\n        {/* Level Routes  */}\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/level/edit/:id`}\r\n          component={lazy(() => import(`./level/edit`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/levels`}\r\n          component={lazy(() => import(`./level`))}\r\n        />\r\n\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/level/add`}\r\n          component={lazy(() => import(`./level/add`))}\r\n        />\r\n\r\n        {/* <Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/charity`} /> */}\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default React.memo(AppViews);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views';\r\nimport {\r\n  Layout,\r\n  Grid,\r\n} from \"antd\";\r\n\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { \r\n  SIDE_NAV_WIDTH, \r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if(isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n\r\n  const { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile}/>\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n        <Layout className=\"app-layout\" style={{paddingLeft: getLayoutGutter()}}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } =  theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"page\"/>}>\r\n      <Switch>\r\n        <Route path={`${AUTH_PREFIX_PATH}/login`} component={lazy(() => import(`./authentication/login`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-1`} component={lazy(() => import(`./authentication/login-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-2`} component={lazy(() => import(`./authentication/login-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-1`} component={lazy(() => import(`./authentication/register-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-2`} component={lazy(() => import(`./authentication/register-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/forgot-password`} component={lazy(() => import(`./authentication/forgot-password`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-1`} component={lazy(() => import(`./errors/error-page-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-2`} component={lazy(() => import(`./errors/error-page-2`))} />\r\n        <Redirect from={`${AUTH_PREFIX_PATH}`} to={`${AUTH_PREFIX_PATH}/login`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default AppViews;\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from 'views/auth-views'\r\n\r\nexport const AuthLayout = () => {\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={AuthViews} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;\r\n","import antdZhCn from 'antd/es/locale/zh_CN';\r\nimport zhMsg from \"../locales/zh_CN.json\";\r\n\r\nconst ZhLang = {\r\n  antd: antdZhCn,\r\n  locale: 'zh',\r\n  messages: {\r\n    ...zhMsg\r\n  },\r\n};\r\nexport default ZhLang;\r\n","import antdFrFR from 'antd/es/locale/fr_FR';\r\nimport frMsg from \"../locales/fr_FR.json\";\r\n\r\nconst FrLang = {\r\n  antd: antdFrFR,\r\n  locale: 'fr-FR',\r\n  messages: {\r\n    ...frMsg\r\n  },\r\n};\r\nexport default FrLang;\r\n","import enLang from './entries/en_US';\r\nimport zhLang from './entries/zh_CN';\r\nimport frLang from './entries/fr_FR';\r\nimport jaLang from './entries/ja_JP'\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n    zh: zhLang,\r\n    fr: frLang,\r\n    ja: jaLang\r\n};\r\n\r\nexport default AppLocale;","import antdJaJP from 'antd/es/locale/ja_JP';\r\nimport jaMsg from \"../locales/ja_JP.json\";\r\n\r\nconst JaLang = {\r\n  antd: antdJaJP,\r\n  locale: 'ja-JP',\r\n  messages: {\r\n    ...jaMsg\r\n  },\r\n};\r\nexport default JaLang;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport AppLayout from \"layouts/app-layout\";\r\nimport AuthLayout from 'layouts/auth-layout';\r\nimport AppLocale from \"lang\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { ConfigProvider } from 'antd';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const Views = (props) => {\r\n  const { locale, location } = props;\r\n  const currentAppLocale = AppLocale[locale];\r\n  return (\r\n    <IntlProvider\r\n      locale={currentAppLocale.locale}\r\n      messages={currentAppLocale.messages}>\r\n      <ConfigProvider locale={currentAppLocale.antd}>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={APP_PREFIX_PATH} />\r\n          </Route>\r\n          <Route path={AUTH_PREFIX_PATH}>\r\n            <AuthLayout />\r\n          </Route>\r\n          <Route path={APP_PREFIX_PATH}>\r\n            <AppLayout location={location}/>\r\n          </Route>\r\n        </Switch>\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { locale } =  theme;\r\n  const { token } = auth;\r\n  return { locale, token }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views));","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Views from './views';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\r\nimport { THEME_CONFIG } from './configs/AppConfig';\r\n\r\nconst themes = {\r\n  dark: `${process.env.PUBLIC_URL}/css/dark-theme.css`,\r\n  light: `${process.env.PUBLIC_URL}/css/light-theme.css`,\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <ThemeSwitcherProvider themeMap={themes} defaultTheme={THEME_CONFIG.currentTheme} insertionPoint=\"styles-insertion-point\">\r\n          <Router>\r\n            <Switch>\r\n              <Route path=\"/\" component={Views}/>\r\n            </Switch>\r\n          </Router>\r\n        </ThemeSwitcherProvider>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const SIGNIN = 'SIGNIN'; \r\nexport const AUTHENTICATED = 'AUTHENTICATED';\r\nexport const SIGNOUT = 'SIGNOUT';\r\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SHOW_AUTH_MESSAGE = 'SHOW_AUTH_MESSAGE'\r\nexport const HIDE_AUTH_MESSAGE = 'HIDE_AUTH_MESSAGE'\r\nexport const SHOW_LOADING = 'SHOW_LOADING'\r\nexport const AUTH_TOKEN = 'auth_token'\r\nexport const SIGNIN_WITH_GOOGLE = 'SIGNIN_WITH_GOOGLE'\r\nexport const SIGNIN_WITH_GOOGLE_AUTHENTICATED = 'SIGNIN_WITH_GOOGLE_AUTHENTICATED'\r\nexport const SIGNIN_WITH_FACEBOOK = 'SIGNIN_WITH_FACEBOOK'\r\nexport const SIGNIN_WITH_FACEBOOK_AUTHENTICATED = 'SIGNIN_WITH_FACEBOOK_AUTHENTICATED'","import { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { env } from './EnvironmentConfig'\r\n\r\nexport const APP_NAME = 'CONTRORG';\r\nexport const API_BASE_URL = `http://160.119.254.32:${process.env.BACKENDPORT || 4000}/`\r\nexport const IMAGE_BASE_URL = API_BASE_URL + \"images/\";\r\nexport const APP_PREFIX_PATH = '/app';\r\nexport const AUTH_PREFIX_PATH = '/auth';\r\n\r\nexport const THEME_CONFIG = {\r\n\tnavCollapsed: false,\r\n\tsideNavTheme: SIDE_NAV_LIGHT,\r\n\tlocale: 'en',\r\n\tnavType: NAV_TYPE_SIDE,\r\n\ttopNavColor: '#3e82f7',\r\n\theaderNavColor: '',\r\n\tmobileNav: false,\r\n\tcurrentTheme: 'light'\r\n};\r\n"],"sourceRoot":""}