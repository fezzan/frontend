{"version":3,"sources":["history.js","auth/FetchInterceptor.js","configs/Endpoints.js","../node_modules/@ant-design/icons-svg/es/asn/PlayCircleFilled.js","../node_modules/@ant-design/icons/es/icons/PlayCircleFilled.js","views/app-views/home/index.js"],"names":["history","service","axios","create","baseURL","API_BASE_URL","timeout","headers","ENTRY_ROUTE","interceptors","request","use","config","jwtToken","localStorage","getItem","AUTH_TOKEN","push","window","location","reload","error","notification","message","Promise","reject","response","data","notificationParam","status","description","removeItem","DELETE_CATEGORY","GET_ALL_CATEGORIES","ADD_CATEGORY","EDIT_CATEGORY","DELETE_CHARITY","GET_ALL_CHARITIES","ADD_CHARITY","EDIT_CHARITY","FIND_CHARITY","DELETE_FEED","GET_ALL_FEED","ADD_FEED","EDIT_FEED","DELETE_SPONSOR","GET_ALL_SPONSOR","ADD_SPONSOR","EDIT_SPONSOR","DELETE_TOURNAMENT","GET_ALL_TOURNAMENT","ADD_TOURNAMENT","EDIT_TOURNAMENT","ACTIVATE_TOURNAMENT","END_TOURNAMENT","GET_TOURNAMENT_BY_ID","LEADERBOARD","WINNERS","DELETE_ROUND","ADD_ROUND","EDIT_ROUND","ACTIVATE_ROUND","GET_ROUND_BY_ID","DELETE_PRIZE","GET_ALL_PRIZES","ADD_PRIZE","EDIT_PRIZE","DELETE_GAME","GET_ALL_GAMES","ADD_GAME","EDIT_GAME","DELETE_QUESTION","GET_ALL_QUESTIONS","ADD_QUESTION","EDIT_QUESTION","DELETE_RULE","GET_ALL_RULES","ADD_RULE","EDIT_RULE","ROUND_END","ROUND_QUESTIONS","ALL_TYPES","ADD_TRANSACTION","ALL_USERS","DONATE","GET_ALL_ACTIVITY","GET_ACTIVITY_BY_ID","GET_ALL_FIXED_RULES","DELETE_FIXED_RULE","ADD_FIXED_RULE","EDIT_FIXED_RULE","GET_ALL_LEVEL","DELETE_LEVEL","ADD_LEVEL","EDIT_LEVEL","PlayCircleFilled","props","ref","React","AntdIcon","Object","assign","icon","PlayCircleFilledSvg","displayName","Home","columns","title","dataIndex","key","render","text","style","objectFit","width","height","borderRadius","src","IMAGE_BASE_URL","href","Moment","format","useState","tournamentList","setTournamentList","loading","setloading","fetchData","get","then","res","console","log","filter","R","setActive","useEffect","minHeight","display","justifyContent","alignItems","active","paragraph","rows","flexDirection","fontSize","color","fontFamily","dataSource"],"mappings":"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","file":"static/js/11.3950784b.chunk.js","sourcesContent":["import * as history from 'history';\r\n\r\nexport default history.createBrowserHistory();","import axios from 'axios'\r\nimport { API_BASE_URL } from 'configs/AppConfig'\r\nimport history from '../history'\r\nimport { AUTH_TOKEN } from 'redux/constants/Auth'\r\nimport { message, notification } from 'antd';\r\n\r\nconst service = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 60000,\r\n  headers: {\r\n\t\r\n\t  'Accept': 'application/json',\r\n\t  'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Config\r\nconst ENTRY_ROUTE = '/auth/login'\r\nconst TOKEN_PAYLOAD_KEY = 'authorization'\r\nconst PUBLIC_REQUEST_KEY = 'public-request'\r\n\r\n// API Request interceptor\r\nservice.interceptors.request.use(config => {\r\n\tconst jwtToken = localStorage.getItem(AUTH_TOKEN)\r\n\t//debugger;\r\n  if (jwtToken) {\r\n    config.headers[\"Authorization\"] = `Bearer ${jwtToken}`;\r\n  }\r\n\r\n  if (!jwtToken && !config.headers[PUBLIC_REQUEST_KEY]) {\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n  }\r\n\r\n  return config\r\n}, error => {\r\n\t// Do something with request error here\r\n\tnotification.error({\r\n\t\tmessage: 'Error'\r\n\t})\r\n  Promise.reject(error)\r\n})\r\n\r\n// API respone interceptor\r\nservice.interceptors.response.use( (response) => {\r\n\treturn response.data\r\n}, (error) => {\r\n\r\n\tlet notificationParam = {\r\n\t\tmessage: ''\r\n\t}\r\n\t\r\n\t// Remove token and redirect \r\n\tif (error.response.status === 403) {\r\n\t\tnotificationParam.message = 'Authentication Fail'\r\n\t\tnotificationParam.description = 'Please login again'\r\n\t\tlocalStorage.removeItem(AUTH_TOKEN)\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\tif (error.response.status === 404) {\r\n\t\tnotificationParam.message = 'Not Found'\r\n\t}\r\n\r\n\tif (error.response.status === 500) {\r\n\t\tnotificationParam.message = 'Internal Server Error'\r\n\t}\r\n\t\r\n\tif (error.response.status === 508) {\r\n\t\tnotificationParam.message = 'Time Out'\r\n\t}\r\n\r\n\tmessage.error(error.response.data.message)\r\n\r\n\treturn Promise.reject(error);\r\n});\r\n\r\nexport default service","export const ALL_CATEGORIES = \"/category/all\";\r\nexport const DELETE_CATEGORY = \"/category/delete/\";\r\nexport const GET_ALL_CATEGORIES = \"/category/all\";\r\nexport const ADD_CATEGORY = \"/category/addcategory\";\r\nexport const EDIT_CATEGORY = \"category/edit/\";\r\n//------------------------------------------------ charity routes ----------------------------------------------\r\nexport const DELETE_CHARITY = \"/charity/delete/\";\r\nexport const GET_ALL_CHARITIES = \"/charity/all\";\r\nexport const ADD_CHARITY = \"/charity/addcharity\";\r\nexport const EDIT_CHARITY = \"charity/edit/\";\r\nexport const FIND_CHARITY = \"charity/find/\";\r\n\r\n\r\n//------------------------------------------------ feed routes ----------------------------------------------\r\nexport const DELETE_FEED = \"/feed/delete/\";\r\nexport const GET_ALL_FEED = \"/feed/all\";\r\nexport const ADD_FEED = \"/feed/addfeed\";\r\nexport const EDIT_FEED = \"feed/edit/\";\r\n\r\n//------------------------------------------------ SPONSOR routes ----------------------------------------------\r\nexport const DELETE_SPONSOR = \"/sponsor/delete/\";\r\nexport const GET_ALL_SPONSOR = \"/sponsor/all\";\r\nexport const ADD_SPONSOR = \"/sponsor/addsponsor\";\r\nexport const EDIT_SPONSOR = \"sponsor/edit/\";\r\n\r\n//------------------------------------------------ TOURNAMENT routes ----------------------------------------------\r\nexport const DELETE_TOURNAMENT = \"/tournament/delete/\";\r\nexport const GET_ALL_TOURNAMENT = \"/tournament/all\";\r\nexport const ADD_TOURNAMENT = \"/tournament/addtournament\";\r\nexport const EDIT_TOURNAMENT = \"tournament/edit/\";\r\nexport const ACTIVATE_TOURNAMENT = \"/tournament/activate/\";\r\nexport const END_TOURNAMENT = \"/tournament/end/\";\r\n\r\nexport const GET_TOURNAMENT_BY_ID = \"/tournament/find/\";\r\nexport const LEADERBOARD = \"/user/leaderboard/\";\r\nexport const WINNERS = \"/tournament/winners/\";\r\n\r\n//------------------------------------------------ ROUND routes ----------------------------------------------\r\nexport const DELETE_ROUND = \"/round/delete/\";\r\nexport const GET_ALL_ROUNDS = \"/round/all/\";\r\nexport const ADD_ROUND = \"/round/addround\";\r\nexport const EDIT_ROUND = \"round/edit/\";\r\nexport const ACTIVATE_ROUND = \"/round/activate/\";\r\nexport const GET_ROUND_BY_ID = \"/round/find/\";\r\n\r\n//------------------------------------------------ PRIZES routes ----------------------------------------------\r\nexport const DELETE_PRIZE = \"/prizeConfig/delete/\";\r\nexport const GET_ALL_PRIZES = \"/prizeConfig/find/\";\r\nexport const ADD_PRIZE = \"/prizeConfig/addprize\";\r\nexport const EDIT_PRIZE = \"/prizeConfig/edit/\";\r\n\r\n\r\n//------------------------------------------------ GAME routes ----------------------------------------------\r\nexport const DELETE_GAME = \"/game/delete/\";\r\nexport const GET_ALL_GAMES = \"/game/find/\";\r\nexport const ADD_GAME = \"/game/addgame\";\r\nexport const EDIT_GAME = \"/game/edit/\";\r\n\r\n\r\n//------------------------------------------------ QUESTION routes ----------------------------------------------\r\nexport const DELETE_QUESTION = \"/question/delete/\";\r\nexport const GET_ALL_QUESTIONS = \"/question/find/\";\r\nexport const ADD_QUESTION = \"/question/addquestion\";\r\nexport const EDIT_QUESTION = \"/question/edit/\";\r\n\r\n\r\n//------------------------------------------------ RULE routes ----------------------------------------------\r\nexport const DELETE_RULE = \"/customrule/delete/\";\r\nexport const GET_ALL_RULES = \"/customrule/find/\";\r\nexport const ADD_RULE = \"/customrule/addcustomrule\";\r\nexport const EDIT_RULE = \"/customrule/edit/\";\r\nexport const ROUND_END = \"/round/end/\";\r\nexport const ROUND_QUESTIONS = \"/round/questions/\"\r\n\r\n//---------------------------------------------------USER ENDPOINTS---------------------------------------------\r\nexport const ALL_TYPES = '/type/all';\r\nexport const ADD_TRANSACTION = '/transactions/addtransaction';\r\nexport const ALL_USERS = '/user/amount'\r\nexport const DONATE = '/admin/donate/';\r\n//---------------------------------------------------ACTIVITY END POINTS --------\r\nexport const GET_ALL_ACTIVITY = \"/activity/all\";\r\nexport const GET_ACTIVITY_BY_ID = \"/activity/find/\";\r\n\r\n//---------------------------------------------------DEFINED RULE END POINTS --------\r\n\r\nexport const GET_ALL_FIXED_RULES = \"/rule/all\";\r\nexport const DELETE_FIXED_RULE = \"/rule/delete/\";\r\nexport const ADD_FIXED_RULE = \"/rule/addrule\";\r\nexport const EDIT_FIXED_RULE = \"rule/edit/\";\r\n\r\n//---------------------------------------------------LEVEL END POINTS --------\r\n\r\n\r\nexport const GET_ALL_LEVEL = \"/level/all\";\r\nexport const DELETE_LEVEL = \"/level/delete/\";\r\nexport const ADD_LEVEL = \"/level/addlevel\";\r\nexport const EDIT_LEVEL = \"level/edit/\";\r\n\r\n\r\n","// This icon file is generated automatically.\nvar PlayCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm144.1 454.9L437.7 677.8a8.02 8.02 0 01-12.7-6.5V353.7a8 8 0 0112.7-6.5L656.1 506a7.9 7.9 0 010 12.9z\" } }] }, \"name\": \"play-circle\", \"theme\": \"filled\" };\nexport default PlayCircleFilled;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlayCircleFilledSvg from \"@ant-design/icons-svg/es/asn/PlayCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlayCircleFilled = function PlayCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: PlayCircleFilledSvg\n  }));\n};\n\nPlayCircleFilled.displayName = 'PlayCircleFilled';\nexport default /*#__PURE__*/React.forwardRef(PlayCircleFilled);","import React, { useState, useEffect } from \"react\";\r\nimport { Table, Divider, Skeleton, Button, Tooltip, message } from \"antd\";\r\nimport {\r\n  PlusCircleOutlined,\r\n  EditOutlined,\r\n  FormOutlined,\r\n  DeleteOutlined,\r\n  FundViewOutlined,\r\n  PlayCircleOutlined,PlayCircleFilled  \r\n} from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"moment\";\r\nimport service from \"auth/FetchInterceptor\";\r\nimport { DELETE_TOURNAMENT, GET_ALL_TOURNAMENT } from \"configs/Endpoints\";\r\nimport { IMAGE_BASE_URL } from \"configs/AppConfig\";\r\n\r\nconst Home = () => {\r\n  const columns = [\r\n    {\r\n      title: \"Avatar\",\r\n      dataIndex: \"picture\",\r\n      key: \"picture\",\r\n      render: (text) => <img style={{objectFit:'cover', width:50, height:50,borderRadius:100 }}src={`${IMAGE_BASE_URL+text}`}/>,\r\n    },\r\n\r\n\r\n    {\r\n      title: \"Tournament ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n\r\n    {\r\n      title: \"Tournament Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n\r\n    {\r\n      title: \"Start Time \",\r\n      dataIndex: \"startsOn\",\r\n      key: \"startsOn\",\r\n      render: (text) => <a href=\"/#\">{Moment(text).format(\"LLLL\")}</a>,\r\n    },\r\n\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"setActive\",\r\n      key: \"setActive\",\r\n      render: (text) => {\r\n        if (text == 1) {\r\n          return <a href=\"/#\">Active</a>;\r\n        } else if (text == 0) {\r\n          return <a href=\"/#\">Ended</a>;\r\n        } else {\r\n          return <a href=\"/#\">Not Started</a>;\r\n        }\r\n      },\r\n    },\r\n    {\r\n      title: \"Required Tickets\",\r\n      dataIndex: \"ticketReq\",\r\n      key: \"ticketReq\",\r\n      render: (text) => <a href=\"/#\">{text}</a>,\r\n    },\r\n    // {\r\n    //   title: \"Action\",\r\n    //   key: \"action\",\r\n    //   render: (text, record) => {\r\n    //     return (\r\n    //       <span>\r\n    //         {record.setActive == 0 ? (\r\n    //           <>\r\n    //             <Link\r\n    //               to={{\r\n    //                 pathname: \"tournament\",\r\n    //                 dataProps: { tournamentdetails: record },\r\n    //               }}\r\n    //             >\r\n    //               <Button\r\n    //                 type=\"primary\"\r\n    //                 style={{ background: \"green\", borderColor: \"green\" }}\r\n    //                 icon={<FundViewOutlined style={{ fontSize: \"18px\" }} />}\r\n    //               >\r\n    //                 Results\r\n    //               </Button>\r\n    //             </Link>\r\n    //             <Divider type=\"vertical\" />\r\n    //           </>\r\n    //         ) : (\r\n    //           <>\r\n    //             <Link\r\n    //               to={{\r\n    //                 pathname: \"tournament/manage/\" + record.id,\r\n    //                 dataProps: { tournamentdetails: record },\r\n    //               }}\r\n    //             >\r\n    //               <Button\r\n    //                 type=\"primary\"\r\n    //                 icon={<EditOutlined style={{ fontSize: \"15px\" }} />}\r\n    //               >\r\n    //                 Manage\r\n    //               </Button>\r\n    //             </Link>\r\n    //             <Divider type=\"vertical\" />{\" \"}\r\n    //           </>\r\n    //         )}\r\n\r\n    //         {record.setActive == null ? (\r\n    //           <>\r\n    //             <Link\r\n    //               to={{\r\n    //                 pathname: \"tournament/edit/\" + record.id,\r\n    //                 dataProps: { tournamentdetails: record },\r\n    //               }}\r\n    //             >\r\n    //               <Button\r\n    //                 style={{ background: \"orange\", borderColor: \"orange\" }}\r\n    //                 type=\"primary\"\r\n    //                 icon={<FormOutlined style={{ fontSize: \"14px\" }} />}\r\n    //               >\r\n    //                 Edit\r\n    //               </Button>\r\n    //             </Link>\r\n    //             <Divider type=\"vertical\" />\r\n    //           </>\r\n    //         ) : (\r\n    //           <span></span>\r\n    //         )}\r\n\r\n    //         {record.setActive == null ? (\r\n    //           <Link\r\n    //             onClick={() => {\r\n    //               deleteTournament(record.id);\r\n    //             }}\r\n    //           >\r\n    //             <Button\r\n    //               type=\"danger\"\r\n    //               icon={<DeleteOutlined style={{ fontSize: \"15px\" }} />}\r\n    //             >\r\n    //               Delete\r\n    //             </Button>\r\n    //           </Link>\r\n    //         ) : (\r\n    //           <span></span>\r\n    //         )}\r\n    //       </span>\r\n    //     );\r\n    //   },\r\n    // },\r\n  ];\r\n  const [tournamentList, setTournamentList] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const deleteTournament = (id) => {\r\n    setloading(true);\r\n\r\n    service\r\n      .delete(DELETE_TOURNAMENT + id)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.message == \"Tournament was deleted successfully!\") {\r\n          message.success(\"Successfully Deleted :) \");\r\n        } else {\r\n          message.error(\"Failed to delete \");\r\n        }\r\n\r\n        //alert(response);\r\n        fetchData();\r\n        setloading(false);\r\n      })\r\n      .catch((e) => {\r\n        setloading(false);\r\n\r\n        message.error(\r\n          \"Unable to load  ! Please check your internet or Server \"\r\n        );\r\n      });\r\n  };\r\n  const fetchData = () => {\r\n    setloading(true);\r\n\r\n    service.get(GET_ALL_TOURNAMENT, )\r\n      .then((res) => {\r\n        setloading(false);\r\n        console.log(res);\r\n        setTournamentList(res.filter(R => R.setActive === 1));\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  if (loading)\r\n    return (\r\n      <div\r\n        style={{\r\n          minHeight: 500,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Skeleton active paragraph={{ rows: 10 }} />\r\n      </div>\r\n    );\r\n  return (\r\n    <div>\r\n            <br></br> \r\n\r\n      <span\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <PlayCircleFilled  style={{ fontSize: 70,color:\"#1a3353\" }}> </PlayCircleFilled >{\" \"}\r\n        <div>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </div>\r\n        <h1 style={{ fontFamily: \"fantasy\", fontSize: 50 }}> ACTIVE TOURNAMENTS </h1>\r\n      </span>\r\n      <br></br> \r\n      <br></br>\r\n\r\n      <br></br>\r\n      <Table columns={columns} dataSource={tournamentList} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}