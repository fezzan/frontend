{"version":3,"sources":["history.js","auth/FetchInterceptor.js","redux/actions/Auth.js","services/JwtAuthService.js","views/auth-views/components/LoginForm.js","views/auth-views/authentication/login-1/index.js"],"names":["history","service","axios","create","baseURL","API_BASE_URL","timeout","headers","ENTRY_ROUTE","interceptors","request","use","config","jwtToken","localStorage","getItem","AUTH_TOKEN","push","window","location","reload","error","notification","message","Promise","reject","response","data","notificationParam","status","description","removeItem","authenticated","token","type","AUTHENTICATED","showAuthMessage","SHOW_AUTH_MESSAGE","hideAuthMessage","HIDE_AUTH_MESSAGE","showLoading","SHOW_LOADING","JwtAuthService","fetch","url","method","LoginForm","props","dispatch","useDispatch","useHistory","useState","load","setload","showForgetPassword","otherSignIn","onForgetPasswordClick","extra","showMessage","loading","redirect","allowRedirect","useEffect","setTimeout","div","initial","opacity","marginBottom","animate","showIcon","layout","name","onFinish","values","console","log","Accept","body","JSON","stringify","then","res","json","msg","success","setItem","Item","label","rules","required","prefix","className","onClick","Password","htmlType","block","defaultProps","mapDispatchToProps","connect","auth","backgroundStyle","backgroundImage","backgroundRepeat","backgroundSize","LoginOne","useSelector","state","theme","currentTheme","style","justify","xs","sm","md","lg","height","src","alt"],"mappings":"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","file":"static/js/34.5be95286.chunk.js","sourcesContent":["import * as history from 'history';\r\n\r\nexport default history.createBrowserHistory();","import axios from 'axios'\r\nimport { API_BASE_URL } from 'configs/AppConfig'\r\nimport history from '../history'\r\nimport { AUTH_TOKEN } from 'redux/constants/Auth'\r\nimport { message, notification } from 'antd';\r\n\r\nconst service = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 60000,\r\n  headers: {\r\n\t\r\n\t  'Accept': 'application/json',\r\n\t  'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Config\r\nconst ENTRY_ROUTE = '/auth/login'\r\nconst TOKEN_PAYLOAD_KEY = 'authorization'\r\nconst PUBLIC_REQUEST_KEY = 'public-request'\r\n\r\n// API Request interceptor\r\nservice.interceptors.request.use(config => {\r\n\tconst jwtToken = localStorage.getItem(AUTH_TOKEN)\r\n\t//debugger;\r\n  if (jwtToken) {\r\n    config.headers[\"Authorization\"] = `Bearer ${jwtToken}`;\r\n  }\r\n\r\n  if (!jwtToken && !config.headers[PUBLIC_REQUEST_KEY]) {\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n  }\r\n\r\n  return config\r\n}, error => {\r\n\t// Do something with request error here\r\n\tnotification.error({\r\n\t\tmessage: 'Error'\r\n\t})\r\n  Promise.reject(error)\r\n})\r\n\r\n// API respone interceptor\r\nservice.interceptors.response.use( (response) => {\r\n\treturn response.data\r\n}, (error) => {\r\n\r\n\tlet notificationParam = {\r\n\t\tmessage: ''\r\n\t}\r\n\t\r\n\t// Remove token and redirect \r\n\tif (error.response.status === 403) {\r\n\t\tnotificationParam.message = 'Authentication Fail'\r\n\t\tnotificationParam.description = 'Please login again'\r\n\t\tlocalStorage.removeItem(AUTH_TOKEN)\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\tif (error.response.status === 404) {\r\n\t\tnotificationParam.message = 'Not Found'\r\n\t}\r\n\r\n\tif (error.response.status === 500) {\r\n\t\tnotificationParam.message = 'Internal Server Error'\r\n\t}\r\n\t\r\n\tif (error.response.status === 508) {\r\n\t\tnotificationParam.message = 'Time Out'\r\n\t}\r\n\r\n\tmessage.error(error.response.data.message)\r\n\r\n\treturn Promise.reject(error);\r\n});\r\n\r\nexport default service","import {\r\n  SIGNIN,\r\n  AUTHENTICATED,\r\n  SIGNOUT,\r\n  SIGNOUT_SUCCESS,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNUP,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nexport const signIn = (user) => {\r\n  return {\r\n    type: SIGNIN,\r\n    payload: user\r\n  }\r\n};\r\n\r\nexport const authenticated = (token) => {\r\n  return {\r\n    type: AUTHENTICATED,\r\n    token\r\n  }\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGNOUT\r\n  };\r\n};\r\n\r\nexport const signOutSuccess = () => {\r\n  return {\r\n    type: SIGNOUT_SUCCESS,\r\n  }\r\n};\r\n\r\nexport const signUp = (user) => {\r\n  return {\r\n    type: SIGNUP,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = (token) => {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithGoogle = () => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE\r\n  };\r\n};\r\n\r\nexport const signInWithGoogleAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithFacebook = () => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK\r\n  };\r\n};\r\n\r\nexport const signInWithFacebookAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const showAuthMessage = (message) => {\r\n  return {\r\n    type: SHOW_AUTH_MESSAGE,\r\n    message\r\n  };\r\n};\r\n\r\nexport const hideAuthMessage = () => {\r\n  return {\r\n    type: HIDE_AUTH_MESSAGE,\r\n  };\r\n};\r\n\r\nexport const showLoading = () => {\r\n  return {\r\n    type: SHOW_LOADING,\r\n  };\r\n};\r\n","import fetch from 'auth/FetchInterceptor'\r\n\r\nconst JwtAuthService = {}\r\n\r\nJwtAuthService.login = function (data) {\r\n\treturn fetch({\r\n\t\turl: '/posts',\r\n\t\tmethod: 'post',\r\n\t\theaders: {\r\n      'public-request': 'true'\r\n    },\r\n\t\tdata: data\r\n\t})\r\n}\r\n\r\nJwtAuthService.signUp = function (data) {\r\n\treturn fetch({\r\n\t\turl: '/auth/signup',\r\n\t\tmethod: 'post',\r\n\t\theaders: {\r\n      'public-request': 'true'\r\n    },\r\n\t\tdata: data\r\n\t})\r\n}\r\n\r\nexport default JwtAuthService","import React, { useEffect,useState } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { Button, Form, Input, Divider, Alert, message as msg } from \"antd\";\r\nimport { MailOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  showLoading,\r\n  showAuthMessage,\r\n  hideAuthMessage,\r\n  authenticated,\r\n} from \"redux/actions/Auth\";\r\nimport JwtAuthService from \"services/JwtAuthService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\nimport { AUTHENTICATED, AUTH_TOKEN } from \"redux/constants/Auth\";\r\nimport { API_BASE_URL } from \"configs/AppConfig\";\r\n\r\nexport const LoginForm = (props) => {\r\n  let dispatch = useDispatch();\r\n  let history = useHistory();\r\n\r\n  const [load, setload] = useState(false);\r\n\r\n  const {\r\n    otherSignIn,\r\n    showForgetPassword,\r\n    hideAuthMessage,\r\n    onForgetPasswordClick,\r\n    showLoading,\r\n    extra,\r\n    loading,\r\n    showMessage,\r\n    message,\r\n    authenticated,\r\n    showAuthMessage,\r\n    token,\r\n    redirect,\r\n    allowRedirect,\r\n  } = props;\r\n\r\n  const onLogin = (values) => {\r\n    setload(true);\r\n    console.log(values);\r\n\r\n    fetch(API_BASE_URL + \"signin\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(values),\r\n    }).then((res) => {\r\n      res.json().then((data) => {\r\n        if (data.token) {\r\n          setload(false);\r\n          msg.success(\"Successfully Done :) \");\r\n\r\n          localStorage.setItem(AUTH_TOKEN, data.token);\r\n          dispatch({\r\n            type: AUTHENTICATED,\r\n            token: data.token,\r\n          });\r\n          history.push(redirect);\r\n        } else {\r\n          setload(false);\r\n          msg.error(\"failed to login\");\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (token !== null && allowRedirect) {\r\n      history.push(redirect);\r\n    }\r\n    if (showMessage) {\r\n      setTimeout(() => {\r\n        hideAuthMessage();\r\n      }, 3000);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        initial={{ opacity: 0, marginBottom: 0 }}\r\n        animate={{\r\n          opacity: showMessage ? 1 : 0,\r\n          marginBottom: showMessage ? 20 : 0,\r\n        }}\r\n      >\r\n        <Alert type=\"error\" showIcon message={message}></Alert>\r\n      </motion.div>\r\n      <Form layout=\"vertical\" name=\"login-form\" onFinish={onLogin}>\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your email\",\r\n            },\r\n            {\r\n              type: \"email\",\r\n              message: \"Please enter a validate email!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input prefix={<MailOutlined className=\"text-primary\" />} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          label={\r\n            <div\r\n              className={`${\r\n                showForgetPassword\r\n                  ? \"d-flex justify-content-between w-100 align-items-center\"\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              <span>Password</span>\r\n              {showForgetPassword && (\r\n                <span\r\n                  onClick={() => onForgetPasswordClick}\r\n                  className=\"cursor-pointer font-size-sm font-weight-normal text-muted\"\r\n                >\r\n                  Forget Password?\r\n                </span>\r\n              )}\r\n            </div>\r\n          }\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your password\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password prefix={<LockOutlined className=\"text-primary\" />} />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" block loading={load}>\r\n            Log In\r\n          </Button>\r\n        </Form.Item>\r\n\r\n      \r\n        {extra}\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  otherSignIn: PropTypes.bool,\r\n  showForgetPassword: PropTypes.bool,\r\n  extra: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n};\r\n\r\nLoginForm.defaultProps = {\r\n  otherSignIn: true,\r\n  showForgetPassword: false,\r\n};\r\n\r\nconst mapStateToProps = ({ auth }) => {\r\n  const { loading, message, showMessage, token, redirect } = auth;\r\n  return { loading, message, showMessage, token, redirect };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  showAuthMessage,\r\n  showLoading,\r\n  hideAuthMessage,\r\n  authenticated,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","import React from 'react'\r\nimport LoginForm from '../../components/LoginForm'\r\nimport { Card, Row, Col } from \"antd\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst backgroundStyle = {\r\n\tbackgroundImage: 'url(/img/others/img-17.jpg)',\r\n\tbackgroundRepeat: 'no-repeat',\r\n\tbackgroundSize: 'cover'\r\n}\r\n\r\nconst LoginOne = props => {\r\n\tconst theme = useSelector(state => state.theme.currentTheme)\r\n\treturn (\r\n\t\t<div className=\"h-100\" style={backgroundStyle}>\r\n\t\t\t<div className=\"container d-flex flex-column justify-content-center h-100\">\r\n\t\t\t\t<Row justify=\"center\">\r\n\t\t\t\t\t<Col xs={20} sm={20} md={20} lg={10}>\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<div className=\"my-4\">\r\n\t\t\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t<img className=\"img-fluid\" style={{height:150}}src={`/img/${theme === 'light' ? 'xologocustom.png': 'xologocustom.png'}`} alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t{/* <p>Don't have an account yet? <a href=\"/auth/register-1\">Sign Up</a></p> */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<Row justify=\"center\">\r\n\t\t\t\t\t\t\t\t\t<Col xs={24} sm={24} md={20} lg={20}>\r\n\t\t\t\t\t\t\t\t\t\t<LoginForm {...props} />\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default LoginOne\r\n"],"sourceRoot":""}